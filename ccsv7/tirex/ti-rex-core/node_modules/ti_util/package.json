{
  "_args": [
    [
      {
        "raw": "ti_util@git+ssh://git@gitorious.design.ti.com/guicomposer-nw/ti_util.git",
        "scope": null,
        "escapedName": "ti_util",
        "name": "ti_util",
        "rawSpec": "git+ssh://git@gitorious.design.ti.com/guicomposer-nw/ti_util.git",
        "spec": "ssh://git@gitorious.design.ti.com/guicomposer-nw/ti_util.git",
        "type": "git"
      },
      "/home/auser/src/ti-rex-core"
    ]
  ],
  "_from": "git+ssh://git@gitorious.design.ti.com/guicomposer-nw/ti_util.git",
  "_id": "ti_util@0.1.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/ti_util",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ti_util@git+ssh://git@gitorious.design.ti.com/guicomposer-nw/ti_util.git",
    "scope": null,
    "escapedName": "ti_util",
    "name": "ti_util",
    "rawSpec": "git+ssh://git@gitorious.design.ti.com/guicomposer-nw/ti_util.git",
    "spec": "ssh://git@gitorious.design.ti.com/guicomposer-nw/ti_util.git",
    "type": "git"
  },
  "_requiredBy": [
    "/",
    "/ti_logger"
  ],
  "_resolved": "git+ssh://git@gitorious.design.ti.com/guicomposer-nw/ti_util.git#6cbd816ec247d011fab59b4972fb24ad637368a1",
  "_shasum": "f88004a77e4c32b99f851803a9613e221abb62fb",
  "_shrinkwrap": null,
  "_spec": "ti_util@git+ssh://git@gitorious.design.ti.com/guicomposer-nw/ti_util.git",
  "_where": "/home/auser/src/ti-rex-core",
  "author": {
    "name": "Boualem S.",
    "email": "boualem@ti.com"
  },
  "dependencies": {
    "ti_fsutil": "git+ssh://git@gitorious.design.ti.com/guicomposer-nw/ti_fsutil.git"
  },
  "description": "A TI utility library for Node.js and Node-webkit",
  "devDependencies": {
    "chai": "^1.9.1",
    "mocha": "~1.11.0",
    "spec-xunit-file": "0.0.1-1"
  },
  "engines": {
    "node": ">= 0.6.0"
  },
  "gitHead": "6cbd816ec247d011fab59b4972fb24ad637368a1",
  "keywords": [
    "util",
    "utility",
    "helper"
  ],
  "license": "BSD-3-Clause",
  "main": "./lib/ti_util",
  "name": "ti_util",
  "optionalDependencies": {},
  "private": true,
  "readme": "# ti_util \n\nA TI helper/util library for node.js and Node-Webkit\n\nThis utility includes many functions that a developer may find useful\n\n## Installation\n\n```bash\nnpm install git://gitorious.design.ti.com/guicomposer-nw/ti_util.git\n```\n\n## Usage\nThe ti_util module .\n\n``` js\n  var tiutil = require('ti_util');\n\n  if(tiutil.isString(myVariable))\n  {\n\t...\n  }\n```\n\n## List of functions\nti_util includes the following helper functions:\n\n* getUserHome\n* tiDirectoryHome \n* getArguments\n* getEnv\n* isNodeWebkitApp\n* getNodeWebkitVersion\n* getAppName\n* getAppVersion\n* getAppDataDirectory\n* getLocalAppDataDirectory\n* getUserTempDirectory\n* getUserName\n* getComputerName\n* getOS\n* isWindows\n* isLinux\n* isMac\n* isString\n* isFunction\n* isNumber\n* isBoolean\n* isDefined\n* isEmpty\n* isUndefined\n* isObject\n* isDate\n* isError\n* isRegExp\n* isArray\n* isRealObject\n* isJSON\n\n\n## Functions Details\n\n* __getUserHome__ : returns the user home directory\n* __tiDirectoryHome__ : returns TI directory under the user Home directory\n* __getArguments__ : returns the argumments of the command that started the application\n* __getEnv__ : Returns an object containing all the environment variable and their values\n* __isNodeWebkitApp__ : returns true if the running app is a Node-Webkit app\n* __getNodeWebkitVersion__ : returns the version of nw\n* __getAppName__ : returns the name of the application as defined in application.json of the running app.\n* __getAppVersion__ : return the version of the application as defined in application.json of the running app.\n* __getAppDataDirectory__ : returns the APPData directory\n* __getLocalAppDataDirectory__ : returns the local APPData directory\n* __getUserTempDirectory__ : returns the user temporary directory\n* __getUserName__ : returns the username\n* __getComputerName__ : returns the computer name\n* __getOS__ : returns a string with the os name\n* __isWindows__ : returns true if the os is windows\n* __isLinux__ : returns true if the os is linus\n* __isMac__ : returns true if the os is Mac\n* __isString__ : returns true if the argument is a String\n* __isFunction__ : returns true if the argument is a function\n* __isNumber__ : returns true if the argument is a number\n* __isBoolean__ : returns true if the argument is a Boolean\n* __isDefined__ : returns true if the argument not set to undefined\n* __isEmpty__ : returns true if the argument is not empty\n* __isUndefined__ : returns true if the argument is set to undefined\n* __isObject__ : returns true if the argument is an Object\n* __isDate__ : returns true if the argument is a Date\n* __isError__ : returns true if the argument is an Error\n* __isRegExp__ : returns true if the argument is a RegExp\n* __isArray__ : returns true if the argument is an Array\n* __isRealObject__ : returns true if the argument is a Real Object. This mean an Object that is not a String or a function, or a boolean, etc\n* __isJSON__ : returns true if the argument is a valid JSON String\n\n\n\n\n",
  "readmeFilename": "README.md",
  "scripts": {
    "auto_test": "mocha -R xunit --recursive -t 2000",
    "coverage": "istanbul cover --report lcov --report cobertura node_modules/mocha/bin/_mocha -- -R spec --recursive -t 20000",
    "test": "mocha -R spec-xunit-file --recursive -t 2000"
  },
  "version": "0.1.1"
}
