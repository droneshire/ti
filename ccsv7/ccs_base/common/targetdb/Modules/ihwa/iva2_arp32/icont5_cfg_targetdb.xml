<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<module id="DSS" XML_version="1" HW_revision="Unknown" description="ipxact12_to_ccs_generated">

    <register id="__ALL___CTRL_MMR" description="" width="32" offset="0x0" page = "1" acronym="__ALL___CTRL_MMR">
        <bitfield id="MMR_POSTED" rwaccess="RW" range="" description="When set, Posted MMR writes from CPU will be enabled. When cleared, all MMR writes from CPU are performed as non-posted writes." resetval="0" end="1" begin="1" width="1"/>
        <bitfield id="SL2_POSTED" rwaccess="RW" range="" description="When set, SL2 posted writes from CPU will be enabled. When cleared, all SL2 writes from CPU are performed as non-posted writes (Write Queue will be disabled after completing the pending writes)." resetval="0" end="2" begin="2" width="1"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="6" begin="31" width="26"/>
        <bitfield id="Reserved2" rwaccess="RW" range="" description="" resetval="0" end="0" begin="0" width="1"/>
        <bitfield id="Reserved3" rwaccess="RW" range="" description="" resetval="0" end="5" begin="5" width="1"/>
        <bitfield id="CODE_PREFETCH_DISABLE" rwaccess="RW" range="" description="Disable code prefetch from SL2 space." resetval="0" end="4" begin="4" width="1"/>
        <bitfield id="Reserved1" rwaccess="RW" range="" description="" resetval="0" end="3" begin="3" width="1"/>
    </register>
    <register id="__ALL___GLBL_INTC_CTRL" description="Global Interrupt controller enable register." width="32" offset="0xC" page = "1" acronym="__ALL___GLBL_INTC_CTRL">
        <bitfield id="SET_MAIN_INTC_0" rwaccess="RW" range="" description="Write 1 to enable Main_0 Interrupt controller.&#xD;&#xA;Read returns the Interrupt controllers enabled/disabled state." resetval="0" end="0" begin="0" width="1"/>
        <bitfield id="SET_MAIN_INTC_1" rwaccess="RW" range="" description="Write 1 to enable Main_1 Interrupt controller.&#xD;&#xA;Read returns the Interrupt controllers enabled/disabled state." resetval="0" end="1" begin="1" width="1"/>
        <bitfield id="SET_MAIN_INTC_2" rwaccess="RW" range="" description="Write 1 to enable Main_2 Interrupt controller.&#xD;&#xA;Read returns the Interrupt controllers enabled/disabled state." resetval="0" end="2" begin="2" width="1"/>
        <bitfield id="SET_MAIN_INTC_3" rwaccess="RW" range="" description="Write 1 to enable Main_3 Interrupt controller.&#xD;&#xA;Read returns the Interrupt controllers enabled/disabled state." resetval="0" end="3" begin="3" width="1"/>
        <bitfield id="SET_MAIN_INTC_4" rwaccess="RW" range="" description="Write 1 to enable Main_4 Interrupt controller.&#xD;&#xA;Read returns the Interrupt controllers enabled/disabled state." resetval="0" end="4" begin="4" width="1"/>
        <bitfield id="SET_MAIN_INTC_5" rwaccess="RW" range="" description="Write 1 to enable Main_5 Interrupt controller.&#xD;&#xA;Read returns the Interrupt controllers enabled/disabled state." resetval="0" end="5" begin="5" width="1"/>
        <bitfield id="Reserved" rwaccess="RW" range="" description="" resetval="0" end="6" begin="15" width="10"/>
        <bitfield id="CLR_MAIN_INTC_0" rwaccess="RW" range="" description="Write 1 to disable Main_0 Interrupt controller." resetval="0" end="16" begin="16" width="1"/>
        <bitfield id="CLR_MAIN_INTC_1" rwaccess="RW" range="" description="Write 1 to disable Main_1 Interrupt controller." resetval="0" end="17" begin="17" width="1"/>
        <bitfield id="CLR_MAIN_INTC_2" rwaccess="RW" range="" description="Write 1 to disable Main_2 Interrupt controller." resetval="0" end="18" begin="18" width="1"/>
        <bitfield id="CLR_MAIN_INTC_3" rwaccess="RW" range="" description="Write 1 to disable Main_3 Interrupt controller." resetval="0" end="19" begin="19" width="1"/>
        <bitfield id="CLR_MAIN_INTC_4" rwaccess="RW" range="" description="Write 1 to disable Main_4 Interrupt controller." resetval="0" end="20" begin="20" width="1"/>
        <bitfield id="CLR_MAIN_INTC_5" rwaccess="RW" range="" description="Write 1 to disable Main_5 Interrupt controller." resetval="0" end="21" begin="21" width="1"/>
        <bitfield id="Reserved1" rwaccess="RW" range="" description="" resetval="0" end="22" begin="31" width="10"/>
    </register>
    <register id="__ALL___ICONT_MAIN_INTR_RAW_STATUS_0" description="This provides the status of the ICONT Main interrupt sources, irrespective of enable bit.&#xD;&#xA;Write 1 to set the interrupt in Software (for test/debug)." width="32" offset="0x10" page = "1" acronym="__ALL___ICONT_MAIN_INTR_RAW_STATUS_0">
        <bitfield id="RAW_STATUS" rwaccess="RW" range="" description="" resetval="0" end="0" begin="25" width="26"/>
        <bitfield id="DM_LCH" rwaccess="RW" range="" description="Data Mover Logical Channel Data Transfer completion." resetval="0" end="26" begin="29" width="4"/>
        <bitfield id="ICONT_LOCAL" rwaccess="R" range="" description="ICONT Local Interrupt Controller interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="ICONT_SYNC_INTR" rwaccess="R" range="" description="ICONT Sync interrupt Source" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_MAIN_INTR_ENB_STATUS_0" description="This provides the status of the ICONT Main interrupt sources enabled to interrupt.&#xD;&#xA;Write 1 to clear the interrupt in Software." width="32" offset="0x14" page = "1" acronym="__ALL___ICONT_MAIN_INTR_ENB_STATUS_0">
        <bitfield id="ENB_STATUS" rwaccess="RW" range="" description="" resetval="0" end="0" begin="25" width="26"/>
        <bitfield id="DM_LCH" rwaccess="RW" range="" description="Data Mover Logical Channel Data Transfer completion." resetval="0" end="26" begin="29" width="4"/>
        <bitfield id="ICONT_LOCAL" rwaccess="R" range="" description="ICONT Local Interrupt Controller interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="ICONT_SYNC_INTR" rwaccess="R" range="" description="ICONT Sync interrupt Source" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_MAIN_INTR_ENB_SET_0" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to set the corresponding interrupt enable bit." width="32" offset="0x18" page = "1" acronym="__ALL___ICONT_MAIN_INTR_ENB_SET_0">
        <bitfield id="ENB" rwaccess="RW" range="" description="" resetval="0" end="0" begin="25" width="26"/>
        <bitfield id="DM_LCH" rwaccess="RW" range="" description="Data Mover Logical Channel Data Transfer completion." resetval="0" end="26" begin="29" width="4"/>
        <bitfield id="ICONT_LOCAL" rwaccess="RW" range="" description="ICONT Local Interrupt Controller interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="ICONT_SYNC_INTR" rwaccess="RW" range="" description="ICONT Sync interrupt Source" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_MAIN_INTR_ENB_CLR_0" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to Clear the corresponding interrupt enable bit." width="32" offset="0x1C" page = "1" acronym="__ALL___ICONT_MAIN_INTR_ENB_CLR_0">
        <bitfield id="ENB" rwaccess="RW" range="" description="" resetval="0" end="0" begin="25" width="26"/>
        <bitfield id="DM_LCH" rwaccess="RW" range="" description="Data Mover Logical Channel Data Transfer completion." resetval="0" end="26" begin="29" width="4"/>
        <bitfield id="ICONT_LOCAL" rwaccess="RW" range="" description="ICONT Local Interrupt Controller interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="ICONT_SYNC_INTR" rwaccess="RW" range="" description="ICONT Sync interrupt Source" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_LOCAL_INTR_RAW_STATUS_0" description="This provides the status of the ICONT internal interrupt sources, irrespective of enable bit.&#xD;&#xA;Write 1 to set the interrupt in Software (for test/debug)." width="32" offset="0x20" page = "1" acronym="__ALL___ICONT_LOCAL_INTR_RAW_STATUS_0">
        <bitfield id="CB_BSTRM_ENB_INTR" rwaccess="RW" range="" description="BitStream Custom Block Interrupt Sources.&#xD;&#xA;0 : Page_Done&#xD;&#xA;1 : UnderRun&#xD;&#xA;2 : Start_Code&#xD;&#xA;3 : Store_Complete.&#xD;&#xA;4 : Thress_Cross&#xD;&#xA;5 : DDR_Empty&#xD;&#xA;6 : Active to InActive transition.&#xD;&#xA;7 : Start_Code_Overrun&#xD;&#xA;Refer Custom Block Bitstream section for details on its assertion &amp; clearing." resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="SBH_LOCAL_TASK_ENB_INTR" rwaccess="RW" range="" description="Local SBH Task Notification" resetval="0" end="8" begin="11" width="4"/>
        <bitfield id="Future_Use" rwaccess="RW" range="" description="Reserved for Future use.&#xD;&#xA;Refer SL2BC section for more details." resetval="0" end="12" begin="17" width="6"/>
        <bitfield id="CME_INTR" rwaccess="RW" range="" description="CME Counter non-zero interrupt." resetval="0" end="18" begin="23" width="6"/>
        <bitfield id="SEM_COUNT_NZ" rwaccess="RW" range="" description="Interrupt source from the Semaphore counter.&#xD;&#xA;Refer Semaphore counter section for more details." resetval="0" end="24" begin="29" width="6"/>
        <bitfield id="WatchDogTimer_INTR" rwaccess="RW" range="" description="WatchDog Timer interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="SOFT_INTERRUPT" rwaccess="RW" range="" description="Software Interrupt Source." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_LOCAL_INTR_ENB_STATUS_0" description="This provides the status of the ICONT internal interrupt sources enabled to interrupt.&#xD;&#xA;Write 1 to clear the interrupt in Software." width="32" offset="0x24" page = "1" acronym="__ALL___ICONT_LOCAL_INTR_ENB_STATUS_0">
        <bitfield id="SEM_COUNT_NZ" rwaccess="RW" range="" description="Interrupt source from the Semaphore counter.&#xD;&#xA;Refer Semaphore counter section for more details." resetval="0" end="24" begin="29" width="6"/>
        <bitfield id="SBH_LOCAL_TASK_ENB_INTR" rwaccess="RW" range="" description="Local SBH Task Notification" resetval="0" end="8" begin="11" width="4"/>
        <bitfield id="CB_BSTRM_ENB_INTR" rwaccess="RW" range="" description="BitStream Custom Block Interrupt Sources.&#xD;&#xA;0 : Page_Done&#xD;&#xA;1 : UnderRun&#xD;&#xA;2 : Start_Code&#xD;&#xA;3 : Store_Complete.&#xD;&#xA;4 : Thress_Cross&#xD;&#xA;5 : DDR_Empty&#xD;&#xA;6 : Active to InActive transition.&#xD;&#xA;7 : Start_Code_Overrun&#xD;&#xA;Refer Custom Block Bitstream section for details on its assertion &amp; clearing." resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="WatchDogTimer_INTR" rwaccess="RW" range="" description="WatchDog Timer interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="SOFT_INTERRUPT" rwaccess="RW" range="" description="Software Interrupt Source." resetval="0" end="31" begin="31" width="1"/>
        <bitfield id="Future_Use" rwaccess="RW" range="" description="Reserved for Future use.&#xD;&#xA;Refer SL2BC section for more details." resetval="0" end="12" begin="17" width="6"/>
        <bitfield id="CME_INTR" rwaccess="RW" range="" description="CME Counter non-zero interrupt." resetval="0" end="18" begin="23" width="6"/>
    </register>
    <register id="__ALL___ICONT_LOCAL_INTR_ENB_SET_0" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to set the corresponding interrupt enable bit." width="32" offset="0x28" page = "1" acronym="__ALL___ICONT_LOCAL_INTR_ENB_SET_0">
        <bitfield id="CB_BSTRM" rwaccess="RW" range="" description="Enable BitStream Custom Block Interrupt Sources.&#xD;&#xA;0 : Page_Done&#xD;&#xA;1 : UnderRun&#xD;&#xA;2 : Start_Code&#xD;&#xA;3 : Store_Complete.&#xD;&#xA;4 : Thress_Cross&#xD;&#xA;5 : DDR_Empty&#xD;&#xA;6 : Active to InActive transition.&#xD;&#xA;7 : Start_Code_Overrun" resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="SBH_LOCAL_TASK" rwaccess="RW" range="" description="Enable Local SBH Task Notification." resetval="0" end="8" begin="11" width="4"/>
        <bitfield id="Future_Use" rwaccess="RW" range="" description="Reserved for Future use.&#xD;&#xA;Refer SL2BC section for more details." resetval="0" end="12" begin="17" width="6"/>
        <bitfield id="CME_INTR" rwaccess="RW" range="" description="CME Counter non-zero interrupt." resetval="0" end="18" begin="23" width="6"/>
        <bitfield id="SEM_COUNT_NZ" rwaccess="RW" range="" description="Interrupt source from the Semaphore counter." resetval="0" end="24" begin="29" width="6"/>
        <bitfield id="WatchDogTimer_INTR" rwaccess="RW" range="" description="WatchDog Timer interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="SOFT_INTERRUPT" rwaccess="RW" range="" description="Enable Software Interrupt Source.." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_LOCAL_INTR_ENB_CLR_0" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to Clear the corresponding interrupt enable bit." width="32" offset="0x2C" page = "1" acronym="__ALL___ICONT_LOCAL_INTR_ENB_CLR_0">
        <bitfield id="SBH_LOCAL_TASK" rwaccess="RW" range="" description="Enable Local SBH Task Notification." resetval="0" end="8" begin="11" width="4"/>
        <bitfield id="Future_Use" rwaccess="RW" range="" description="Reserved for Future use.&#xD;&#xA;Refer SL2BC section for more details." resetval="0" end="12" begin="17" width="6"/>
        <bitfield id="CME_INTR" rwaccess="RW" range="" description="CME Counter non-zero interrupt." resetval="0" end="18" begin="23" width="6"/>
        <bitfield id="SEM_COUNT_NZ" rwaccess="RW" range="" description="Interrupt source from the Semaphore counter." resetval="0" end="24" begin="29" width="6"/>
        <bitfield id="WatchDogTimer_INTR" rwaccess="RW" range="" description="WatchDog Timer interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="SOFT_INTERRUPT" rwaccess="RW" range="" description="Enable Software Interrupt Source.." resetval="0" end="31" begin="31" width="1"/>
        <bitfield id="CB_BSTRM" rwaccess="RW" range="" description="Enable BitStream Custom Block Interrupt Sources.&#xD;&#xA;0 : Page_Done&#xD;&#xA;1 : UnderRun&#xD;&#xA;2 : Start_Code&#xD;&#xA;3 : Store_Complete.&#xD;&#xA;4 : Thress_Cross&#xD;&#xA;5 : DDR_Empty&#xD;&#xA;6 : Active to InActive transition.&#xD;&#xA;7 : Start_Code_Overrun" resetval="0" end="0" begin="7" width="8"/>
    </register>
    <register id="__ALL___ICONT_MAIN_INTR_RAW_STATUS_1" description="This provides the status of the ICONT Main interrupt sources, irrespective of enable bit.&#xD;&#xA;Write 1 to set the interrupt in Software (for test/debug)." width="32" offset="0x30" page = "1" acronym="__ALL___ICONT_MAIN_INTR_RAW_STATUS_1">
        <bitfield id="RAW_STATUS" rwaccess="RW" range="" description="" resetval="0" end="0" begin="25" width="26"/>
        <bitfield id="DM_LCH" rwaccess="RW" range="" description="Data Mover Logical Channel Data Transfer completion." resetval="0" end="26" begin="29" width="4"/>
        <bitfield id="ICONT_LOCAL" rwaccess="R" range="" description="ICONT Local Interrupt Controller interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="ICONT_SYNC_INTR" rwaccess="R" range="" description="ICONT Sync interrupt Source" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_MAIN_INTR_ENB_STATUS_1" description="This provides the status of the ICONT Main interrupt sources enabled to interrupt.&#xD;&#xA;Write 1 to clear the interrupt in Software." width="32" offset="0x34" page = "1" acronym="__ALL___ICONT_MAIN_INTR_ENB_STATUS_1">
        <bitfield id="ENB_STATUS" rwaccess="RW" range="" description="" resetval="0" end="0" begin="25" width="26"/>
        <bitfield id="DM_LCH" rwaccess="RW" range="" description="Data Mover Logical Channel Data Transfer completion." resetval="0" end="26" begin="29" width="4"/>
        <bitfield id="ICONT_LOCAL" rwaccess="R" range="" description="ICONT Local Interrupt Controller interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="ICONT_SYNC_INTR" rwaccess="R" range="" description="ICONT Sync interrupt Source" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_MAIN_INTR_ENB_SET_1" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to set the corresponding interrupt enable bit." width="32" offset="0x38" page = "1" acronym="__ALL___ICONT_MAIN_INTR_ENB_SET_1">
        <bitfield id="ENB" rwaccess="RW" range="" description="" resetval="0" end="0" begin="25" width="26"/>
        <bitfield id="DM_LCH" rwaccess="RW" range="" description="Data Mover Logical Channel Data Transfer completion." resetval="0" end="26" begin="29" width="4"/>
        <bitfield id="ICONT_LOCAL" rwaccess="RW" range="" description="ICONT Local Interrupt Controller interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="ICONT_SYNC_INTR" rwaccess="RW" range="" description="ICONT Sync interrupt Source" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_MAIN_INTR_ENB_CLR_1" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to Clear the corresponding interrupt enable bit." width="32" offset="0x3C" page = "1" acronym="__ALL___ICONT_MAIN_INTR_ENB_CLR_1">
        <bitfield id="ENB" rwaccess="RW" range="" description="" resetval="0" end="0" begin="25" width="26"/>
        <bitfield id="DM_LCH" rwaccess="RW" range="" description="Data Mover Logical Channel Data Transfer completion." resetval="0" end="26" begin="29" width="4"/>
        <bitfield id="ICONT_LOCAL" rwaccess="RW" range="" description="ICONT Local Interrupt Controller interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="ICONT_SYNC_INTR" rwaccess="RW" range="" description="ICONT Sync interrupt Source" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_LOCAL_INTR_RAW_STATUS_1" description="This provides the status of the ICONT internal interrupt sources, irrespective of enable bit.&#xD;&#xA;Write 1 to set the interrupt in Software (for test/debug)." width="32" offset="0x40" page = "1" acronym="__ALL___ICONT_LOCAL_INTR_RAW_STATUS_1">
        <bitfield id="CB_BSTRM_ENB_INTR" rwaccess="RW" range="" description="BitStream Custom Block Interrupt Sources.&#xD;&#xA;0 : Page_Done&#xD;&#xA;1 : UnderRun&#xD;&#xA;2 : Start_Code&#xD;&#xA;3 : Store_Complete.&#xD;&#xA;4 : Thress_Cross&#xD;&#xA;5 : DDR_Empty&#xD;&#xA;6 : Active to InActive transition.&#xD;&#xA;7 : Start_Code_Overrun&#xD;&#xA;Refer Custom Block Bitstream section for details on its assertion &amp; clearing." resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="SBH_LOCAL_TASK_ENB_INTR" rwaccess="RW" range="" description="Local SBH Task Notification" resetval="0" end="8" begin="11" width="4"/>
        <bitfield id="Future_Use" rwaccess="RW" range="" description="Reserved for Future use.&#xD;&#xA;Refer SL2BC section for more details." resetval="0" end="12" begin="17" width="6"/>
        <bitfield id="CME_INTR" rwaccess="RW" range="" description="CME Counter non-zero interrupt." resetval="0" end="18" begin="23" width="6"/>
        <bitfield id="SEM_COUNT_NZ" rwaccess="RW" range="" description="Interrupt source from the Semaphore counter.&#xD;&#xA;Refer Semaphore counter section for more details." resetval="0" end="24" begin="29" width="6"/>
        <bitfield id="WatchDogTimer_INTR" rwaccess="RW" range="" description="WatchDog Timer interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="SOFT_INTERRUPT" rwaccess="RW" range="" description="Software Interrupt Source." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_LOCAL_INTR_ENB_STATUS_1" description="This provides the status of the ICONT internal interrupt sources enabled to interrupt.&#xD;&#xA;Write 1 to clear the interrupt in Software." width="32" offset="0x44" page = "1" acronym="__ALL___ICONT_LOCAL_INTR_ENB_STATUS_1">
        <bitfield id="CB_BSTRM_ENB_INTR" rwaccess="RW" range="" description="BitStream Custom Block Interrupt Sources.&#xD;&#xA;0 : Page_Done&#xD;&#xA;1 : UnderRun&#xD;&#xA;2 : Start_Code&#xD;&#xA;3 : Store_Complete.&#xD;&#xA;4 : Thress_Cross&#xD;&#xA;5 : DDR_Empty&#xD;&#xA;6 : Active to InActive transition.&#xD;&#xA;7 : Start_Code_Overrun&#xD;&#xA;Refer Custom Block Bitstream section for details on its assertion &amp; clearing." resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="SBH_LOCAL_TASK_ENB_INTR" rwaccess="RW" range="" description="Local SBH Task Notification" resetval="0" end="8" begin="11" width="4"/>
        <bitfield id="Future_Use" rwaccess="RW" range="" description="Reserved for Future use.&#xD;&#xA;Refer SL2BC section for more details." resetval="0" end="12" begin="17" width="6"/>
        <bitfield id="CME_INTR" rwaccess="RW" range="" description="CME Counter non-zero interrupt." resetval="0" end="18" begin="23" width="6"/>
        <bitfield id="SEM_COUNT_NZ" rwaccess="RW" range="" description="Interrupt source from the Semaphore counter.&#xD;&#xA;Refer Semaphore counter section for more details." resetval="0" end="24" begin="29" width="6"/>
        <bitfield id="WatchDogTimer_INTR" rwaccess="RW" range="" description="WatchDog Timer interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="SOFT_INTERRUPT" rwaccess="RW" range="" description="Software Interrupt Source." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_LOCAL_INTR_ENB_SET_1" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to set the corresponding interrupt enable bit." width="32" offset="0x48" page = "1" acronym="__ALL___ICONT_LOCAL_INTR_ENB_SET_1">
        <bitfield id="CB_BSTRM" rwaccess="RW" range="" description="Enable BitStream Custom Block Interrupt Sources.&#xD;&#xA;0 : Page_Done&#xD;&#xA;1 : UnderRun&#xD;&#xA;2 : Start_Code&#xD;&#xA;3 : Store_Complete.&#xD;&#xA;4 : Thress_Cross&#xD;&#xA;5 : DDR_Empty&#xD;&#xA;6 : Active to InActive transition.&#xD;&#xA;7 : Start_Code_Overrun" resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="SBH_LOCAL_TASK" rwaccess="RW" range="" description="Enable Local SBH Task Notification." resetval="0" end="8" begin="11" width="4"/>
        <bitfield id="Future_Use" rwaccess="RW" range="" description="Reserved for Future use.&#xD;&#xA;Refer SL2BC section for more details." resetval="0" end="12" begin="17" width="6"/>
        <bitfield id="CME_INTR" rwaccess="RW" range="" description="CME Counter non-zero interrupt." resetval="0" end="18" begin="23" width="6"/>
        <bitfield id="SEM_COUNT_NZ" rwaccess="RW" range="" description="Interrupt source from the Semaphore counter." resetval="0" end="24" begin="29" width="6"/>
        <bitfield id="WatchDogTimer_INTR" rwaccess="RW" range="" description="WatchDog Timer interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="SOFT_INTERRUPT" rwaccess="RW" range="" description="Enable Software Interrupt Source.." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_LOCAL_INTR_ENB_CLR_1" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to Clear the corresponding interrupt enable bit." width="32" offset="0x4C" page = "1" acronym="__ALL___ICONT_LOCAL_INTR_ENB_CLR_1">
        <bitfield id="CB_BSTRM" rwaccess="RW" range="" description="Enable BitStream Custom Block Interrupt Sources.&#xD;&#xA;0 : Page_Done&#xD;&#xA;1 : UnderRun&#xD;&#xA;2 : Start_Code&#xD;&#xA;3 : Store_Complete.&#xD;&#xA;4 : Thress_Cross&#xD;&#xA;5 : DDR_Empty&#xD;&#xA;6 : Active to InActive transition.&#xD;&#xA;7 : Start_Code_Overrun" resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="SBH_LOCAL_TASK" rwaccess="RW" range="" description="Enable Local SBH Task Notification." resetval="0" end="8" begin="11" width="4"/>
        <bitfield id="Future_Use" rwaccess="RW" range="" description="Reserved for Future use.&#xD;&#xA;Refer SL2BC section for more details." resetval="0" end="12" begin="17" width="6"/>
        <bitfield id="CME_INTR" rwaccess="RW" range="" description="CME Counter non-zero interrupt." resetval="0" end="18" begin="23" width="6"/>
        <bitfield id="SEM_COUNT_NZ" rwaccess="RW" range="" description="Interrupt source from the Semaphore counter." resetval="0" end="24" begin="29" width="6"/>
        <bitfield id="WatchDogTimer_INTR" rwaccess="RW" range="" description="WatchDog Timer interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="SOFT_INTERRUPT" rwaccess="RW" range="" description="Enable Software Interrupt Source.." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_MAIN_INTR_RAW_STATUS_2" description="This provides the status of the ICONT Main interrupt sources, irrespective of enable bit.&#xD;&#xA;Write 1 to set the interrupt in Software (for test/debug)." width="32" offset="0x50" page = "1" acronym="__ALL___ICONT_MAIN_INTR_RAW_STATUS_2">
        <bitfield id="RAW_STATUS" rwaccess="RW" range="" description="" resetval="0" end="0" begin="25" width="26"/>
        <bitfield id="DM_LCH" rwaccess="RW" range="" description="Data Mover Logical Channel Data Transfer completion." resetval="0" end="26" begin="29" width="4"/>
        <bitfield id="ICONT_LOCAL" rwaccess="R" range="" description="ICONT Local Interrupt Controller interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="ICONT_SYNC_INTR" rwaccess="R" range="" description="ICONT Sync interrupt Source" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_MAIN_INTR_ENB_STATUS_2" description="This provides the status of the ICONT Main interrupt sources enabled to interrupt.&#xD;&#xA;Write 1 to clear the interrupt in Software." width="32" offset="0x54" page = "1" acronym="__ALL___ICONT_MAIN_INTR_ENB_STATUS_2">
        <bitfield id="ENB_STATUS" rwaccess="RW" range="" description="" resetval="0" end="0" begin="25" width="26"/>
        <bitfield id="DM_LCH" rwaccess="RW" range="" description="Data Mover Logical Channel Data Transfer completion." resetval="0" end="26" begin="29" width="4"/>
        <bitfield id="ICONT_LOCAL" rwaccess="R" range="" description="ICONT Local Interrupt Controller interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="ICONT_SYNC_INTR" rwaccess="R" range="" description="ICONT Sync interrupt Source" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_MAIN_INTR_ENB_SET_2" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to set the corresponding interrupt enable bit." width="32" offset="0x58" page = "1" acronym="__ALL___ICONT_MAIN_INTR_ENB_SET_2">
        <bitfield id="ENB" rwaccess="RW" range="" description="" resetval="0" end="0" begin="25" width="26"/>
        <bitfield id="DM_LCH" rwaccess="RW" range="" description="Data Mover Logical Channel Data Transfer completion." resetval="0" end="26" begin="29" width="4"/>
        <bitfield id="ICONT_LOCAL" rwaccess="RW" range="" description="ICONT Local Interrupt Controller interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="ICONT_SYNC_INTR" rwaccess="RW" range="" description="ICONT Sync interrupt Source" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_MAIN_INTR_ENB_CLR_2" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to Clear the corresponding interrupt enable bit." width="32" offset="0x5C" page = "1" acronym="__ALL___ICONT_MAIN_INTR_ENB_CLR_2">
        <bitfield id="ENB" rwaccess="RW" range="" description="" resetval="0" end="0" begin="25" width="26"/>
        <bitfield id="DM_LCH" rwaccess="RW" range="" description="Data Mover Logical Channel Data Transfer completion." resetval="0" end="26" begin="29" width="4"/>
        <bitfield id="ICONT_LOCAL" rwaccess="RW" range="" description="ICONT Local Interrupt Controller interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="ICONT_SYNC_INTR" rwaccess="RW" range="" description="ICONT Sync interrupt Source" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_LOCAL_INTR_RAW_STATUS_2" description="This provides the status of the ICONT internal interrupt sources, irrespective of enable bit.&#xD;&#xA;Write 1 to set the interrupt in Software (for test/debug)." width="32" offset="0x60" page = "1" acronym="__ALL___ICONT_LOCAL_INTR_RAW_STATUS_2">
        <bitfield id="CB_BSTRM_ENB_INTR" rwaccess="RW" range="" description="BitStream Custom Block Interrupt Sources.&#xD;&#xA;0 : Page_Done&#xD;&#xA;1 : UnderRun&#xD;&#xA;2 : Start_Code&#xD;&#xA;3 : Store_Complete.&#xD;&#xA;4 : Thress_Cross&#xD;&#xA;5 : DDR_Empty&#xD;&#xA;6 : Active to InActive transition.&#xD;&#xA;7 : Start_Code_Overrun&#xD;&#xA;Refer Custom Block Bitstream section for details on its assertion &amp; clearing." resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="SBH_LOCAL_TASK_ENB_INTR" rwaccess="RW" range="" description="Local SBH Task Notification" resetval="0" end="8" begin="11" width="4"/>
        <bitfield id="Future_Use" rwaccess="RW" range="" description="Reserved for Future use.&#xD;&#xA;Refer SL2BC section for more details." resetval="0" end="12" begin="17" width="6"/>
        <bitfield id="CME_INTR" rwaccess="RW" range="" description="CME Counter non-zero interrupt." resetval="0" end="18" begin="23" width="6"/>
        <bitfield id="SEM_COUNT_NZ" rwaccess="RW" range="" description="Interrupt source from the Semaphore counter.&#xD;&#xA;Refer Semaphore counter section for more details." resetval="0" end="24" begin="29" width="6"/>
        <bitfield id="WatchDogTimer_INTR" rwaccess="RW" range="" description="WatchDog Timer interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="SOFT_INTERRUPT" rwaccess="RW" range="" description="Software Interrupt Source." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_LOCAL_INTR_ENB_STATUS_2" description="This provides the status of the ICONT internal interrupt sources enabled to interrupt.&#xD;&#xA;Write 1 to clear the interrupt in Software." width="32" offset="0x64" page = "1" acronym="__ALL___ICONT_LOCAL_INTR_ENB_STATUS_2">
        <bitfield id="CB_BSTRM_ENB_INTR" rwaccess="RW" range="" description="BitStream Custom Block Interrupt Sources.&#xD;&#xA;0 : Page_Done&#xD;&#xA;1 : UnderRun&#xD;&#xA;2 : Start_Code&#xD;&#xA;3 : Store_Complete.&#xD;&#xA;4 : Thress_Cross&#xD;&#xA;5 : DDR_Empty&#xD;&#xA;6 : Active to InActive transition.&#xD;&#xA;7 : Start_Code_Overrun&#xD;&#xA;Refer Custom Block Bitstream section for details on its assertion &amp; clearing." resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="SBH_LOCAL_TASK_ENB_INTR" rwaccess="RW" range="" description="Local SBH Task Notification" resetval="0" end="8" begin="11" width="4"/>
        <bitfield id="Future_Use" rwaccess="RW" range="" description="Reserved for Future use.&#xD;&#xA;Refer SL2BC section for more details." resetval="0" end="12" begin="17" width="6"/>
        <bitfield id="CME_INTR" rwaccess="RW" range="" description="CME Counter non-zero interrupt." resetval="0" end="18" begin="23" width="6"/>
        <bitfield id="SEM_COUNT_NZ" rwaccess="RW" range="" description="Interrupt source from the Semaphore counter.&#xD;&#xA;Refer Semaphore counter section for more details." resetval="0" end="24" begin="29" width="6"/>
        <bitfield id="WatchDogTimer_INTR" rwaccess="RW" range="" description="WatchDog Timer interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="SOFT_INTERRUPT" rwaccess="RW" range="" description="Software Interrupt Source." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_LOCAL_INTR_ENB_SET_2" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to set the corresponding interrupt enable bit." width="32" offset="0x68" page = "1" acronym="__ALL___ICONT_LOCAL_INTR_ENB_SET_2">
        <bitfield id="CB_BSTRM" rwaccess="RW" range="" description="Enable BitStream Custom Block Interrupt Sources.&#xD;&#xA;0 : Page_Done&#xD;&#xA;1 : UnderRun&#xD;&#xA;2 : Start_Code&#xD;&#xA;3 : Store_Complete.&#xD;&#xA;4 : Thress_Cross&#xD;&#xA;5 : DDR_Empty&#xD;&#xA;6 : Active to InActive transition.&#xD;&#xA;7 : Start_Code_Overrun" resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="SBH_LOCAL_TASK" rwaccess="RW" range="" description="Enable Local SBH Task Notification." resetval="0" end="8" begin="11" width="4"/>
        <bitfield id="Future_Use" rwaccess="RW" range="" description="Reserved for Future use.&#xD;&#xA;Refer SL2BC section for more details." resetval="0" end="12" begin="17" width="6"/>
        <bitfield id="CME_INTR" rwaccess="RW" range="" description="CME Counter non-zero interrupt." resetval="0" end="18" begin="23" width="6"/>
        <bitfield id="SEM_COUNT_NZ" rwaccess="RW" range="" description="Interrupt source from the Semaphore counter." resetval="0" end="24" begin="29" width="6"/>
        <bitfield id="WatchDogTimer_INTR" rwaccess="RW" range="" description="WatchDog Timer interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="SOFT_INTERRUPT" rwaccess="RW" range="" description="Enable Software Interrupt Source.." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_LOCAL_INTR_ENB_CLR_2" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to Clear the corresponding interrupt enable bit." width="32" offset="0x6C" page = "1" acronym="__ALL___ICONT_LOCAL_INTR_ENB_CLR_2">
        <bitfield id="CB_BSTRM" rwaccess="RW" range="" description="Enable BitStream Custom Block Interrupt Sources.&#xD;&#xA;0 : Page_Done&#xD;&#xA;1 : UnderRun&#xD;&#xA;2 : Start_Code&#xD;&#xA;3 : Store_Complete.&#xD;&#xA;4 : Thress_Cross&#xD;&#xA;5 : DDR_Empty&#xD;&#xA;6 : Active to InActive transition.&#xD;&#xA;7 : Start_Code_Overrun" resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="SBH_LOCAL_TASK" rwaccess="RW" range="" description="Enable Local SBH Task Notification." resetval="0" end="8" begin="11" width="4"/>
        <bitfield id="Future_Use" rwaccess="RW" range="" description="Reserved for Future use.&#xD;&#xA;Refer SL2BC section for more details." resetval="0" end="12" begin="17" width="6"/>
        <bitfield id="CME_INTR" rwaccess="RW" range="" description="CME Counter non-zero interrupt." resetval="0" end="18" begin="23" width="6"/>
        <bitfield id="SEM_COUNT_NZ" rwaccess="RW" range="" description="Interrupt source from the Semaphore counter." resetval="0" end="24" begin="29" width="6"/>
        <bitfield id="WatchDogTimer_INTR" rwaccess="RW" range="" description="WatchDog Timer interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="SOFT_INTERRUPT" rwaccess="RW" range="" description="Enable Software Interrupt Source.." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_MAIN_INTR_RAW_STATUS_3" description="This provides the status of the ICONT Main interrupt sources, irrespective of enable bit.&#xD;&#xA;Write 1 to set the interrupt in Software (for test/debug)." width="32" offset="0x70" page = "1" acronym="__ALL___ICONT_MAIN_INTR_RAW_STATUS_3">
        <bitfield id="RAW_STATUS" rwaccess="RW" range="" description="" resetval="0" end="0" begin="25" width="26"/>
        <bitfield id="DM_LCH" rwaccess="RW" range="" description="Data Mover Logical Channel Data Transfer completion." resetval="0" end="26" begin="29" width="4"/>
        <bitfield id="ICONT_LOCAL" rwaccess="R" range="" description="ICONT Local Interrupt Controller interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="ICONT_SYNC_INTR" rwaccess="R" range="" description="ICONT Sync interrupt Source" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_MAIN_INTR_ENB_STATUS_3" description="This provides the status of the ICONT Main interrupt sources enabled to interrupt.&#xD;&#xA;Write 1 to clear the interrupt in Software." width="32" offset="0x74" page = "1" acronym="__ALL___ICONT_MAIN_INTR_ENB_STATUS_3">
        <bitfield id="ENB_STATUS" rwaccess="RW" range="" description="" resetval="0" end="0" begin="25" width="26"/>
        <bitfield id="DM_LCH" rwaccess="RW" range="" description="Data Mover Logical Channel Data Transfer completion." resetval="0" end="26" begin="29" width="4"/>
        <bitfield id="ICONT_LOCAL" rwaccess="R" range="" description="ICONT Local Interrupt Controller interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="ICONT_SYNC_INTR" rwaccess="R" range="" description="ICONT Sync interrupt Source" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_MAIN_INTR_ENB_SET_3" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to set the corresponding interrupt enable bit." width="32" offset="0x78" page = "1" acronym="__ALL___ICONT_MAIN_INTR_ENB_SET_3">
        <bitfield id="ENB" rwaccess="RW" range="" description="" resetval="0" end="0" begin="25" width="26"/>
        <bitfield id="DM_LCH" rwaccess="RW" range="" description="Data Mover Logical Channel Data Transfer completion." resetval="0" end="26" begin="29" width="4"/>
        <bitfield id="ICONT_LOCAL" rwaccess="RW" range="" description="ICONT Local Interrupt Controller interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="ICONT_SYNC_INTR" rwaccess="RW" range="" description="ICONT Sync interrupt Source" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_MAIN_INTR_ENB_CLR_3" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to Clear the corresponding interrupt enable bit." width="32" offset="0x7C" page = "1" acronym="__ALL___ICONT_MAIN_INTR_ENB_CLR_3">
        <bitfield id="ENB" rwaccess="RW" range="" description="" resetval="0" end="0" begin="25" width="26"/>
        <bitfield id="DM_LCH" rwaccess="RW" range="" description="Data Mover Logical Channel Data Transfer completion." resetval="0" end="26" begin="29" width="4"/>
        <bitfield id="ICONT_LOCAL" rwaccess="RW" range="" description="ICONT Local Interrupt Controller interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="ICONT_SYNC_INTR" rwaccess="RW" range="" description="ICONT Sync interrupt Source" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_LOCAL_INTR_RAW_STATUS_3" description="This provides the status of the ICONT internal interrupt sources, irrespective of enable bit.&#xD;&#xA;Write 1 to set the interrupt in Software (for test/debug)." width="32" offset="0x80" page = "1" acronym="__ALL___ICONT_LOCAL_INTR_RAW_STATUS_3">
        <bitfield id="CB_BSTRM_ENB_INTR" rwaccess="RW" range="" description="BitStream Custom Block Interrupt Sources.&#xD;&#xA;0 : Page_Done&#xD;&#xA;1 : UnderRun&#xD;&#xA;2 : Start_Code&#xD;&#xA;3 : Store_Complete.&#xD;&#xA;4 : Thress_Cross&#xD;&#xA;5 : DDR_Empty&#xD;&#xA;6 : Active to InActive transition.&#xD;&#xA;7 : Start_Code_Overrun&#xD;&#xA;Refer Custom Block Bitstream section for details on its assertion &amp; clearing." resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="SBH_LOCAL_TASK_ENB_INTR" rwaccess="RW" range="" description="Local SBH Task Notification" resetval="0" end="8" begin="11" width="4"/>
        <bitfield id="Future_Use" rwaccess="RW" range="" description="Reserved for Future use.&#xD;&#xA;Refer SL2BC section for more details." resetval="0" end="12" begin="17" width="6"/>
        <bitfield id="CME_INTR" rwaccess="RW" range="" description="CME Counter non-zero interrupt." resetval="0" end="18" begin="23" width="6"/>
        <bitfield id="SEM_COUNT_NZ" rwaccess="RW" range="" description="Interrupt source from the Semaphore counter.&#xD;&#xA;Refer Semaphore counter section for more details." resetval="0" end="24" begin="29" width="6"/>
        <bitfield id="WatchDogTimer_INTR" rwaccess="RW" range="" description="WatchDog Timer interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="SOFT_INTERRUPT" rwaccess="RW" range="" description="Software Interrupt Source." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_LOCAL_INTR_ENB_STATUS_3" description="This provides the status of the ICONT internal interrupt sources enabled to interrupt.&#xD;&#xA;Write 1 to clear the interrupt in Software." width="32" offset="0x84" page = "1" acronym="__ALL___ICONT_LOCAL_INTR_ENB_STATUS_3">
        <bitfield id="CB_BSTRM_ENB_INTR" rwaccess="RW" range="" description="BitStream Custom Block Interrupt Sources.&#xD;&#xA;0 : Page_Done&#xD;&#xA;1 : UnderRun&#xD;&#xA;2 : Start_Code&#xD;&#xA;3 : Store_Complete.&#xD;&#xA;4 : Thress_Cross&#xD;&#xA;5 : DDR_Empty&#xD;&#xA;6 : Active to InActive transition.&#xD;&#xA;7 : Start_Code_Overrun&#xD;&#xA;Refer Custom Block Bitstream section for details on its assertion &amp; clearing." resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="SBH_LOCAL_TASK_ENB_INTR" rwaccess="RW" range="" description="Local SBH Task Notification" resetval="0" end="8" begin="11" width="4"/>
        <bitfield id="Future_Use" rwaccess="RW" range="" description="Reserved for Future use.&#xD;&#xA;Refer SL2BC section for more details." resetval="0" end="12" begin="17" width="6"/>
        <bitfield id="CME_INTR" rwaccess="RW" range="" description="CME Counter non-zero interrupt." resetval="0" end="18" begin="23" width="6"/>
        <bitfield id="SEM_COUNT_NZ" rwaccess="RW" range="" description="Interrupt source from the Semaphore counter.&#xD;&#xA;Refer Semaphore counter section for more details." resetval="0" end="24" begin="29" width="6"/>
        <bitfield id="WatchDogTimer_INTR" rwaccess="RW" range="" description="WatchDog Timer interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="SOFT_INTERRUPT" rwaccess="RW" range="" description="Software Interrupt Source." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_LOCAL_INTR_ENB_SET_3" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to set the corresponding interrupt enable bit." width="32" offset="0x88" page = "1" acronym="__ALL___ICONT_LOCAL_INTR_ENB_SET_3">
        <bitfield id="CB_BSTRM" rwaccess="RW" range="" description="Enable BitStream Custom Block Interrupt Sources.&#xD;&#xA;0 : Page_Done&#xD;&#xA;1 : UnderRun&#xD;&#xA;2 : Start_Code&#xD;&#xA;3 : Store_Complete.&#xD;&#xA;4 : Thress_Cross&#xD;&#xA;5 : DDR_Empty&#xD;&#xA;6 : Active to InActive transition.&#xD;&#xA;7 : Start_Code_Overrun" resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="SBH_LOCAL_TASK" rwaccess="RW" range="" description="Enable Local SBH Task Notification." resetval="0" end="8" begin="11" width="4"/>
        <bitfield id="Future_Use" rwaccess="RW" range="" description="Reserved for Future use.&#xD;&#xA;Refer SL2BC section for more details." resetval="0" end="12" begin="17" width="6"/>
        <bitfield id="CME_INTR" rwaccess="RW" range="" description="CME Counter non-zero interrupt." resetval="0" end="18" begin="23" width="6"/>
        <bitfield id="SEM_COUNT_NZ" rwaccess="RW" range="" description="Interrupt source from the Semaphore counter." resetval="0" end="24" begin="29" width="6"/>
        <bitfield id="WatchDogTimer_INTR" rwaccess="RW" range="" description="WatchDog Timer interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="SOFT_INTERRUPT" rwaccess="RW" range="" description="Enable Software Interrupt Source.." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_LOCAL_INTR_ENB_CLR_3" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to Clear the corresponding interrupt enable bit." width="32" offset="0x8C" page = "1" acronym="__ALL___ICONT_LOCAL_INTR_ENB_CLR_3">
        <bitfield id="CB_BSTRM" rwaccess="RW" range="" description="Enable BitStream Custom Block Interrupt Sources.&#xD;&#xA;0 : Page_Done&#xD;&#xA;1 : UnderRun&#xD;&#xA;2 : Start_Code&#xD;&#xA;3 : Store_Complete.&#xD;&#xA;4 : Thress_Cross&#xD;&#xA;5 : DDR_Empty&#xD;&#xA;6 : Active to InActive transition.&#xD;&#xA;7 : Start_Code_Overrun" resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="SBH_LOCAL_TASK" rwaccess="RW" range="" description="Enable Local SBH Task Notification." resetval="0" end="8" begin="11" width="4"/>
        <bitfield id="Future_Use" rwaccess="RW" range="" description="Reserved for Future use.&#xD;&#xA;Refer SL2BC section for more details." resetval="0" end="12" begin="17" width="6"/>
        <bitfield id="CME_INTR" rwaccess="RW" range="" description="CME Counter non-zero interrupt." resetval="0" end="18" begin="23" width="6"/>
        <bitfield id="SEM_COUNT_NZ" rwaccess="RW" range="" description="Interrupt source from the Semaphore counter." resetval="0" end="24" begin="29" width="6"/>
        <bitfield id="WatchDogTimer_INTR" rwaccess="RW" range="" description="WatchDog Timer interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="SOFT_INTERRUPT" rwaccess="RW" range="" description="Enable Software Interrupt Source.." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_MAIN_INTR_RAW_STATUS_4" description="This provides the status of the ICONT Main interrupt sources, irrespective of enable bit.&#xD;&#xA;Write 1 to set the interrupt in Software (for test/debug)." width="32" offset="0x90" page = "1" acronym="__ALL___ICONT_MAIN_INTR_RAW_STATUS_4">
        <bitfield id="RAW_STATUS" rwaccess="RW" range="" description="" resetval="0" end="0" begin="25" width="26"/>
        <bitfield id="DM_LCH" rwaccess="RW" range="" description="Data Mover Logical Channel Data Transfer completion." resetval="0" end="26" begin="29" width="4"/>
        <bitfield id="ICONT_LOCAL" rwaccess="R" range="" description="ICONT Local Interrupt Controller interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="ICONT_SYNC_INTR" rwaccess="R" range="" description="ICONT Sync interrupt Source" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_MAIN_INTR_ENB_STATUS_4" description="This provides the status of the ICONT Main interrupt sources enabled to interrupt.&#xD;&#xA;Write 1 to clear the interrupt in Software." width="32" offset="0x94" page = "1" acronym="__ALL___ICONT_MAIN_INTR_ENB_STATUS_4">
        <bitfield id="ENB_STATUS" rwaccess="RW" range="" description="" resetval="0" end="0" begin="25" width="26"/>
        <bitfield id="DM_LCH" rwaccess="RW" range="" description="Data Mover Logical Channel Data Transfer completion." resetval="0" end="26" begin="29" width="4"/>
        <bitfield id="ICONT_LOCAL" rwaccess="R" range="" description="ICONT Local Interrupt Controller interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="ICONT_SYNC_INTR" rwaccess="R" range="" description="ICONT Sync interrupt Source" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_MAIN_INTR_ENB_SET_4" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to set the corresponding interrupt enable bit." width="32" offset="0x98" page = "1" acronym="__ALL___ICONT_MAIN_INTR_ENB_SET_4">
        <bitfield id="ENB" rwaccess="RW" range="" description="" resetval="0" end="0" begin="25" width="26"/>
        <bitfield id="DM_LCH" rwaccess="RW" range="" description="Data Mover Logical Channel Data Transfer completion." resetval="0" end="26" begin="29" width="4"/>
        <bitfield id="ICONT_LOCAL" rwaccess="RW" range="" description="ICONT Local Interrupt Controller interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="ICONT_SYNC_INTR" rwaccess="RW" range="" description="ICONT Sync interrupt Source" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_MAIN_INTR_ENB_CLR_4" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to Clear the corresponding interrupt enable bit." width="32" offset="0x9C" page = "1" acronym="__ALL___ICONT_MAIN_INTR_ENB_CLR_4">
        <bitfield id="ENB" rwaccess="RW" range="" description="" resetval="0" end="0" begin="25" width="26"/>
        <bitfield id="DM_LCH" rwaccess="RW" range="" description="Data Mover Logical Channel Data Transfer completion." resetval="0" end="26" begin="29" width="4"/>
        <bitfield id="ICONT_LOCAL" rwaccess="RW" range="" description="ICONT Local Interrupt Controller interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="ICONT_SYNC_INTR" rwaccess="RW" range="" description="ICONT Sync interrupt Source" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_LOCAL_INTR_RAW_STATUS_4" description="This provides the status of the ICONT internal interrupt sources, irrespective of enable bit.&#xD;&#xA;Write 1 to set the interrupt in Software (for test/debug)." width="32" offset="0xA0" page = "1" acronym="__ALL___ICONT_LOCAL_INTR_RAW_STATUS_4">
        <bitfield id="CB_BSTRM_ENB_INTR" rwaccess="RW" range="" description="BitStream Custom Block Interrupt Sources.&#xD;&#xA;0 : Page_Done&#xD;&#xA;1 : UnderRun&#xD;&#xA;2 : Start_Code&#xD;&#xA;3 : Store_Complete.&#xD;&#xA;4 : Thress_Cross&#xD;&#xA;5 : DDR_Empty&#xD;&#xA;6 : Active to InActive transition.&#xD;&#xA;7 : Start_Code_Overrun&#xD;&#xA;Refer Custom Block Bitstream section for details on its assertion &amp; clearing." resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="SBH_LOCAL_TASK_ENB_INTR" rwaccess="RW" range="" description="Local SBH Task Notification" resetval="0" end="8" begin="11" width="4"/>
        <bitfield id="Future_Use" rwaccess="RW" range="" description="Reserved for Future use.&#xD;&#xA;Refer SL2BC section for more details." resetval="0" end="12" begin="17" width="6"/>
        <bitfield id="CME_INTR" rwaccess="RW" range="" description="CME Counter non-zero interrupt." resetval="0" end="18" begin="23" width="6"/>
        <bitfield id="SEM_COUNT_NZ" rwaccess="RW" range="" description="Interrupt source from the Semaphore counter.&#xD;&#xA;Refer Semaphore counter section for more details." resetval="0" end="24" begin="29" width="6"/>
        <bitfield id="WatchDogTimer_INTR" rwaccess="RW" range="" description="WatchDog Timer interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="SOFT_INTERRUPT" rwaccess="RW" range="" description="Software Interrupt Source." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_LOCAL_INTR_ENB_STATUS_4" description="This provides the status of the ICONT internal interrupt sources enabled to interrupt.&#xD;&#xA;Write 1 to clear the interrupt in Software." width="32" offset="0xA4" page = "1" acronym="__ALL___ICONT_LOCAL_INTR_ENB_STATUS_4">
        <bitfield id="CB_BSTRM_ENB_INTR" rwaccess="RW" range="" description="BitStream Custom Block Interrupt Sources.&#xD;&#xA;0 : Page_Done&#xD;&#xA;1 : UnderRun&#xD;&#xA;2 : Start_Code&#xD;&#xA;3 : Store_Complete.&#xD;&#xA;4 : Thress_Cross&#xD;&#xA;5 : DDR_Empty&#xD;&#xA;6 : Active to InActive transition.&#xD;&#xA;7 : Start_Code_Overrun&#xD;&#xA;Refer Custom Block Bitstream section for details on its assertion &amp; clearing." resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="SBH_LOCAL_TASK_ENB_INTR" rwaccess="RW" range="" description="Local SBH Task Notification" resetval="0" end="8" begin="11" width="4"/>
        <bitfield id="Future_Use" rwaccess="RW" range="" description="Reserved for Future use.&#xD;&#xA;Refer SL2BC section for more details." resetval="0" end="12" begin="17" width="6"/>
        <bitfield id="CME_INTR" rwaccess="RW" range="" description="CME Counter non-zero interrupt." resetval="0" end="18" begin="23" width="6"/>
        <bitfield id="SEM_COUNT_NZ" rwaccess="RW" range="" description="Interrupt source from the Semaphore counter.&#xD;&#xA;Refer Semaphore counter section for more details." resetval="0" end="24" begin="29" width="6"/>
        <bitfield id="WatchDogTimer_INTR" rwaccess="RW" range="" description="WatchDog Timer interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="SOFT_INTERRUPT" rwaccess="RW" range="" description="Software Interrupt Source." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_LOCAL_INTR_ENB_SET_4" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to set the corresponding interrupt enable bit." width="32" offset="0xA8" page = "1" acronym="__ALL___ICONT_LOCAL_INTR_ENB_SET_4">
        <bitfield id="CB_BSTRM" rwaccess="RW" range="" description="Enable BitStream Custom Block Interrupt Sources.&#xD;&#xA;0 : Page_Done&#xD;&#xA;1 : UnderRun&#xD;&#xA;2 : Start_Code&#xD;&#xA;3 : Store_Complete.&#xD;&#xA;4 : Thress_Cross&#xD;&#xA;5 : DDR_Empty&#xD;&#xA;6 : Active to InActive transition.&#xD;&#xA;7 : Start_Code_Overrun" resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="SBH_LOCAL_TASK" rwaccess="RW" range="" description="Enable Local SBH Task Notification." resetval="0" end="8" begin="11" width="4"/>
        <bitfield id="Future_Use" rwaccess="RW" range="" description="Reserved for Future use.&#xD;&#xA;Refer SL2BC section for more details." resetval="0" end="12" begin="17" width="6"/>
        <bitfield id="CME_INTR" rwaccess="RW" range="" description="CME Counter non-zero interrupt." resetval="0" end="18" begin="23" width="6"/>
        <bitfield id="SEM_COUNT_NZ" rwaccess="RW" range="" description="Interrupt source from the Semaphore counter." resetval="0" end="24" begin="29" width="6"/>
        <bitfield id="WatchDogTimer_INTR" rwaccess="RW" range="" description="WatchDog Timer interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="SOFT_INTERRUPT" rwaccess="RW" range="" description="Enable Software Interrupt Source.." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_LOCAL_INTR_ENB_CLR_4" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to Clear the corresponding interrupt enable bit." width="32" offset="0xAC" page = "1" acronym="__ALL___ICONT_LOCAL_INTR_ENB_CLR_4">
        <bitfield id="CB_BSTRM" rwaccess="RW" range="" description="Enable BitStream Custom Block Interrupt Sources.&#xD;&#xA;0 : Page_Done&#xD;&#xA;1 : UnderRun&#xD;&#xA;2 : Start_Code&#xD;&#xA;3 : Store_Complete.&#xD;&#xA;4 : Thress_Cross&#xD;&#xA;5 : DDR_Empty&#xD;&#xA;6 : Active to InActive transition.&#xD;&#xA;7 : Start_Code_Overrun" resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="SBH_LOCAL_TASK" rwaccess="RW" range="" description="Enable Local SBH Task Notification." resetval="0" end="8" begin="11" width="4"/>
        <bitfield id="Future_Use" rwaccess="RW" range="" description="Reserved for Future use.&#xD;&#xA;Refer SL2BC section for more details." resetval="0" end="12" begin="17" width="6"/>
        <bitfield id="CME_INTR" rwaccess="RW" range="" description="CME Counter non-zero interrupt." resetval="0" end="18" begin="23" width="6"/>
        <bitfield id="SEM_COUNT_NZ" rwaccess="RW" range="" description="Interrupt source from the Semaphore counter." resetval="0" end="24" begin="29" width="6"/>
        <bitfield id="WatchDogTimer_INTR" rwaccess="RW" range="" description="WatchDog Timer interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="SOFT_INTERRUPT" rwaccess="RW" range="" description="Enable Software Interrupt Source.." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_MAIN_INTR_RAW_STATUS_5" description="This provides the status of the ICONT Main interrupt sources, irrespective of enable bit.&#xD;&#xA;Write 1 to set the interrupt in Software (for test/debug)." width="32" offset="0xB0" page = "1" acronym="__ALL___ICONT_MAIN_INTR_RAW_STATUS_5">
        <bitfield id="RAW_STATUS" rwaccess="RW" range="" description="" resetval="0" end="0" begin="25" width="26"/>
        <bitfield id="DM_LCH" rwaccess="RW" range="" description="Data Mover Logical Channel Data Transfer completion." resetval="0" end="26" begin="29" width="4"/>
        <bitfield id="ICONT_LOCAL" rwaccess="R" range="" description="ICONT Local Interrupt Controller interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="ICONT_SYNC_INTR" rwaccess="R" range="" description="ICONT Sync interrupt Source" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_MAIN_INTR_ENB_STATUS_5" description="This provides the status of the ICONT Main interrupt sources enabled to interrupt.&#xD;&#xA;Write 1 to clear the interrupt in Software." width="32" offset="0xB4" page = "1" acronym="__ALL___ICONT_MAIN_INTR_ENB_STATUS_5">
        <bitfield id="ENB_STATUS" rwaccess="RW" range="" description="" resetval="0" end="0" begin="25" width="26"/>
        <bitfield id="DM_LCH" rwaccess="RW" range="" description="Data Mover Logical Channel Data Transfer completion." resetval="0" end="26" begin="29" width="4"/>
        <bitfield id="ICONT_LOCAL" rwaccess="R" range="" description="ICONT Local Interrupt Controller interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="ICONT_SYNC_INTR" rwaccess="R" range="" description="ICONT Sync interrupt Source" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_MAIN_INTR_ENB_SET_5" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to set the corresponding interrupt enable bit." width="32" offset="0xB8" page = "1" acronym="__ALL___ICONT_MAIN_INTR_ENB_SET_5">
        <bitfield id="ENB" rwaccess="RW" range="" description="" resetval="0" end="0" begin="25" width="26"/>
        <bitfield id="DM_LCH" rwaccess="RW" range="" description="Data Mover Logical Channel Data Transfer completion." resetval="0" end="26" begin="29" width="4"/>
        <bitfield id="ICONT_LOCAL" rwaccess="RW" range="" description="ICONT Local Interrupt Controller interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="ICONT_SYNC_INTR" rwaccess="RW" range="" description="ICONT Sync interrupt Source" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_MAIN_INTR_ENB_CLR_5" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to Clear the corresponding interrupt enable bit." width="32" offset="0xBC" page = "1" acronym="__ALL___ICONT_MAIN_INTR_ENB_CLR_5">
        <bitfield id="ENB" rwaccess="RW" range="" description="" resetval="0" end="0" begin="25" width="26"/>
        <bitfield id="DM_LCH" rwaccess="RW" range="" description="Data Mover Logical Channel Data Transfer completion." resetval="0" end="26" begin="29" width="4"/>
        <bitfield id="ICONT_LOCAL" rwaccess="RW" range="" description="ICONT Local Interrupt Controller interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="ICONT_SYNC_INTR" rwaccess="RW" range="" description="ICONT Sync interrupt Source" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_LOCAL_INTR_RAW_STATUS_5" description="This provides the status of the ICONT internal interrupt sources, irrespective of enable bit.&#xD;&#xA;Write 1 to set the interrupt in Software (for test/debug)." width="32" offset="0xC0" page = "1" acronym="__ALL___ICONT_LOCAL_INTR_RAW_STATUS_5">
        <bitfield id="CB_BSTRM_ENB_INTR" rwaccess="RW" range="" description="BitStream Custom Block Interrupt Sources.&#xD;&#xA;0 : Page_Done&#xD;&#xA;1 : UnderRun&#xD;&#xA;2 : Start_Code&#xD;&#xA;3 : Store_Complete.&#xD;&#xA;4 : Thress_Cross&#xD;&#xA;5 : DDR_Empty&#xD;&#xA;6 : Active to InActive transition.&#xD;&#xA;7 : Start_Code_Overrun&#xD;&#xA;Refer Custom Block Bitstream section for details on its assertion &amp; clearing." resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="SBH_LOCAL_TASK_ENB_INTR" rwaccess="RW" range="" description="Local SBH Task Notification" resetval="0" end="8" begin="11" width="4"/>
        <bitfield id="Future_Use" rwaccess="RW" range="" description="Reserved for Future use.&#xD;&#xA;Refer SL2BC section for more details." resetval="0" end="12" begin="17" width="6"/>
        <bitfield id="CME_INTR" rwaccess="RW" range="" description="CME Counter non-zero interrupt." resetval="0" end="18" begin="23" width="6"/>
        <bitfield id="SEM_COUNT_NZ" rwaccess="RW" range="" description="Interrupt source from the Semaphore counter.&#xD;&#xA;Refer Semaphore counter section for more details." resetval="0" end="24" begin="29" width="6"/>
        <bitfield id="WatchDogTimer_INTR" rwaccess="RW" range="" description="WatchDog Timer interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="SOFT_INTERRUPT" rwaccess="RW" range="" description="Software Interrupt Source." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_LOCAL_INTR_ENB_STATUS_5" description="This provides the status of the ICONT internal interrupt sources enabled to interrupt.&#xD;&#xA;Write 1 to clear the interrupt in Software." width="32" offset="0xC4" page = "1" acronym="__ALL___ICONT_LOCAL_INTR_ENB_STATUS_5">
        <bitfield id="CB_BSTRM_ENB_INTR" rwaccess="RW" range="" description="BitStream Custom Block Interrupt Sources.&#xD;&#xA;0 : Page_Done&#xD;&#xA;1 : UnderRun&#xD;&#xA;2 : Start_Code&#xD;&#xA;3 : Store_Complete.&#xD;&#xA;4 : Thress_Cross&#xD;&#xA;5 : DDR_Empty&#xD;&#xA;6 : Active to InActive transition.&#xD;&#xA;7 : Start_Code_Overrun&#xD;&#xA;Refer Custom Block Bitstream section for details on its assertion &amp; clearing." resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="SBH_LOCAL_TASK_ENB_INTR" rwaccess="RW" range="" description="Local SBH Task Notification" resetval="0" end="8" begin="11" width="4"/>
        <bitfield id="Future_Use" rwaccess="RW" range="" description="Reserved for Future use.&#xD;&#xA;Refer SL2BC section for more details." resetval="0" end="12" begin="17" width="6"/>
        <bitfield id="CME_INTR" rwaccess="RW" range="" description="CME Counter non-zero interrupt." resetval="0" end="18" begin="23" width="6"/>
        <bitfield id="SEM_COUNT_NZ" rwaccess="RW" range="" description="Interrupt source from the Semaphore counter.&#xD;&#xA;Refer Semaphore counter section for more details." resetval="0" end="24" begin="29" width="6"/>
        <bitfield id="WatchDogTimer_INTR" rwaccess="RW" range="" description="WatchDog Timer interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="SOFT_INTERRUPT" rwaccess="RW" range="" description="Software Interrupt Source." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_LOCAL_INTR_ENB_SET_5" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to set the corresponding interrupt enable bit." width="32" offset="0xC8" page = "1" acronym="__ALL___ICONT_LOCAL_INTR_ENB_SET_5">
        <bitfield id="CB_BSTRM" rwaccess="RW" range="" description="Enable BitStream Custom Block Interrupt Sources.&#xD;&#xA;0 : Page_Done&#xD;&#xA;1 : UnderRun&#xD;&#xA;2 : Start_Code&#xD;&#xA;3 : Store_Complete.&#xD;&#xA;4 : Thress_Cross&#xD;&#xA;5 : DDR_Empty&#xD;&#xA;6 : Active to InActive transition.&#xD;&#xA;7 : Start_Code_Overrun" resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="SBH_LOCAL_TASK" rwaccess="RW" range="" description="Enable Local SBH Task Notification." resetval="0" end="8" begin="11" width="4"/>
        <bitfield id="Future_Use" rwaccess="RW" range="" description="Reserved for Future use.&#xD;&#xA;Refer SL2BC section for more details." resetval="0" end="12" begin="17" width="6"/>
        <bitfield id="CME_INTR" rwaccess="RW" range="" description="CME Counter non-zero interrupt." resetval="0" end="18" begin="23" width="6"/>
        <bitfield id="SEM_COUNT_NZ" rwaccess="RW" range="" description="Interrupt source from the Semaphore counter." resetval="0" end="24" begin="29" width="6"/>
        <bitfield id="WatchDogTimer_INTR" rwaccess="RW" range="" description="WatchDog Timer interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="SOFT_INTERRUPT" rwaccess="RW" range="" description="Enable Software Interrupt Source.." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_LOCAL_INTR_ENB_CLR_5" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to Clear the corresponding interrupt enable bit." width="32" offset="0xCC" page = "1" acronym="__ALL___ICONT_LOCAL_INTR_ENB_CLR_5">
        <bitfield id="CB_BSTRM" rwaccess="RW" range="" description="Enable BitStream Custom Block Interrupt Sources.&#xD;&#xA;0 : Page_Done&#xD;&#xA;1 : UnderRun&#xD;&#xA;2 : Start_Code&#xD;&#xA;3 : Store_Complete.&#xD;&#xA;4 : Thress_Cross&#xD;&#xA;5 : DDR_Empty&#xD;&#xA;6 : Active to InActive transition.&#xD;&#xA;7 : Start_Code_Overrun" resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="SBH_LOCAL_TASK" rwaccess="RW" range="" description="Enable Local SBH Task Notification." resetval="0" end="8" begin="11" width="4"/>
        <bitfield id="Future_Use" rwaccess="RW" range="" description="Reserved for Future use.&#xD;&#xA;Refer SL2BC section for more details." resetval="0" end="12" begin="17" width="6"/>
        <bitfield id="CME_INTR" rwaccess="RW" range="" description="CME Counter non-zero interrupt." resetval="0" end="18" begin="23" width="6"/>
        <bitfield id="SEM_COUNT_NZ" rwaccess="RW" range="" description="Interrupt source from the Semaphore counter." resetval="0" end="24" begin="29" width="6"/>
        <bitfield id="WatchDogTimer_INTR" rwaccess="RW" range="" description="WatchDog Timer interrupt." resetval="0" end="30" begin="30" width="1"/>
        <bitfield id="SOFT_INTERRUPT" rwaccess="RW" range="" description="Enable Software Interrupt Source.." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_NMI_RAW_STATUS" description="This provides the status of the ICONT NMI sources, irrespective of enable bit.&#xD;&#xA;Write 1 to set the interrupt in Software (for test/debug)." width="32" offset="0xD0" page = "1" acronym="__ALL___ICONT_NMI_RAW_STATUS">
        <bitfield id="Data_Abort" rwaccess="RW" range="" description="CPU data access to Reserved space. ICONT_NMI_ABORT_ADDR logs the access address." resetval="0" end="0" begin="0" width="1"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="4" begin="31" width="28"/>
        <bitfield id="Code_Abort" rwaccess="RW" range="" description="CPU Code access to Reserved space. NRP control register logs the access address." resetval="0" end="1" begin="1" width="1"/>
        <bitfield id="Config_Port_Error" rwaccess="RW" range="" description="Indicates error response on Config master port." resetval="0" end="2" begin="2" width="1"/>
        <bitfield id="SL2_Port_Error" rwaccess="RW" range="" description="Indicates error response on SL2 port." resetval="0" end="3" begin="3" width="1"/>
    </register>
    <register id="__ALL___ICONT_NMI_ENB_STATUS" description="This provides the status of the ICONT NMI interrupt sources enabled to interrupt.&#xD;&#xA;Write 1 to clear the interrupt in Software." width="32" offset="0xD4" page = "1" acronym="__ALL___ICONT_NMI_ENB_STATUS">
        <bitfield id="Data_Abort" rwaccess="RW" range="" description="CPU data access to Reserved space. ICONT_NMI_ABORT_ADDR logs the access address." resetval="0" end="0" begin="0" width="1"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="4" begin="31" width="28"/>
        <bitfield id="Code_Abort" rwaccess="RW" range="" description="CPU code access to Reserved space. NRP control register logs the access address." resetval="0" end="1" begin="1" width="1"/>
        <bitfield id="Config_Port_Error" rwaccess="RW" range="" description="Indicates error response on Config master port." resetval="0" end="2" begin="2" width="1"/>
        <bitfield id="SL2_Port_Error" rwaccess="RW" range="" description="Indicates error response on SL2 port." resetval="0" end="3" begin="3" width="1"/>
    </register>
    <register id="__ALL___ICONT_NMI_ENB_SET" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to set the corresponding interrupt enable bit." width="32" offset="0xD8" page = "1" acronym="__ALL___ICONT_NMI_ENB_SET">
        <bitfield id="Data_Abort_ENB" rwaccess="RW" range="" description="" resetval="0" end="0" begin="0" width="1"/>
        <bitfield id="reserved" rwaccess="R" range="" description="" resetval="0" end="4" begin="31" width="28"/>
        <bitfield id="Code_Abort_ENB" rwaccess="RW" range="" description="" resetval="0" end="1" begin="1" width="1"/>
        <bitfield id="Config_Port_Error_ENB" rwaccess="RW" range="" description="" resetval="0" end="2" begin="2" width="1"/>
        <bitfield id="SL2_Port_Error_ENB" rwaccess="RW" range="" description="" resetval="0" end="3" begin="3" width="1"/>
    </register>
    <register id="__ALL___ICONT_NMI_ENB_CLR" description="Enables the corresponding interrupt source to generate interrupt.&#xD;&#xA;Write 1 to Clear the corresponding interrupt enable bit." width="32" offset="0xDC" page = "1" acronym="__ALL___ICONT_NMI_ENB_CLR">
        <bitfield id="Data_Abort_ENB" rwaccess="RW" range="" description="" resetval="0" end="0" begin="0" width="1"/>
        <bitfield id="reserved" rwaccess="R" range="" description="" resetval="0" end="4" begin="31" width="28"/>
        <bitfield id="Code_Abort_ENB" rwaccess="RW" range="" description="" resetval="0" end="1" begin="1" width="1"/>
        <bitfield id="Config_Port_Error_ENB" rwaccess="RW" range="" description="" resetval="0" end="2" begin="2" width="1"/>
        <bitfield id="SL2_Port_Error_ENB" rwaccess="RW" range="" description="" resetval="0" end="3" begin="3" width="1"/>
    </register>
    <register id="__ALL___ICONT_NMI_ABORT_ADDR" description="Logs the Address that resulted in the CPU Data abort condition." width="32" offset="0xE0" page = "1" acronym="__ALL___ICONT_NMI_ABORT_ADDR">
        <bitfield id="Address" rwaccess="R" range="" description="" resetval="0" end="0" begin="31" width="32"/>
    </register>
    <register id="__ALL___ICONT_INTR_OUTPUT" description="Generates interrupt to remote ICONT, ME5, SCL modules.&#xD;&#xA;Corresponding bitfield is to be set to generate interrupt. The bitfield is selfcleared on generating interrupt." width="32" offset="0xE4" page = "1" acronym="__ALL___ICONT_INTR_OUTPUT">
        <bitfield id="Remote_ICONT" rwaccess="RW" range="" description="reserved." resetval="0" end="0" begin="0" width="1"/>
        <bitfield id="ME5" rwaccess="RW" range="" description="Generates Interrupt to ME5." resetval="0" end="1" begin="1" width="1"/>
        <bitfield id="SCL" rwaccess="RW" range="" description="Generates Interrupt to Scalar." resetval="0" end="2" begin="2" width="1"/>
        <bitfield id="RESERVED" rwaccess="RW" range="" description="" resetval="0" end="3" begin="31" width="29"/>
    </register>
    <register id="__ALL___ICONT_SYNC_INTR_SEL_0" description="Selects the interrupt sources to be considered to generate the SYNC interrupt source" width="32" offset="0xE8" page = "1" acronym="__ALL___ICONT_SYNC_INTR_SEL_0">
        <bitfield id="SYNC_INTR_SEL" rwaccess="RW" range="" description="" resetval="0" end="0" begin="30" width="31"/>
        <bitfield id="ENABLE_SYNC" rwaccess="RW" range="" description="When cleared to 0, blocks the SYNC interrupt generation.&#xD;&#xA;When set to 1, enables the SYNC interrupt to be generated." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_SYNC_INTR_SEL_1" description="Selects the interrupt sources to be considered to generate the SYNC interrupt source" width="32" offset="0xEC" page = "1" acronym="__ALL___ICONT_SYNC_INTR_SEL_1">
        <bitfield id="SYNC_INTR_SEL" rwaccess="RW" range="" description="" resetval="0" end="0" begin="30" width="31"/>
        <bitfield id="ENABLE_SYNC" rwaccess="RW" range="" description="When cleared to 0, blocks the SYNC interrupt generation.&#xD;&#xA;When set to 1, enables the SYNC interrupt to be generated." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_SYNC_INTR_SEL_2" description="Selects the interrupt sources to be considered to generate the SYNC interrupt source" width="32" offset="0xF0" page = "1" acronym="__ALL___ICONT_SYNC_INTR_SEL_2">
        <bitfield id="SYNC_INTR_SEL" rwaccess="RW" range="" description="" resetval="0" end="0" begin="30" width="31"/>
        <bitfield id="ENABLE_SYNC" rwaccess="RW" range="" description="When cleared to 0, blocks the SYNC interrupt generation.&#xD;&#xA;When set to 1, enables the SYNC interrupt to be generated." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_SYNC_INTR_SEL_3" description="Selects the interrupt sources to be considered to generate the SYNC interrupt source" width="32" offset="0xF4" page = "1" acronym="__ALL___ICONT_SYNC_INTR_SEL_3">
        <bitfield id="SYNC_INTR_SEL" rwaccess="RW" range="" description="" resetval="0" end="0" begin="30" width="31"/>
        <bitfield id="ENABLE_SYNC" rwaccess="RW" range="" description="When cleared to 0, blocks the SYNC interrupt generation.&#xD;&#xA;When set to 1, enables the SYNC interrupt to be generated." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_SYNC_INTR_SEL_4" description="Selects the interrupt sources to be considered to generate the SYNC interrupt source" width="32" offset="0xF8" page = "1" acronym="__ALL___ICONT_SYNC_INTR_SEL_4">
        <bitfield id="SYNC_INTR_SEL" rwaccess="RW" range="" description="" resetval="0" end="0" begin="30" width="31"/>
        <bitfield id="ENABLE_SYNC" rwaccess="RW" range="" description="When cleared to 0, blocks the SYNC interrupt generation.&#xD;&#xA;When set to 1, enables the SYNC interrupt to be generated." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___ICONT_SYNC_INTR_SEL_5" description="Selects the interrupt sources to be considered to generate the SYNC interrupt source" width="32" offset="0xFC" page = "1" acronym="__ALL___ICONT_SYNC_INTR_SEL_5">
        <bitfield id="SYNC_INTR_SEL" rwaccess="RW" range="" description="" resetval="0" end="0" begin="30" width="31"/>
        <bitfield id="ENABLE_SYNC" rwaccess="RW" range="" description="When cleared to 0, blocks the SYNC interrupt generation.&#xD;&#xA;When set to 1, enables the SYNC interrupt to be generated." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___BSTRM_CTRL" description="This register is written by Software as part of configuration." width="32" offset="0x100" page = "1" acronym="__ALL___BSTRM_CTRL">
        <bitfield id="SC_LENGTH" rwaccess="RW" range="" description="Specifies the length of the StartCode pattern. 0 implies 3 Bytes pattern (lower bytes). 1 implies 4 Byte pattern." resetval="0" end="4" begin="4" width="1"/>
        <bitfield id="EPB_LENGTH" rwaccess="RW" range="" description="Specifies the length of the EPB pattern. 0 implies 3 Bytes pattern (lower bytes). 1 implies 4 Byte pattern." resetval="0" end="5" begin="5" width="1"/>
        <bitfield id="EPB_Enable" rwaccess="RW" range="" description="Enables EPB byte detection &amp; removal by hardware in Decoder Usecase.&#xD;&#xA;Enables EPB byte insertion by hardware in Encoder Usecase." resetval="0" end="6" begin="6" width="1"/>
        <bitfield id="Abort" rwaccess="RW" range="" description="When asserted by software, forces the hardware to move to IDLE state (after completing the ongoing transfer).&#xD;&#xA;Writing 0 to this bit is ignored. This bit is auto cleared by HW." resetval="0" end="7" begin="7" width="1"/>
        <bitfield id="EN_PAGEDONE_IF" rwaccess="RW" range="" description="Enables (when high) the ICONT to ECD interface to communicate Page_Done status.&#xD;&#xA;This should be enabled in Sequential decode/encode flow." resetval="0" end="8" begin="8" width="1"/>
        <bitfield id="USECASE" rwaccess="RW" range="" description="Indicates how the BitStream Custom Unit is being used.&#xD;&#xA;0 indicates Decode usecase (default). 1 indicates Encode Usecase." resetval="0" end="0" begin="0" width="1"/>
        <bitfield id="Mode" rwaccess="RW" range="" description="Used in Decoder usecase only. When set to 0, implies Typical flow where BitStream custom block and ECD HW block is used in sequential mode. When set to 1, implies Slice Level Pipeline mode where in BitStream custom block is used in parallel with ECD HW block." resetval="0" end="1" begin="1" width="1"/>
        <bitfield id="Reserved1" rwaccess="R" range="" description="" resetval="0" end="2" begin="3" width="2"/>
        <bitfield id="Reserved2" rwaccess="R" range="" description="" resetval="0" end="13" begin="31" width="19"/>
        <bitfield id="EN_PAGEFILL_IF" rwaccess="RW" range="" description="Enables (when high) the ECD to ICONT interface to communicate Page_Fill status.&#xD;&#xA;This should be enabled in Sequential decode/encode flow." resetval="0" end="9" begin="9" width="1"/>
        <bitfield id="EN_VDMATRIG_IF" rwaccess="RW" range="" description="Enables (when high) the ICONT to VDMA Group Start trigger interface to communicate Page_Done status.&#xD;&#xA;This should be enabled in Encode &amp; in Slice level pipelining decode flow." resetval="0" end="10" begin="10" width="1"/>
        <bitfield id="EN_VDMA_GRPDONE_IF" rwaccess="RW" range="" description="Enables (when high) the VDMA to ICONT interface to communicate Page_Fill status.&#xD;&#xA;This should be enabled in Encode &amp; in Slice level pipelining decode flow." resetval="0" end="11" begin="11" width="1"/>
        <bitfield id="TRIG_ON_STORE" rwaccess="RW" range="" description="This is used in Encode usecase to specify if the BSTRM_STORE() CI should be considered as end of page, even when not completely filled.&#xD;&#xA;When 1, The BSTRM_STORE() CI should trigger all events that simillar to page fill on the last SL2 write.&#xD;&#xA;When 0, trigger is not generated on SL2 write completion." resetval="0" end="12" begin="12" width="1"/>
    </register>
    <register id="__ALL___BSTRM_SC_VAL" description="This register is written by Software as part of configuration. &#xD;&#xA;This specifies the 32bit value that will be used as StartCode by Custom Unit." width="32" offset="0x104" page = "1" acronym="__ALL___BSTRM_SC_VAL">
        <bitfield id="SC_VAL" rwaccess="RW" range="" description="Start Code Pattern" resetval="1" end="0" begin="31" width="32"/>
    </register>
    <register id="__ALL___BSTRM_EPB_VAL" description="This register is written by Software as part of configuration. &#xD;&#xA;In Decoder usecase, this specifies the 32 bit value that is detected as the Emulation Prevention Byte. The unit could be configured to automatically remove the least significant byte from the BitStream on detection.&#xD;&#xA;In Encoder usecase, this specifies the 32 bit value that is used along with BSTRM_EPB_MASK to detect when the EmulationPreventionByte is to be inserted. The unit could be configured to automatically insert the least significant byte of this register to the BitStream when needed." width="32" offset="0x108" page = "1" acronym="__ALL___BSTRM_EPB_VAL">
        <bitfield id="EPB_VAL" rwaccess="RW" range="" description="For example, in Case of H-264 byte oriented stream, this value should be set to 0x000003." resetval="3" end="0" begin="31" width="32"/>
    </register>
    <register id="__ALL___BSTRM_EPB_MASK" description="This register is written by Software as part of configuration in Encoder usecase. &#xD;&#xA;This specifies the 32 bit mask value that will be used along with BSTRM_EPB_VAL in identifying Emulation Prevention Byte insertion." width="32" offset="0x10C" page = "1" acronym="__ALL___BSTRM_EPB_MASK">
        <bitfield id="EPB_MASK" rwaccess="RW" range="" description="Each bitfield enables the corresponding bitfield of BSTRM_EPB_VAL in Encoder usecase.&#xD;&#xA;For example, in Case of H-264 byte oriented stream, this value should be set to 0x00FFFFFC to detect 0x000001 and 0x000003 as condition needing EPB byte insertion." resetval="4294967292" end="0" begin="31" width="32"/>
    </register>
    <register id="__ALL___BSTRM_PAGE_SA" description="This register is written by Software as part of configuration. &#xD;&#xA;This specifies the starting address of the circular buffer in SL2 and is used to wrap around." width="32" offset="0x110" page = "1" acronym="__ALL___BSTRM_PAGE_SA">
        <bitfield id="Start_Address" rwaccess="RW" range="" description="Starting address of the circular buffer.&#xD;&#xA;Address should be 128bit aligned and also aligned to the page size specified in BSTRM_PAGE_SIZE." resetval="0" end="0" begin="31" width="32"/>
    </register>
    <register id="__ALL___BSTRM_PAGE_SIZE" description="This register is written by Software as part of configuration. &#xD;&#xA;This specifies the size of each page in SL2. The value written is expected to be a one-hot value indicating the size in bytes. (For ex: 512Bytes = 0x200)" width="32" offset="0x114" page = "1" acronym="__ALL___BSTRM_PAGE_SIZE">
        <bitfield id="Page_Size" rwaccess="RW" range="" description="The value written is expected to be a one-hot value indicating the size in bytes. (For ex: 512Bytes = 0x200)&#xD;&#xA;Minimum supported size of page is 128bytes." resetval="0" end="0" begin="15" width="16"/>
        <bitfield id="reserved" rwaccess="R" range="" description="" resetval="0" end="16" begin="31" width="16"/>
    </register>
    <register id="__ALL___BSTRM_PAGE_NUM" description="This register is written by Software as part of configuration. &#xD;&#xA;This specifies the number of pages contained in the circular buffer." width="32" offset="0x118" page = "1" acronym="__ALL___BSTRM_PAGE_NUM">
        <bitfield id="Page_Num" rwaccess="RW" range="" description="Number of pages in the circular buffer" resetval="0" end="0" begin="15" width="16"/>
        <bitfield id="reserved" rwaccess="R" range="" description="" resetval="0" end="16" begin="31" width="16"/>
    </register>
    <register id="__ALL___BSTRM_THRESHOLD" description="This is used in Decoder &amp; Encoder usecase. &#xD;&#xA;In Decoder, &#xD;&#xA;    This specifies the low watermark limit of the Valid data in SL2 buffer, below which the THRES_CROSS status bit need to be asserted by Custom Block.&#xD;&#xA;    The contents of checked in the following sequence, work buffer, pre-fetch buffer, SL2 buffer.&#xD;&#xA;    Note in case the EPB removal is enabled, the custom block would not know the EPB bytes in the portion that are in SL2.  So, care is to be taken to account for this while programming this register.&#xD;&#xA;    The value configured in this register should not exceed the page size. &#xD;&#xA;&#xD;&#xA;In Encode usecase,&#xD;&#xA;    This specifies the low watermark limit of the free space in SL2 buffer, below which the THRES_CROSS status bit need to be asserted by Custom Block.&#xD;&#xA;    Note in case the EPB removal is enabled, SW should include margin for EPB insertion while programming this register." width="32" offset="0x11C" page = "1" acronym="__ALL___BSTRM_THRESHOLD">
        <bitfield id="THRESHOLD" rwaccess="RW" range="" description="Decode usecase : Specifies the low-water mark of Valid Data in SL2 in terms of bytes.&#xD;&#xA;Encode usecase : Specifies the low-water mark of Free Space in SL2 in terms of bytes.&#xD;&#xA;&#xD;&#xA;This value should not exceed Page Size." resetval="0" end="0" begin="15" width="16"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="16" begin="31" width="16"/>
    </register>
    <register id="__ALL___BSTRM_VDMA_GID" description="Used when VDMA HW interface is enabled.&#xD;&#xA;This specifies the VDMA Group ID that should be used to trigger the VDMA transfers and to monitor the VDMA GroupDone." width="32" offset="0x120" page = "1" acronym="__ALL___BSTRM_VDMA_GID">
        <bitfield id="GID_FIRST" rwaccess="RW" range="" description="This VDMA GID is used when triggering the VDMA for the first page when _BSTRM_CONF CI is issued (with SL2 Filled Pages being 0*) in Decode mode.&#xD;&#xA;This value could be same as that of VDMA_GID_MIDDLE when the first page to be fetched is a full page. &#xD;&#xA;It could have a different GID value when the first page in DDR is partial and need to be bottom aligned in SL2 page.&#xD;&#xA;&#xD;&#xA;Note:* This GID will not be used if DDR page count equals 1 and Last Page is indicated. In this case, The first VDMA transfer will be triggerred with the GID_LAST ID.&#xD;&#xA;&#xD;&#xA;Not used in Encode usecase." resetval="0" end="0" begin="5" width="6"/>
        <bitfield id="RESERVED1" rwaccess="RW" range="" description="" resetval="0" end="6" begin="7" width="2"/>
        <bitfield id="GID_MIDDLE" rwaccess="RW" range="" description="This VDMA GID is used when triggering the VDMA for the all pages except the first &amp; last in Decoder mode.&#xD;&#xA;&#xD;&#xA;In Encode mode, This GID is used for all vdma transfers." resetval="0" end="8" begin="13" width="6"/>
        <bitfield id="RESERVED2" rwaccess="RW" range="" description="" resetval="0" end="14" begin="15" width="2"/>
        <bitfield id="GID_LAST" rwaccess="RW" range="" description="This VDMA GID is used when triggering the VDMA for the last page in Decode mode.&#xD;&#xA;Last page is assumed when BSTRM_LP_PRESENT bitfield is set to 1 and triggering for the last DDR PAGE.&#xD;&#xA;&#xD;&#xA;Not used in Encode usecase." resetval="0" end="16" begin="21" width="6"/>
        <bitfield id="RESERVED3" rwaccess="RW" range="" description="" resetval="0" end="22" begin="23" width="2"/>
        <bitfield id="RESERVED5" rwaccess="RW" range="" description="" resetval="0" end="24" begin="31" width="8"/>
    </register>
    <register id="__ALL___BSTRM_SET_ADDR" description="Specifies the starting address (byte address) of the new BitStream in the SL2 page." width="32" offset="0x124" page = "1" acronym="__ALL___BSTRM_SET_ADDR">
        <bitfield id="SET_ADDR" rwaccess="RW" range="" description="" resetval="0" end="0" begin="31" width="32"/>
    </register>
    <register id="__ALL___BSTRM_SETADD_SL2_PG_FULL" description="BSTRM_SET_SL2_PG_FULL: (When Active bitfield in BSTRM_STAUS register is 0)&#xD;&#xA;    In Decoder usecase in Typical flow (mode=0). Specifies the number of SL2 pages filled with BitStream data at the start of processing.&#xD;&#xA;    In Encoder usecase, This specifies the number of SL2 pages that are empty at the start of processing.&#xD;&#xA;&#xD;&#xA;BSTRM_ADD_SL2_PG_FULL: (When Active bitfield in BSTRM_STAUS register is 1)&#xD;&#xA;     In Decoder usecase, the subsequent SL2 page fills could be conveyed through SW by writing the incremental SL2 pages filled value.&#xD;&#xA;     Note: This approach is used when HW interface is not used (ie., EN_VDMA_GRPDONE &amp; EN_PAGEDONE bitfields are set to 0).&#xD;&#xA;     In Encode usecase, Subsequent SL2 page availablity could be conveyed by SW by writing the incremental SL2 page value.&#xD;&#xA;Note: In both usecase, when used to convey incremental value, the HW will take the updated value when BSTRM_INC_UPDATE bitfield is set to 1." width="32" offset="0x134" page = "1" acronym="__ALL___BSTRM_SETADD_SL2_PG_FULL">
        <bitfield id="SL2_PAGES" rwaccess="W" range="" description="Specifies the amount of BitStream data available in DDR in terms of SL2 pages.&#xD;&#xA;All writes, done after initiating the BitStream custom unit, with non-zero value will be considered as additional page available.&#xD;&#xA;Used to generate VDMA triggers to fetch the data from DDR to SL2 when HW interface is enabled." resetval="0" end="0" begin="11" width="12"/>
        <bitfield id="reserved" rwaccess="W" range="" description="" resetval="0" end="12" begin="31" width="20"/>
    </register>
    <register id="__ALL___BSTRM_SETADD_DDR_PAGES" description="Used in Decoder &amp; Encoder usecase.&#xD;&#xA;BSTRM_SET_DDR_PAGES: (When Active bitfield in BSTRM_STATUS register is 0)&#xD;&#xA;This register is used to convey information related to BitStream Data in DDR that is yet to be copied to SL2 at the start of processing in Decoder usecase.&#xD;&#xA;This register is used to convey information related to pages available in DDR to store the encoded bitstream data in Encoder usecase.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;BSTRM_ADD_DDR_PAGES:  (When Active bitfield in BSTRM_STATUS register is 1)&#xD;&#xA;When additional data is available in DDR after initiation in Decoder Fixed Chunk format (refer programming model section for details on Fixed Chunk format) or in encode usecase,  the provided value is used to increment the earlier value.&#xD;&#xA;Note: When used to convey incremental value, the HW will take the updated value when BSTRM_INC_UPDATE bitfield is set to 1." width="32" offset="0x138" page = "1" acronym="__ALL___BSTRM_SETADD_DDR_PAGES">
        <bitfield id="BSTRM_SETADD_DDR_PAGES" rwaccess="W" range="" description="This is used in when HW interface is enabled to&#xD;&#xA;i) generate triggers on the VDMA HW interface (when enabled) on PageDone indication.&#xD;&#xA;ii) Determine if the current SL2 page is the last page (when Last_pg_present is set)." resetval="0" end="0" begin="11" width="12"/>
        <bitfield id="reserved" rwaccess="W" range="" description="" resetval="0" end="12" begin="31" width="20"/>
    </register>
    <register id="__ALL___BSTRM_SETADD_PAGE_INFO" description="This is used to convey information regarding LastPage and its Size." width="32" offset="0x13C" page = "1" acronym="__ALL___BSTRM_SETADD_PAGE_INFO">
        <bitfield id="BSTRM_LP_PRESENT" rwaccess="W" range="" description="This field is used in Decoder usecase only.&#xD;&#xA;This field indicates if the Last Page is present in SL2 or in DDR(When HW interface is used). This is always set in Frame or N-Nal format. &#xD;&#xA;In case of Fixed Chunk format, this depends on the BitStream data (refer Programming Model section for details on formats). &#xD;&#xA;This field is updated along with BSTRM_ADD_DDR_PAGES in Fixed Chunk format." resetval="0" end="31" begin="31" width="1"/>
        <bitfield id="BSTRM_LP_SIZE" rwaccess="RW" range="" description="This field is used in Decoder usecase only.&#xD;&#xA;This specifies the size of the last page (in SL2).  This register is written by Software as part of setup (using BSTRM_CONF() CI) or while updating when additional data chunks are available (SW update by setting BSTRM_INC_UPDATE=1). &#xD;&#xA;The value written is expected to be in terms of bytes. Note that the data need not be available in SL2 at the time of updating this register.&#xD;&#xA;When BSTRM_LP_PRESENT was already asserted during the previous update (either during setup or during incremental update), the new BSTRM_LP_SIZE value adds to the previous specified value." resetval="0" end="0" begin="15" width="16"/>
        <bitfield id="reserved" rwaccess="W" range="" description="" resetval="0" end="16" begin="29" width="14"/>
        <bitfield id="BSTRM_INC_UPDATE" rwaccess="RW" range="" description="This bitfield is used in both decode and encode usecase.&#xD;&#xA;This BSTRM_INC_UPDATE bitfield needs to be set to 1 to enable the Bitstream custom block to use the incremental value written in the following registers.&#xD;&#xA;   1) BSTRM_ADD_SL2_PG_FULL&#xD;&#xA;   2) BSTRM_ADD_DDR_PAGES&#xD;&#xA;   3) BSTRM_LP_SIZE &#xD;&#xA;   4) BSTRM_LP_PRESENT&#xD;&#xA;&#xD;&#xA;The BSTRM_INC_UPDATE bit will be autocleared to 0 on HW register update. &#xD;&#xA;After the HW registers are updated, BSTRM_SETADD_SL2_PG_FULL &amp; BSTRM_SETADD_DDR_PAGES MMRs will be reset to zero (to ease subsequent incremental writes)." resetval="0" end="30" begin="30" width="1"/>
    </register>
    <register id="__ALL___BSTRM_RD_ADDR" description="Returns the SL2 address pointing to the next bitstream data to be processed in Decoder usecase.&#xD;&#xA;&#xD;&#xA;Returns the SL2 address where the next bitstream byte is to be written in Encoder usecase.&#xD;&#xA;&#xD;&#xA;Note: Also refer LATCH_STATUS bit description." width="32" offset="0x140" page = "1" acronym="__ALL___BSTRM_RD_ADDR">
        <bitfield id="RD_ADDR" rwaccess="R" range="" description="SL2 address being processed in Decoder usecase. &#xD;&#xA;SL2 address to be written in Encoder usecase. &#xD;&#xA;&#xD;&#xA;Note that the BSTRM_RD_ADDR will not change after UNDERRUN/OVERFLOW status is set." resetval="0" end="0" begin="31" width="32"/>
    </register>
    <register id="__ALL___BSTRM_RD_BITPTR" description="Returns the Bit pointer to be processed in Decoder usecase.&#xD;&#xA;Returns the current Bit Pointer within the Bitstream being encoded in encoder usecase.&#xD;&#xA;&#xD;&#xA;Note: Also refer LATCH_STATUS bit description." width="32" offset="0x144" page = "1" acronym="__ALL___BSTRM_RD_BITPTR">
        <bitfield id="RD_BitPtr" rwaccess="R" range="" description="Note that the BSTRM_RD_BITPTR will not change after UNDERRUN/OVERFLOW status is set.&#xD;&#xA;&#xD;&#xA;Decoder usecase:&#xD;&#xA;Follows Big Endian notation. &#xD;&#xA;0=&gt;all 8 bits valid. Next bit to be read starting from bit[7]&#xD;&#xA;1=&gt;7 bits valid in byte starting from bit[6].  &#xD;&#xA;...&#xD;&#xA;7=&gt;only 1 bit valid in the byte at position[0]&#xD;&#xA;&#xD;&#xA;Encoder usecase:&#xD;&#xA;0=&gt;Byte aligned. Next bit to be written at bit[7].&#xD;&#xA;1=&gt;1bit present. Next bit to be written at bit[6].&#xD;&#xA;...&#xD;&#xA;7=&gt;7bits present. Next bit to be written at bit[0]." resetval="0" end="0" begin="2" width="3"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="3" begin="31" width="29"/>
    </register>
    <register id="__ALL___BSTRM_RD_ZERO_BYTE_CNT" description="In decoder usecase:&#xD;&#xA;This register provides the count of zero bytes seen at the current Byte pointer. &#xD;&#xA;&#xD;&#xA;In Encoder usecase:&#xD;&#xA;This register provides the count of zero bytes encoded at the current byte pointer.&#xD;&#xA;&#xD;&#xA;Note: Also refer LATCH_STATUS bit description." width="32" offset="0x148" page = "1" acronym="__ALL___BSTRM_RD_ZERO_BYTE_CNT">
        <bitfield id="Zero_Byte_Count" rwaccess="R" range="" description="Count of Zero bytes decoded/encoded at the current byte position.&#xD;&#xA;0 : Byte pointer at end of non-zero byte position.&#xD;&#xA;1 : Byte pointer has seen/encoded one zero-byte. &#xD;&#xA;2 : Byte pointer has seen/encoded two zero-byte. &#xD;&#xA;3 : Byte pointer has seen/encoded three or more zero-byte/s.&#xD;&#xA;&#xD;&#xA;Note: The contents of this register during Search of SC pattern or Non-Zero byte pattern (_BSTRM_Search_Bits CI) would be&#xD;&#xA;   1) Zero when the search ends sucessfully by detecting the pattern.&#xD;&#xA;   2) undefined when the search is aborted by SW or ends in an underrun condition." resetval="0" end="0" begin="1" width="2"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="2" begin="31" width="30"/>
    </register>
    <register id="__ALL___BSTRM_RD_PG_FULL_STATUS" description="In Decoder usecase.&#xD;&#xA;Returns the count of SL2 &amp; DDR pages that contains BitStream data.&#xD;&#xA;(The count update of SL2 &amp; DDR pages happens on the same cycle, thereby ensuring correct counts on all reads).&#xD;&#xA;&#xD;&#xA;In Encoder usecase.&#xD;&#xA;Returns the count of SL2 pages that are still empty.&#xD;&#xA;&#xD;&#xA;Note: Also refer LATCH_STATUS bit description." width="32" offset="0x14C" page = "1" acronym="__ALL___BSTRM_RD_PG_FULL_STATUS">
        <bitfield id="SL2_PG_FULL" rwaccess="R" range="" description="Returns the count of SL2 pages that contains BitStream data (including the page being processed)." resetval="0" end="0" begin="11" width="12"/>
        <bitfield id="DDR_PG_FULL" rwaccess="R" range="" description="Used in SLice level Pipelining Flow only. &#xD;&#xA;Returns the count of DDR pages that contains (unread) BitStream data." resetval="0" end="16" begin="27" width="12"/>
        <bitfield id="reserved2" rwaccess="R" range="" description="" resetval="0" end="28" begin="30" width="3"/>
        <bitfield id="VDMA_TRF_ACTIVE" rwaccess="R" range="" description="Status bit indicating VDMA transfer trigerred by custom block (when VDMA hw interface is enabled) is ongoing." resetval="0" end="31" begin="31" width="1"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="12" begin="15" width="4"/>
    </register>
    <register id="__ALL___BSTRM_RD_DEPTH" description="Returns the bytes yet to be read in the allocated SL2 pages in Decoder usecase.&#xD;&#xA;Returns the bytes yet to be filled in the allocated SL2 pages in Encoder usecase. &#xD;&#xA;(return value is ceiled to BSTRM_PAGE_SIZE)&#xD;&#xA;&#xD;&#xA;Note: Also refer LATCH_STATUS bit description." width="32" offset="0x150" page = "1" acronym="__ALL___BSTRM_RD_DEPTH">
        <bitfield id="RD_DEPTH" rwaccess="R" range="" description="Returns the byte count. (Ceiled to BSTRM_PAGE_SIZE)" resetval="0" end="0" begin="23" width="24"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="24" begin="30" width="7"/>
        <bitfield id="NEXT_SL2_PG_FILLED" rwaccess="R" range="" description="Decoder usecase:&#xD;&#xA;Indicates if the next SL2 page is filled with unread BitStream data (High) or is empty (Low=to be filled)&#xD;&#xA;&#xD;&#xA;Encoder usecase:&#xD;&#xA;Indicates if the more than 1 page is available for writing (when 1) or just one or no page is available(when 0)." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___BSTRM_STATUS" description="Provides status of the custom block. Software writes 1 to the corresponding bitfield (except Thres_Cross &amp; Active) to clear the events." width="32" offset="0x158" page = "1" acronym="__ALL___BSTRM_STATUS">
        <bitfield id="Page_Done" rwaccess="R" range="" description="This bit is used in both Decode and Encode usecase, when HW interface is not enabled. &#xD;&#xA;In Decode usecase, this bit is set when the custom block parsing crosses a page.&#xD;&#xA;In Encode usecase, this bit is set when the custom block store writes to the last location of the page.&#xD;&#xA;&#xD;&#xA;Note that page_done set condition will also increment the PAGE_COUNT bitfield of this register. &#xD;&#xA;SW should update the PAGE_COUNT bitfield by writing 1 to the DEC_PAGE_COUNT (recommended) or CLR_PAGE_COUNT(when no further page_done set condition is expected) bitfields.&#xD;&#xA;&#xD;&#xA;This Page_Done bit gets cleared by HW when PAGE_COUNT bitfield contents equals zero." resetval="0" end="0" begin="0" width="1"/>
        <bitfield id="Underrun_Overflow" rwaccess="RW" range="" description="This is used in both decoder &amp; encoder usecase. &#xD;&#xA;Note that the BSTRM_RD_BITPTR and BSTRM_RD_ADDR will not change after UNDERRUN/OVERFLOW status is set.&#xD;&#xA;&#xD;&#xA;This UNDERRUN bit is set in two conditions in Decoder usecase&#xD;&#xA;1) During BitStream SW parsing when it exhausts all the valid data in SL2.&#xD;&#xA;2) During StartCode search, when it does not find the StartCode and exhausts all valid data provided with LP_Present =1.&#xD;&#xA;This bit is cleared by writing 1 to this bit.&#xD;&#xA;&#xD;&#xA;This OVERFLOW bit is set in two conditions in encoder usecase&#xD;&#xA;1) During BitStream SW encoding when all the CB buffers and SL2 pages are filled.&#xD;&#xA;This bit is cleared by writing 1 to this bit." resetval="0" end="1" begin="1" width="1"/>
        <bitfield id="Start_Code" rwaccess="RW" range="" description="This bit is used in decode usecase. &#xD;&#xA;This is asserted by custom block, when initiated to detect the start code in BitStream data, on detecting the start_code.&#xD;&#xA;This is asserted by custom block, when initiated without start code detection, when the work buffer is filled with prefetch data.&#xD;&#xA;This bit is cleared by writing 1 to this bit." resetval="0" end="2" begin="2" width="1"/>
        <bitfield id="Thres_Cross" rwaccess="R" range="" description="This bit in Decode usecase: &#xD;&#xA;This status bit is set when the number of unread bytes within Custom Block (after EPB removal) plus the unread bytes in SL2 is less than the value configured in BSTRM_THRESHOLD register. This bit gets cleared when additional data is added in SL2.&#xD;&#xA;This bit in Encode usecase: &#xD;&#xA;This status bit is set when the number of free bytes in SL2 is less than the value configured in BSTRM_THRESHOLD register. This bit gets cleared when additional SL2 pages are freed(gets written to DDR).&#xD;&#xA;This bit is auto cleared by HW when the condition to set is no longer present." resetval="0" end="4" begin="4" width="1"/>
        <bitfield id="Store_Complete" rwaccess="RW" range="" description="This bit is used in Encode usecase. &#xD;&#xA;This is asserted by custom unit subsequent to _BSTRM_Store instruction, when the encoded BitStream present in work buffer or prefetch buffer are written in SL2.&#xD;&#xA;When VDMA trigger is enabled, this assertion waits for VDMA transfer completion.&#xD;&#xA;This bit is cleared by writing 1 to this bit." resetval="0" end="3" begin="3" width="1"/>
        <bitfield id="StartCode_Overrun" rwaccess="RW" range="" description="This is used in Decoder usecase.&#xD;&#xA;This is asserted when StartCode is &quot;parsed&quot; as data using _BSTRM_READ*/FLUSH CIs.&#xD;&#xA;This bit is cleared by writing 1 to this bit." resetval="0" end="7" begin="7" width="1"/>
        <bitfield id="DDR_Empty" rwaccess="RW" range="" description="This bit is used only in Decode usecase, is set when the configured number of transfers (see BSTRM_SETADD_DDR_PAGES register) is completed.&#xD;&#xA;SW can use this to update the VDMA descriptor with the next portion of Bitstream is located at different DDR address. Along with the VDMA descriptor, SW should indicate the additional DDR page count and the page information by updating the BSTRM_SETADD_DDR_PAGES and BSTRM_SET_PAGE_INFO accordingly.&#xD;&#xA;This bit is cleared by writing 1 to this bit." resetval="0" end="5" begin="5" width="1"/>
        <bitfield id="Active" rwaccess="R" range="" description="This indicates if the BitStream Custom Block is in active state (1) or in idle state (0).&#xD;&#xA;This bit is set by the _BSTRM_Conf intrinsic in both encode and decode usecase.&#xD;&#xA;This bit is cleared on the following condition&#xD;&#xA;   i) Abort bitfield is set in BSTRM_CTRL register and on completion of active SL2 transaction.&#xD;&#xA;  ii) _BSTRM_Store intrinsic is issued in encode usecase and on completing all SL2 writes. (will wait for VDMA completion as well)&#xD;&#xA;    Note: Active bit is not cleared on underrun or overflow error.&#xD;&#xA;&#xD;&#xA;This is a readonly bit." resetval="0" end="6" begin="6" width="1"/>
        <bitfield id="Reserved2" rwaccess="R" range="" description="" resetval="0" end="8" begin="15" width="8"/>
        <bitfield id="PAGE_COUNT" rwaccess="R" range="" description="This bitfield is used in both Decode and Encode usecase.&#xD;&#xA;This bitfield is used in systems where the interrupt latency exceeds the custom block page processing time.&#xD;&#xA;&#xD;&#xA;When HW interface (either ECD or VDMA) is not enabled, this bitfield will be incremented by Custom Block on every page freed(in decode)/filled(in encode). SW would acknowledge this by decrementing (recommended) or clearing this bitfield.&#xD;&#xA;&#xD;&#xA;When VDMA HW interface is enabled, this bitfield is incremented on page freed/filled event that did not generate in VDMA trigger. This is possible when the VDMA is actively transferring data of last trigger or when the provided DDR_PAGES count has reached 0. For the former case, the custom block will decement this count when it triggers the next VDMA transfer. For latter, SW could either provide additional DDR pages to custom block OR could acknowledge its handling of &quot;extra&quot; page transfers by decrementing the count.&#xD;&#xA;This bitfield is not used when ECD HW interface is enabled.&#xD;&#xA;&#xD;&#xA;SW should update the PAGE_COUNT bitfield by writing 1 to the DEC_PAGE_COUNT or CLR_PAGE_COUNT bitfields.&#xD;&#xA;Writing 1 to DEC_PAGE_COUNT will decrement the PAGE_COUNT content by 1.&#xD;&#xA;Writing 1 to CLR_PAGE_COUNT will clear the PAGE_COUNT contents." resetval="0" end="20" begin="27" width="8"/>
        <bitfield id="DEC_PAGE_COUNT" rwaccess="RW" range="" description="SW writes 1 to this bitfiles to decrement the PAGE_COUNT bitfield by 1.&#xD;&#xA;This bit is auto cleared. &#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="18" begin="18" width="1"/>
        <bitfield id="CLR_PAGE_COUNT" rwaccess="RW" range="" description="SW writes 1 to this bitfiles to clear the PAGE_COUNT bitfield to 0.&#xD;&#xA;This bit is auto cleared.&#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="19" begin="19" width="1"/>
        <bitfield id="Reserved" rwaccess="RW" range="" description="" resetval="0" end="17" begin="17" width="1"/>
        <bitfield id="Latch_Status" rwaccess="RW" range="" description="Used in both Encode &amp; Decode Usecase.&#xD;&#xA;This bit has to be set to 1 to copy the current HW status registers into the memory mapped registers.&#xD;&#xA;This bit will be auto cleared to 0.&#xD;&#xA;&#xD;&#xA;Note: HW will implicitly assume Latch_Status condition when the Bitstream makes transition from ACTIVE to IDLE state.&#xD;&#xA;(ie., During Abort condition in Decoder usecase or Store_Complete condition in encode usecase).&#xD;&#xA;&#xD;&#xA;The following memory mapped register contents will be updated when this bit is set to 1.&#xD;&#xA;&#x9;1) BSTRM_RD_ADDR&#xD;&#xA;&#x9;2) BSTRM_RD_BITPTR&#xD;&#xA;&#x9;3) BSTRM_RD_ZERO_BYTE_CNT&#xD;&#xA;&#x9;4) BSTRM_RD_PG_FULL_STATUS&#xD;&#xA;&#x9;5) BSTRM_RD_PAGE_STATUS2&#xD;&#xA;&#x9;6) BSTRM_RD_DEPTH&#xD;&#xA;The above register will hold its contents untill LATCH_STATUS is set to 1 again." resetval="0" end="16" begin="16" width="1"/>
        <bitfield id="Reserved1" rwaccess="R" range="" description="" resetval="0" end="28" begin="31" width="4"/>
    </register>
    <register id="__ALL___BSTRM_RD_PAGE_STATUS2" description="In Decoder usecase.&#xD;&#xA;Returns the count of SL2 &amp; DDR pages that contains BitStream data.&#xD;&#xA;(The count update of SL2 &amp; DDR pages happens on the same cycle, thereby ensuring correct counts on all reads).&#xD;&#xA;&#xD;&#xA;In Encoder usecase.&#xD;&#xA;Returns the count of SL2 pages that are still empty.&#xD;&#xA;&#xD;&#xA;Note: Also refer LATCH_STATUS bit description." width="32" offset="0x15C" page = "1" acronym="__ALL___BSTRM_RD_PAGE_STATUS2">
        <bitfield id="CONSUME_PAGE" rwaccess="R" range="" description="Returns the cumulative count of SL2/DDR page consumed(decode)/filled(encode) by the Custom Block.&#xD;&#xA;This bitfield is cleared when BSTRM_Config CI is issued." resetval="0" end="0" begin="15" width="16"/>
        <bitfield id="reserved2" rwaccess="R" range="" description="" resetval="0" end="16" begin="31" width="16"/>
    </register>
    <register id="__ALL___SB_CSL2BC0_BUF_DEPTH" description="Buffer depth configuration register for Consumer SL2BC0." width="32" offset="0x180" page = "1" acronym="__ALL___SB_CSL2BC0_BUF_DEPTH">
        <bitfield id="ACTUAL_DEPTH_MINUS1" rwaccess="RW" range="" description="Number of entries in the Buffer = 1 + Actual_ depth_minus1" resetval="0" end="0" begin="9" width="10"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="10" begin="15" width="6"/>
        <bitfield id="VIRTUAL_DEPTH_MINUS1" rwaccess="RW" range="" description="Indicates the Maximum pointer difference. Virtual buffer depth &lt; Actual buffer depth. When the pointer difference is more than the virtual buffer depth the wr_bc_ready gets de-asserted. &#xD;&#xA;For Normal use cases, virtual depth = actual depth.&#xD;&#xA;For H241 rewind, virtual depth &lt; actual depth. The difference between the actual and virtual depth indicates the number of MB’s by which the buffer can be rewinded." resetval="0" end="16" begin="25" width="10"/>
        <bitfield id="Reserved1" rwaccess="R" range="" description="" resetval="0" end="26" begin="31" width="6"/>
    </register>
    <register id="__ALL___SB_CSL2BC0_START_PTR" description="Configures the Initial value of Buffer pointers for Consumer SL2BC0." width="32" offset="0x184" page = "1" acronym="__ALL___SB_CSL2BC0_START_PTR">
        <bitfield id="WR_POINTER" rwaccess="RW" range="" description="Start value of Write pointer, initialized on BC_CLR.&#xD;&#xA;Range: 0 to Actual_depth_minus1" resetval="0" end="0" begin="9" width="10"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="10" begin="15" width="6"/>
        <bitfield id="RD_POINTER" rwaccess="RW" range="" description="Start value of Read pointer, initialized on BC_CLR.&#xD;&#xA;Range: 0 to Actual_depth_minus1" resetval="0" end="16" begin="25" width="10"/>
        <bitfield id="Reserved1" rwaccess="R" range="" description="" resetval="0" end="26" begin="30" width="5"/>
        <bitfield id="FULL_ON_CLEAR" rwaccess="RW" range="" description="If start value of RD pointer = start value of WR pointer as configured in the BUF_START_PTR then&#xD;&#xA;0: Buffer is empty on  BC_CLR&#xD;&#xA;1: Buffer is full on  BC_CLR" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___SB_CSL2BC0_PTR_INC" description="Configures the increment offset for buffer pointers of Consumer SL2BC0." width="32" offset="0x188" page = "1" acronym="__ALL___SB_CSL2BC0_PTR_INC">
        <bitfield id="WR_POINTER_INC" rwaccess="RW" range="" description="Increment value for write pointer on wr_core_busy deassertion.&#xD;&#xA;Range: 0 to Actual_depth_minus1+1" resetval="0" end="0" begin="9" width="10"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="10" begin="15" width="6"/>
        <bitfield id="RD_POINTER_INC" rwaccess="RW" range="" description="Increment value for read pointer on rd_core_busy deassertion.&#xD;&#xA;Range: 0 to Actual_depth_minus1+1" resetval="0" end="16" begin="25" width="10"/>
        <bitfield id="Reserved1" rwaccess="R" range="" description="" resetval="0" end="26" begin="31" width="6"/>
    </register>
    <register id="__ALL___SB_CSL2BC1_BUF_DEPTH" description="Buffer depth configuration register for Consumer SL2BC1." width="32" offset="0x18C" page = "1" acronym="__ALL___SB_CSL2BC1_BUF_DEPTH">
        <bitfield id="ACTUAL_DEPTH_MINUS1" rwaccess="RW" range="" description="Number of entries in the Buffer = 1 + Actual_ depth_minus1" resetval="0" end="0" begin="9" width="10"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="10" begin="15" width="6"/>
        <bitfield id="VIRTUAL_DEPTH_MINUS1" rwaccess="RW" range="" description="Indicates the Maximum pointer difference. Virtual buffer depth &lt; Actual buffer depth. When the pointer difference is more than the virtual buffer depth the wr_bc_ready gets de-asserted. &#xD;&#xA;For Normal use cases, virtual depth = actual depth.&#xD;&#xA;For H241 rewind, virtual depth &lt; actual depth. The difference between the actual and virtual depth indicates the number of MB’s by which the buffer can be rewinded." resetval="0" end="16" begin="25" width="10"/>
        <bitfield id="Reserved1" rwaccess="R" range="" description="" resetval="0" end="26" begin="31" width="6"/>
    </register>
    <register id="__ALL___SB_CSL2BC1_START_PTR" description="Configures the Initial value of Buffer pointers for Consumer SL2BC1." width="32" offset="0x190" page = "1" acronym="__ALL___SB_CSL2BC1_START_PTR">
        <bitfield id="WR_POINTER" rwaccess="RW" range="" description="Start value of Write pointer, initialized on BC_CLR.&#xD;&#xA;Range: 0 to Actual_depth_minus1" resetval="0" end="0" begin="9" width="10"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="10" begin="15" width="6"/>
        <bitfield id="RD_POINTER" rwaccess="RW" range="" description="Start value of Read pointer, initialized on BC_CLR.&#xD;&#xA;Range: 0 to Actual_depth_minus1" resetval="0" end="16" begin="25" width="10"/>
        <bitfield id="Reserved1" rwaccess="R" range="" description="" resetval="0" end="26" begin="30" width="5"/>
        <bitfield id="FULL_ON_CLEAR" rwaccess="RW" range="" description="If start value of RD pointer = start value of WR pointer as configured in the BUF_START_PTR then&#xD;&#xA;0: Buffer is empty on  BC_CLR&#xD;&#xA;1: Buffer is full on  BC_CLR" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___SB_CSL2BC1_PTR_INC" description="Configures the increment offset for buffer pointers of Consumer SL2BC1." width="32" offset="0x194" page = "1" acronym="__ALL___SB_CSL2BC1_PTR_INC">
        <bitfield id="WR_POINTER_INC" rwaccess="RW" range="" description="Increment value for write pointer on wr_core_busy deassertion.&#xD;&#xA;Range: 0 to Actual_depth_minus1+1" resetval="0" end="0" begin="9" width="10"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="10" begin="15" width="6"/>
        <bitfield id="RD_POINTER_INC" rwaccess="RW" range="" description="Increment value for read pointer on rd_core_busy deassertion.&#xD;&#xA;Range: 0 to Actual_depth_minus1+1" resetval="0" end="16" begin="25" width="10"/>
        <bitfield id="Reserved1" rwaccess="R" range="" description="" resetval="0" end="26" begin="31" width="6"/>
    </register>
    <register id="__ALL___SB_CSL2BC2_BUF_DEPTH" description="Buffer depth configuration register for Consumer SL2BC2." width="32" offset="0x198" page = "1" acronym="__ALL___SB_CSL2BC2_BUF_DEPTH">
        <bitfield id="ACTUAL_DEPTH_MINUS1" rwaccess="RW" range="" description="Number of entries in the Buffer = 1 + Actual_ depth_minus1" resetval="0" end="0" begin="9" width="10"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="10" begin="15" width="6"/>
        <bitfield id="VIRTUAL_DEPTH_MINUS1" rwaccess="RW" range="" description="Indicates the Maximum pointer difference. Virtual buffer depth &lt; Actual buffer depth. When the pointer difference is more than the virtual buffer depth the wr_bc_ready gets de-asserted. &#xD;&#xA;For Normal use cases, virtual depth = actual depth.&#xD;&#xA;For H241 rewind, virtual depth &lt; actual depth. The difference between the actual and virtual depth indicates the number of MB’s by which the buffer can be rewinded." resetval="0" end="16" begin="25" width="10"/>
        <bitfield id="Reserved1" rwaccess="R" range="" description="" resetval="0" end="26" begin="31" width="6"/>
    </register>
    <register id="__ALL___SB_CSL2BC2_START_PTR" description="Configures the Initial value of Buffer pointers for Consumer SL2BC2." width="32" offset="0x19C" page = "1" acronym="__ALL___SB_CSL2BC2_START_PTR">
        <bitfield id="WR_POINTER" rwaccess="RW" range="" description="Start value of Write pointer, initialized on BC_CLR.&#xD;&#xA;Range: 0 to Actual_depth_minus1" resetval="0" end="0" begin="9" width="10"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="10" begin="15" width="6"/>
        <bitfield id="RD_POINTER" rwaccess="RW" range="" description="Start value of Read pointer, initialized on BC_CLR.&#xD;&#xA;Range: 0 to Actual_depth_minus1" resetval="0" end="16" begin="25" width="10"/>
        <bitfield id="Reserved1" rwaccess="R" range="" description="" resetval="0" end="26" begin="30" width="5"/>
        <bitfield id="FULL_ON_CLEAR" rwaccess="RW" range="" description="If start value of RD pointer = start value of WR pointer as configured in the BUF_START_PTR then&#xD;&#xA;0: Buffer is empty on  BC_CLR&#xD;&#xA;1: Buffer is full on  BC_CLR" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___SB_CSL2BC2_PTR_INC" description="Configures the increment offset for buffer pointers of Consumer SL2BC2." width="32" offset="0x1A0" page = "1" acronym="__ALL___SB_CSL2BC2_PTR_INC">
        <bitfield id="WR_POINTER_INC" rwaccess="RW" range="" description="Increment value for write pointer on wr_core_busy deassertion.&#xD;&#xA;Range: 0 to Actual_depth_minus1+1" resetval="0" end="0" begin="9" width="10"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="10" begin="15" width="6"/>
        <bitfield id="RD_POINTER_INC" rwaccess="RW" range="" description="Increment value for read pointer on rd_core_busy deassertion.&#xD;&#xA;Range: 0 to Actual_depth_minus1+1" resetval="0" end="16" begin="25" width="10"/>
        <bitfield id="Reserved1" rwaccess="R" range="" description="" resetval="0" end="26" begin="31" width="6"/>
    </register>
    <register id="__ALL___SB_CSL2BC3_BUF_DEPTH" description="Buffer depth configuration register for Consumer SL2BC3." width="32" offset="0x1A4" page = "1" acronym="__ALL___SB_CSL2BC3_BUF_DEPTH">
        <bitfield id="ACTUAL_DEPTH_MINUS1" rwaccess="RW" range="" description="Number of entries in the Buffer = 1 + Actual_ depth_minus1" resetval="0" end="0" begin="9" width="10"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="10" begin="15" width="6"/>
        <bitfield id="VIRTUAL_DEPTH_MINUS1" rwaccess="RW" range="" description="Indicates the Maximum pointer difference. Virtual buffer depth &lt; Actual buffer depth. When the pointer difference is more than the virtual buffer depth the wr_bc_ready gets de-asserted. &#xD;&#xA;For Normal use cases, virtual depth = actual depth.&#xD;&#xA;For H241 rewind, virtual depth &lt; actual depth. The difference between the actual and virtual depth indicates the number of MB’s by which the buffer can be rewinded." resetval="0" end="16" begin="25" width="10"/>
        <bitfield id="Reserved1" rwaccess="R" range="" description="" resetval="0" end="26" begin="31" width="6"/>
    </register>
    <register id="__ALL___SB_CSL2BC3_START_PTR" description="Configures the Initial value of Buffer pointers for Consumer SL2BC3." width="32" offset="0x1A8" page = "1" acronym="__ALL___SB_CSL2BC3_START_PTR">
        <bitfield id="WR_POINTER" rwaccess="RW" range="" description="Start value of Write pointer, initialized on BC_CLR.&#xD;&#xA;Range: 0 to Actual_depth_minus1" resetval="0" end="0" begin="9" width="10"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="10" begin="15" width="6"/>
        <bitfield id="RD_POINTER" rwaccess="RW" range="" description="Start value of Read pointer, initialized on BC_CLR.&#xD;&#xA;Range: 0 to Actual_depth_minus1" resetval="0" end="16" begin="25" width="10"/>
        <bitfield id="Reserved1" rwaccess="R" range="" description="" resetval="0" end="26" begin="30" width="5"/>
        <bitfield id="FULL_ON_CLEAR" rwaccess="RW" range="" description="If start value of RD pointer = start value of WR pointer as configured in the BUF_START_PTR then&#xD;&#xA;0: Buffer is empty on  BC_CLR&#xD;&#xA;1: Buffer is full on  BC_CLR" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___SB_CSL2BC3_PTR_INC" description="Configures the increment offset for buffer pointers of Consumer SL2BC3." width="32" offset="0x1AC" page = "1" acronym="__ALL___SB_CSL2BC3_PTR_INC">
        <bitfield id="WR_POINTER_INC" rwaccess="RW" range="" description="Increment value for write pointer on wr_core_busy deassertion.&#xD;&#xA;Range: 0 to Actual_depth_minus1+1" resetval="0" end="0" begin="9" width="10"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="10" begin="15" width="6"/>
        <bitfield id="RD_POINTER_INC" rwaccess="RW" range="" description="Increment value for read pointer on rd_core_busy deassertion.&#xD;&#xA;Range: 0 to Actual_depth_minus1+1" resetval="0" end="16" begin="25" width="10"/>
        <bitfield id="Reserved1" rwaccess="R" range="" description="" resetval="0" end="26" begin="31" width="6"/>
    </register>
    <register id="__ALL___SB_CSL2BC4_BUF_DEPTH" description="Buffer depth configuration register for Consumer SL2BC4." width="32" offset="0x1B0" page = "1" acronym="__ALL___SB_CSL2BC4_BUF_DEPTH">
        <bitfield id="ACTUAL_DEPTH_MINUS1" rwaccess="RW" range="" description="Number of entries in the Buffer = 1 + Actual_ depth_minus1" resetval="0" end="0" begin="9" width="10"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="10" begin="15" width="6"/>
        <bitfield id="VIRTUAL_DEPTH_MINUS1" rwaccess="RW" range="" description="Indicates the Maximum pointer difference. Virtual buffer depth &lt; Actual buffer depth. When the pointer difference is more than the virtual buffer depth the wr_bc_ready gets de-asserted. &#xD;&#xA;For Normal use cases, virtual depth = actual depth.&#xD;&#xA;For H241 rewind, virtual depth &lt; actual depth. The difference between the actual and virtual depth indicates the number of MB’s by which the buffer can be rewinded." resetval="0" end="16" begin="25" width="10"/>
        <bitfield id="Reserved1" rwaccess="R" range="" description="" resetval="0" end="26" begin="31" width="6"/>
    </register>
    <register id="__ALL___SB_CSL2BC4_START_PTR" description="Configures the Initial value of Buffer pointers for Consumer SL2BC4." width="32" offset="0x1B4" page = "1" acronym="__ALL___SB_CSL2BC4_START_PTR">
        <bitfield id="WR_POINTER" rwaccess="RW" range="" description="Start value of Write pointer, initialized on BC_CLR.&#xD;&#xA;Range: 0 to Actual_depth_minus1" resetval="0" end="0" begin="9" width="10"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="10" begin="15" width="6"/>
        <bitfield id="RD_POINTER" rwaccess="RW" range="" description="Start value of Read pointer, initialized on BC_CLR.&#xD;&#xA;Range: 0 to Actual_depth_minus1" resetval="0" end="16" begin="25" width="10"/>
        <bitfield id="Reserved1" rwaccess="R" range="" description="" resetval="0" end="26" begin="30" width="5"/>
        <bitfield id="FULL_ON_CLEAR" rwaccess="RW" range="" description="If start value of RD pointer = start value of WR pointer as configured in the BUF_START_PTR then&#xD;&#xA;0: Buffer is empty on  BC_CLR&#xD;&#xA;1: Buffer is full on  BC_CLR" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___SB_CSL2BC4_PTR_INC" description="Configures the increment offset for buffer pointers of Consumer SL2BC4." width="32" offset="0x1B8" page = "1" acronym="__ALL___SB_CSL2BC4_PTR_INC">
        <bitfield id="WR_POINTER_INC" rwaccess="RW" range="" description="Increment value for write pointer on wr_core_busy deassertion.&#xD;&#xA;Range: 0 to Actual_depth_minus1+1" resetval="0" end="0" begin="9" width="10"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="10" begin="15" width="6"/>
        <bitfield id="RD_POINTER_INC" rwaccess="RW" range="" description="Increment value for read pointer on rd_core_busy deassertion.&#xD;&#xA;Range: 0 to Actual_depth_minus1+1" resetval="0" end="16" begin="25" width="10"/>
        <bitfield id="Reserved1" rwaccess="R" range="" description="" resetval="0" end="26" begin="31" width="6"/>
    </register>
    <register id="__ALL___SB_CSL2BC5_BUF_DEPTH" description="Buffer depth configuration register for Consumer SL2BC5." width="32" offset="0x1BC" page = "1" acronym="__ALL___SB_CSL2BC5_BUF_DEPTH">
        <bitfield id="ACTUAL_DEPTH_MINUS1" rwaccess="RW" range="" description="Number of entries in the Buffer = 1 + Actual_ depth_minus1" resetval="0" end="0" begin="9" width="10"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="10" begin="15" width="6"/>
        <bitfield id="VIRTUAL_DEPTH_MINUS1" rwaccess="RW" range="" description="Indicates the Maximum pointer difference. Virtual buffer depth &lt; Actual buffer depth. When the pointer difference is more than the virtual buffer depth the wr_bc_ready gets de-asserted. &#xD;&#xA;For Normal use cases, virtual depth = actual depth.&#xD;&#xA;For H241 rewind, virtual depth &lt; actual depth. The difference between the actual and virtual depth indicates the number of MB’s by which the buffer can be rewinded." resetval="0" end="16" begin="25" width="10"/>
        <bitfield id="Reserved1" rwaccess="R" range="" description="" resetval="0" end="26" begin="31" width="6"/>
    </register>
    <register id="__ALL___SB_CSL2BC5_START_PTR" description="Configures the Initial value of Buffer pointers for Consumer SL2BC5." width="32" offset="0x1C0" page = "1" acronym="__ALL___SB_CSL2BC5_START_PTR">
        <bitfield id="WR_POINTER" rwaccess="RW" range="" description="Start value of Write pointer, initialized on BC_CLR.&#xD;&#xA;Range: 0 to Actual_depth_minus1" resetval="0" end="0" begin="9" width="10"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="10" begin="15" width="6"/>
        <bitfield id="RD_POINTER" rwaccess="RW" range="" description="Start value of Read pointer, initialized on BC_CLR.&#xD;&#xA;Range: 0 to Actual_depth_minus1" resetval="0" end="16" begin="25" width="10"/>
        <bitfield id="Reserved1" rwaccess="R" range="" description="" resetval="0" end="26" begin="30" width="5"/>
        <bitfield id="FULL_ON_CLEAR" rwaccess="RW" range="" description="If start value of RD pointer = start value of WR pointer as configured in the BUF_START_PTR then&#xD;&#xA;0: Buffer is empty on  BC_CLR&#xD;&#xA;1: Buffer is full on  BC_CLR" resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___SB_CSL2BC5_PTR_INC" description="Configures the increment offset for buffer pointers of Consumer SL2BC5." width="32" offset="0x1C4" page = "1" acronym="__ALL___SB_CSL2BC5_PTR_INC">
        <bitfield id="WR_POINTER_INC" rwaccess="RW" range="" description="Increment value for write pointer on wr_core_busy deassertion.&#xD;&#xA;Range: 0 to Actual_depth_minus1+1" resetval="0" end="0" begin="9" width="10"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="10" begin="15" width="6"/>
        <bitfield id="RD_POINTER_INC" rwaccess="RW" range="" description="Increment value for read pointer on rd_core_busy deassertion.&#xD;&#xA;Range: 0 to Actual_depth_minus1+1" resetval="0" end="16" begin="25" width="10"/>
        <bitfield id="Reserved1" rwaccess="R" range="" description="" resetval="0" end="26" begin="31" width="6"/>
    </register>
    <register id="__ALL___SB_CSL2BC0_STATUS" description="Indicates Status of Consumer SL2BC0." width="32" offset="0x1E0" page = "1" acronym="__ALL___SB_CSL2BC0_STATUS">
        <bitfield id="WR_POINTER" rwaccess="R" range="" description="Current Write pointer value which is going to be written or which is being written. Write pointer will always be less than ‘Actual buffer depth ’" resetval="0" end="0" begin="9" width="10"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="12" begin="14" width="3"/>
        <bitfield id="RD_POINTER" rwaccess="R" range="" description="Current Read pointer value which is going to be read or being read. Read pointer will always be less than ‘Actual buffer depth ’" resetval="0" end="16" begin="25" width="10"/>
        <bitfield id="WR_STATUS" rwaccess="R" range="" description="Indicates the BC status on the write side&#xD;&#xA;BC NOT READY = 00 (wr_core_busy=0  &amp; wr_bc_ready=0)&#xD;&#xA;BC READY = 01 (wr_core_busy=0  &amp; wr_bc_ready=1)&#xD;&#xA;BC BUSY = 1x (wr_core_busy=1)" resetval="0" end="10" begin="11" width="2"/>
        <bitfield id="FULL" rwaccess="R" range="" description="buffer full status&#xD;&#xA;‘1’ -&gt; buffer is full&#xD;&#xA;‘0’ -&gt; buffer is not full" resetval="0" end="15" begin="15" width="1"/>
        <bitfield id="RD_STATUS" rwaccess="R" range="" description="Indicates the BC status on the read side&#xD;&#xA;BC NOT READY = 00 (rd_core_busy=0 &amp; rd_bc_ready=0)&#xD;&#xA;BC READY = 01 (rd_core_busy=0 &amp; rd_bc_ready=1)&#xD;&#xA;BC BUSY = 1x (rd_core_busy=1)" resetval="0" end="26" begin="27" width="2"/>
        <bitfield id="reserved1" rwaccess="R" range="" description="" resetval="0" end="28" begin="30" width="3"/>
        <bitfield id="EMPTY" rwaccess="R" range="" description="buffer empty status&#xD;&#xA;‘1’ -&gt; buffer is empty&#xD;&#xA;‘0’ -&gt; buffer is not empty" resetval="1" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___SB_CSL2BC1_STATUS" description="Indicates Status of Consumer SL2BC1." width="32" offset="0x1E4" page = "1" acronym="__ALL___SB_CSL2BC1_STATUS">
        <bitfield id="WR_POINTER" rwaccess="R" range="" description="Current Write pointer value which is going to be written or which is being written. Write pointer will always be less than ‘Actual buffer depth ’" resetval="0" end="0" begin="9" width="10"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="12" begin="14" width="3"/>
        <bitfield id="RD_POINTER" rwaccess="R" range="" description="Current Read pointer value which is going to be read or being read. Read pointer will always be less than ‘Actual buffer depth ’" resetval="0" end="16" begin="25" width="10"/>
        <bitfield id="WR_STATUS" rwaccess="R" range="" description="Indicates the BC status on the write side&#xD;&#xA;BC NOT READY = 00 (wr_core_busy=0  &amp; wr_bc_ready=0)&#xD;&#xA;BC READY = 01 (wr_core_busy=0  &amp; wr_bc_ready=1)&#xD;&#xA;BC BUSY = 1x (wr_core_busy=1)" resetval="0" end="10" begin="11" width="2"/>
        <bitfield id="FULL" rwaccess="R" range="" description="buffer full status&#xD;&#xA;‘1’ -&gt; buffer is full&#xD;&#xA;‘0’ -&gt; buffer is not full" resetval="0" end="15" begin="15" width="1"/>
        <bitfield id="RD_STATUS" rwaccess="R" range="" description="Indicates the BC status on the read side&#xD;&#xA;BC NOT READY = 00 (rd_core_busy=0 &amp; rd_bc_ready=0)&#xD;&#xA;BC READY = 01 (rd_core_busy=0 &amp; rd_bc_ready=1)&#xD;&#xA;BC BUSY = 1x (rd_core_busy=1)" resetval="0" end="26" begin="27" width="2"/>
        <bitfield id="reserved1" rwaccess="R" range="" description="" resetval="0" end="28" begin="30" width="3"/>
        <bitfield id="EMPTY" rwaccess="R" range="" description="buffer empty status&#xD;&#xA;‘1’ -&gt; buffer is empty&#xD;&#xA;‘0’ -&gt; buffer is not empty" resetval="1" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___SB_CSL2BC2_STATUS" description="Indicates Status of Consumer SL2BC2." width="32" offset="0x1E8" page = "1" acronym="__ALL___SB_CSL2BC2_STATUS">
        <bitfield id="WR_POINTER" rwaccess="R" range="" description="Current Write pointer value which is going to be written or which is being written. Write pointer will always be less than ‘Actual buffer depth ’" resetval="0" end="0" begin="9" width="10"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="12" begin="14" width="3"/>
        <bitfield id="RD_POINTER" rwaccess="R" range="" description="Current Read pointer value which is going to be read or being read. Read pointer will always be less than ‘Actual buffer depth ’" resetval="0" end="16" begin="25" width="10"/>
        <bitfield id="WR_STATUS" rwaccess="R" range="" description="Indicates the BC status on the write side&#xD;&#xA;BC NOT READY = 00 (wr_core_busy=0  &amp; wr_bc_ready=0)&#xD;&#xA;BC READY = 01 (wr_core_busy=0  &amp; wr_bc_ready=1)&#xD;&#xA;BC BUSY = 1x (wr_core_busy=1)" resetval="0" end="10" begin="11" width="2"/>
        <bitfield id="FULL" rwaccess="R" range="" description="buffer full status&#xD;&#xA;‘1’ -&gt; buffer is full&#xD;&#xA;‘0’ -&gt; buffer is not full" resetval="0" end="15" begin="15" width="1"/>
        <bitfield id="RD_STATUS" rwaccess="R" range="" description="Indicates the BC status on the read side&#xD;&#xA;BC NOT READY = 00 (rd_core_busy=0 &amp; rd_bc_ready=0)&#xD;&#xA;BC READY = 01 (rd_core_busy=0 &amp; rd_bc_ready=1)&#xD;&#xA;BC BUSY = 1x (rd_core_busy=1)" resetval="0" end="26" begin="27" width="2"/>
        <bitfield id="reserved1" rwaccess="R" range="" description="" resetval="0" end="28" begin="30" width="3"/>
        <bitfield id="EMPTY" rwaccess="R" range="" description="buffer empty status&#xD;&#xA;‘1’ -&gt; buffer is empty&#xD;&#xA;‘0’ -&gt; buffer is not empty" resetval="1" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___SB_CSL2BC3_STATUS" description="Indicates Status of Consumer SL2BC3." width="32" offset="0x1EC" page = "1" acronym="__ALL___SB_CSL2BC3_STATUS">
        <bitfield id="WR_POINTER" rwaccess="R" range="" description="Current Write pointer value which is going to be written or which is being written. Write pointer will always be less than ‘Actual buffer depth ’" resetval="0" end="0" begin="9" width="10"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="12" begin="14" width="3"/>
        <bitfield id="RD_POINTER" rwaccess="R" range="" description="Current Read pointer value which is going to be read or being read. Read pointer will always be less than ‘Actual buffer depth ’" resetval="0" end="16" begin="25" width="10"/>
        <bitfield id="WR_STATUS" rwaccess="R" range="" description="Indicates the BC status on the write side&#xD;&#xA;BC NOT READY = 00 (wr_core_busy=0  &amp; wr_bc_ready=0)&#xD;&#xA;BC READY = 01 (wr_core_busy=0  &amp; wr_bc_ready=1)&#xD;&#xA;BC BUSY = 1x (wr_core_busy=1)" resetval="0" end="10" begin="11" width="2"/>
        <bitfield id="FULL" rwaccess="R" range="" description="buffer full status&#xD;&#xA;‘1’ -&gt; buffer is full&#xD;&#xA;‘0’ -&gt; buffer is not full" resetval="0" end="15" begin="15" width="1"/>
        <bitfield id="RD_STATUS" rwaccess="R" range="" description="Indicates the BC status on the read side&#xD;&#xA;BC NOT READY = 00 (rd_core_busy=0 &amp; rd_bc_ready=0)&#xD;&#xA;BC READY = 01 (rd_core_busy=0 &amp; rd_bc_ready=1)&#xD;&#xA;BC BUSY = 1x (rd_core_busy=1)" resetval="0" end="26" begin="27" width="2"/>
        <bitfield id="reserved1" rwaccess="R" range="" description="" resetval="0" end="28" begin="30" width="3"/>
        <bitfield id="EMPTY" rwaccess="R" range="" description="buffer empty status&#xD;&#xA;‘1’ -&gt; buffer is empty&#xD;&#xA;‘0’ -&gt; buffer is not empty" resetval="1" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___SB_CSL2BC4_STATUS" description="Indicates Status of Consumer SL2BC4." width="32" offset="0x1F0" page = "1" acronym="__ALL___SB_CSL2BC4_STATUS">
        <bitfield id="WR_POINTER" rwaccess="R" range="" description="Current Write pointer value which is going to be written or which is being written. Write pointer will always be less than ‘Actual buffer depth ’" resetval="0" end="0" begin="9" width="10"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="12" begin="14" width="3"/>
        <bitfield id="RD_POINTER" rwaccess="R" range="" description="Current Read pointer value which is going to be read or being read. Read pointer will always be less than ‘Actual buffer depth ’" resetval="0" end="16" begin="25" width="10"/>
        <bitfield id="WR_STATUS" rwaccess="R" range="" description="Indicates the BC status on the write side&#xD;&#xA;BC NOT READY = 00 (wr_core_busy=0  &amp; wr_bc_ready=0)&#xD;&#xA;BC READY = 01 (wr_core_busy=0  &amp; wr_bc_ready=1)&#xD;&#xA;BC BUSY = 1x (wr_core_busy=1)" resetval="0" end="10" begin="11" width="2"/>
        <bitfield id="FULL" rwaccess="R" range="" description="buffer full status&#xD;&#xA;‘1’ -&gt; buffer is full&#xD;&#xA;‘0’ -&gt; buffer is not full" resetval="0" end="15" begin="15" width="1"/>
        <bitfield id="RD_STATUS" rwaccess="R" range="" description="Indicates the BC status on the read side&#xD;&#xA;BC NOT READY = 00 (rd_core_busy=0 &amp; rd_bc_ready=0)&#xD;&#xA;BC READY = 01 (rd_core_busy=0 &amp; rd_bc_ready=1)&#xD;&#xA;BC BUSY = 1x (rd_core_busy=1)" resetval="0" end="26" begin="27" width="2"/>
        <bitfield id="reserved1" rwaccess="R" range="" description="" resetval="0" end="28" begin="30" width="3"/>
        <bitfield id="EMPTY" rwaccess="R" range="" description="buffer empty status&#xD;&#xA;‘1’ -&gt; buffer is empty&#xD;&#xA;‘0’ -&gt; buffer is not empty" resetval="1" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___SB_CSL2BC5_STATUS" description="Indicates Status of Consumer SL2BC5." width="32" offset="0x1F4" page = "1" acronym="__ALL___SB_CSL2BC5_STATUS">
        <bitfield id="WR_POINTER" rwaccess="R" range="" description="Current Write pointer value which is going to be written or which is being written. Write pointer will always be less than ‘Actual buffer depth ’" resetval="0" end="0" begin="9" width="10"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="12" begin="14" width="3"/>
        <bitfield id="RD_POINTER" rwaccess="R" range="" description="Current Read pointer value which is going to be read or being read. Read pointer will always be less than ‘Actual buffer depth ’" resetval="0" end="16" begin="25" width="10"/>
        <bitfield id="WR_STATUS" rwaccess="R" range="" description="Indicates the BC status on the write side&#xD;&#xA;BC NOT READY = 00 (wr_core_busy=0  &amp; wr_bc_ready=0)&#xD;&#xA;BC READY = 01 (wr_core_busy=0  &amp; wr_bc_ready=1)&#xD;&#xA;BC BUSY = 1x (wr_core_busy=1)" resetval="0" end="10" begin="11" width="2"/>
        <bitfield id="FULL" rwaccess="R" range="" description="buffer full status&#xD;&#xA;‘1’ -&gt; buffer is full&#xD;&#xA;‘0’ -&gt; buffer is not full" resetval="0" end="15" begin="15" width="1"/>
        <bitfield id="RD_STATUS" rwaccess="R" range="" description="Indicates the BC status on the read side&#xD;&#xA;BC NOT READY = 00 (rd_core_busy=0 &amp; rd_bc_ready=0)&#xD;&#xA;BC READY = 01 (rd_core_busy=0 &amp; rd_bc_ready=1)&#xD;&#xA;BC BUSY = 1x (rd_core_busy=1)" resetval="0" end="26" begin="27" width="2"/>
        <bitfield id="reserved1" rwaccess="R" range="" description="" resetval="0" end="28" begin="30" width="3"/>
        <bitfield id="EMPTY" rwaccess="R" range="" description="buffer empty status&#xD;&#xA;‘1’ -&gt; buffer is empty&#xD;&#xA;‘0’ -&gt; buffer is not empty" resetval="1" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___SB_CSL2BC_CTRL" description="This register allows assertion of BC_CLR and BC_IDLE of Consumer SL2BCs.&#xD;&#xA;&#xD;&#xA;When Sl2BC are used as part of the IVAHD message network, SW has to ensure the following:&#xD;&#xA;BC_CLR should be asserted after receiving the hwa_init_ack/resume_ack from all the HWA+MSG_NW_TOP.&#xD;&#xA;BC_IDLE should be asserted after pipedown/rewind_attn." width="32" offset="0x200" page = "1" acronym="__ALL___SB_CSL2BC_CTRL">
        <bitfield id="BC_CLR" rwaccess="RW" range="" description="Initializes the BC pointers to the configured values (as configured in the BUF_START_PTR MMR) and enable the bc_ready generation.&#xD;&#xA;BC_CLR should be set only when the BC is in IDLE State and all the other BC registers are programmed to avoid the undefined behaviour.&#xD;&#xA;&#xD;&#xA;Bit Position: SL2BC ID&#xD;&#xA;0 : CSL2BC0&#xD;&#xA;1 : CSL2BC1&#xD;&#xA;2 : CSL2BC2&#xD;&#xA;3 : CSL2BC3&#xD;&#xA;4 : CSL2BC4&#xD;&#xA;5 : CSL2BC5" resetval="0" end="0" begin="5" width="6"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="6" begin="15" width="10"/>
        <bitfield id="BC_IDLE" rwaccess="RW" range="" description="Disables the bc_ready generation. Bc_pointer is untouched.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Bit Position: SL2BC ID&#xD;&#xA;0 : CSL2BC0&#xD;&#xA;1 : CSL2BC1&#xD;&#xA;2 : CSL2BC2&#xD;&#xA;3 : CSL2BC3&#xD;&#xA;4 : CSL2BC4&#xD;&#xA;5 : CSL2BC5" resetval="0" end="16" begin="21" width="6"/>
        <bitfield id="Reserved1" rwaccess="R" range="" description="" resetval="0" end="22" begin="31" width="10"/>
    </register>
    <register id="__ALL___SB_SL2BC_ACCESS" description="This register provides CPU access to the current state of Ready and Busy signals of the ICONT Consumer &amp; Producer SL2BC." width="32" offset="0x204" page = "1" acronym="__ALL___SB_SL2BC_ACCESS">
        <bitfield id="SL2BC_READY" rwaccess="R" range="" description="Provides the current state of the SL2BC Ready. (Read Only)&#xD;&#xA;0 : Ready of PSL2BC0&#xD;&#xA;1 : Ready of PSL2BC1&#xD;&#xA;2 : Ready of PSL2BC2&#xD;&#xA;3 : Ready of PSL2BC3&#xD;&#xA;4 : Ready of PSL2BC4&#xD;&#xA;5 : Ready of PSL2BC5&#xD;&#xA;6 : Ready of CSL2BC0&#xD;&#xA;7 : Ready of CSL2BC1&#xD;&#xA;8 : Ready of CSL2BC2&#xD;&#xA;9 : Ready of CSL2BC3&#xD;&#xA;10 : Ready of CSL2BC4&#xD;&#xA;11 : Ready of CSL2BC5" resetval="0" end="0" begin="11" width="12"/>
        <bitfield id="Reserved1" rwaccess="R" range="" description="" resetval="0" end="12" begin="15" width="4"/>
        <bitfield id="Reserved2" rwaccess="R" range="" description="" resetval="0" end="28" begin="31" width="4"/>
        <bitfield id="SL2BC_BUSY" rwaccess="R" range="" description="Asserted (high) Busy indicates SW/SBH task consuming/generating the data, using SL2BC, is in progress.  &#xD;&#xA;&#xD;&#xA;Bit Position: SL2BC name&#xD;&#xA;0 : Busy of PSL2BC0&#xD;&#xA;1 : Busy of PSL2BC1&#xD;&#xA;2 : Busy of PSL2BC2&#xD;&#xA;3 : Busy of PSL2BC3&#xD;&#xA;4 : Busy of PSL2BC4&#xD;&#xA;5 : Busy of PSL2BC5&#xD;&#xA;6 : Busy of CSL2BC0&#xD;&#xA;7 : Busy of CSL2BC1&#xD;&#xA;8 : Busy of CSL2BC2&#xD;&#xA;9 : Busy of CSL2BC3&#xD;&#xA;10 : Busy of CSL2BC4&#xD;&#xA;11 : Busy of CSL2BC5" resetval="0" end="16" begin="27" width="12"/>
    </register>
    <register id="__ALL___SB_SL2BC_BUSY_GEN" description="This register provides CPU access to the drive the Busy signals of the ICONT Consumer &amp; Producer SL2BC.&#xD;&#xA;Assertion of Busy (by setting the bit to 1) indicates start of the SW task consuming/generating the data.  &#xD;&#xA;De-assertion of Busy (by Clearing the bit to 0) indicates end of the SW task consuming/generating the data.&#xD;&#xA;Read of this register returns 0s.&#xD;&#xA;&#xD;&#xA;Note: Trying to SET and CLR the BUSY signal simultaneously will result in undefined behavior." width="32" offset="0x208" page = "1" acronym="__ALL___SB_SL2BC_BUSY_GEN">
        <bitfield id="SET_BUSY" rwaccess="RW" range="" description="Assert the SL2BC BUSY signal by setting the corresponding bit to 1. Writing 0 has no effect.&#xD;&#xA;&#xD;&#xA;0 : Busy of PSL2BC0&#xD;&#xA;1 : Busy of PSL2BC1&#xD;&#xA;2 : Busy of PSL2BC2&#xD;&#xA;3 : Busy of PSL2BC3&#xD;&#xA;4 : Busy of PSL2BC4&#xD;&#xA;5 : Busy of PSL2BC5&#xD;&#xA;6 : Busy of CSL2BC0&#xD;&#xA;7 : Busy of CSL2BC1&#xD;&#xA;8 : Busy of CSL2BC2&#xD;&#xA;9 : Busy of CSL2BC3&#xD;&#xA;10 : Busy of CSL2BC4&#xD;&#xA;11 : Busy of CSL2BC5" resetval="0" end="0" begin="11" width="12"/>
        <bitfield id="Reserved1" rwaccess="R" range="" description="" resetval="0" end="12" begin="15" width="4"/>
        <bitfield id="Reserved2" rwaccess="R" range="" description="" resetval="0" end="28" begin="31" width="4"/>
        <bitfield id="CLR_BUSY" rwaccess="RW" range="" description="De-assert the SL2BC BUSY signal by setting the corresponding bit to 1. Writing 0 has no effect.&#xD;&#xA;&#xD;&#xA;Bit Position: SL2BC name&#xD;&#xA;0 : Busy of PSL2BC0&#xD;&#xA;1 : Busy of PSL2BC1&#xD;&#xA;2 : Busy of PSL2BC2&#xD;&#xA;3 : Busy of PSL2BC3&#xD;&#xA;4 : Busy of PSL2BC4&#xD;&#xA;5 : Busy of PSL2BC5&#xD;&#xA;6 : Busy of CSL2BC0&#xD;&#xA;7 : Busy of CSL2BC1&#xD;&#xA;8 : Busy of CSL2BC2&#xD;&#xA;9 : Busy of CSL2BC3&#xD;&#xA;10 : Busy of CSL2BC4&#xD;&#xA;11 : Busy of CSL2BC5" resetval="0" end="16" begin="27" width="12"/>
    </register>
    <register id="__ALL___MB_TASK_CTRL" description="This register provides CPU access to the drive the EndOfPipe signal from ICONT during normal pipedown and error conditions. (Refer IVAHD toplevel flow doc for details)&#xD;&#xA;Read of this register returns 0s." width="32" offset="0x20C" page = "1" acronym="__ALL___MB_TASK_CTRL">
        <bitfield id="MB_TASK_PIPEDOWN" rwaccess="RW" range="" description="RESERVED. NOT USED ANYMORE.&#xD;&#xA;EndOfPipe (po_pipedown) signal is asserted for one cycle when this register is set to 1.&#xD;&#xA;Auto clears to 0." resetval="0" end="0" begin="0" width="1"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="1" begin="30" width="30"/>
        <bitfield id="bc_glue_enable" rwaccess="RW" range="" description="Enables BC_Glue logic when set.&#xD;&#xA;SW sets the BC_GLUE_ENABLE bit during PipeUp, ResumePipe after setting the corresponding MMR bits in IVA_SYSCTRL.&#xD;&#xA;SW clears the BC_GLUE_ENABLE bit on PipeDown interrupt, Abort condition &amp; Rewind Request interrupt." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___SBH_TASK_MODULE0" description="This register configures the SBH Task Module 0." width="32" offset="0x220" page = "1" acronym="__ALL___SBH_TASK_MODULE0">
        <bitfield id="SBH_SL2BC_ENABLE" rwaccess="RW" range="" description="Enables the corresponding SL2BC to be enabled to generate the New Task Trigger.  When multiple bits are set, the corresponding enabled SL2BC Ready signal is ANDed to generate New Task Trigger. &#xD;&#xA;This would also enable the Task End notification to be broadcast to the enabled SL2BCs.&#xD;&#xA;The bit assignment is as follows&#xD;&#xA;0 : PSL2BC0&#xD;&#xA;1 : PSL2BC1&#xD;&#xA;2 : PSL2BC2&#xD;&#xA;3 : PSL2BC3 &#xD;&#xA;4 : PSL2BC4&#xD;&#xA;5 : PSL2BC5&#xD;&#xA;6 : CSL2BC0&#xD;&#xA;7 : CSL2BC1&#xD;&#xA;8 : CSL2BC2&#xD;&#xA;9 : CSL2BC3&#xD;&#xA;10: CSL2BC4&#xD;&#xA;11: CSL2BC5" resetval="0" end="0" begin="11" width="12"/>
        <bitfield id="SBH_TS1_ENABLE" rwaccess="RW" range="" description="When set to 1, enable Task Start 1. When cleared to 0, keeps the task module in disabled state. &#xD;&#xA;Note that transition of 1 to 0 on this bit does not guarantee immediate disable of this module as it would still wait for completion of the trigerred task." resetval="0" end="12" begin="12" width="1"/>
        <bitfield id="SBH_TS2_ENABLE" rwaccess="RW" range="" description="When set to 1, enables Task Start 2 (SBH_TS1_ENABLE must also be set)." resetval="0" end="13" begin="13" width="1"/>
        <bitfield id="reserved1" rwaccess="RW" range="" description="" resetval="0" end="14" begin="19" width="6"/>
        <bitfield id="SBH_TS1_GEN" rwaccess="RW" range="" description="This bit configures the TS1 generation logic. &#xD;&#xA;When set to 0, selects the NewTask (NT) signal to trigger the task. &#xD;&#xA;When Set to 1, selects the Counter output NT@cnt to trigger the task.&#xD;&#xA;When Set to 2, selects the Counter output NT@~cnt to trigger the task.&#xD;&#xA;When Set to 3, selects the Counter output NT@Mcnt to trigger the task." resetval="0" end="20" begin="21" width="2"/>
        <bitfield id="SBH_TS1_SEL" rwaccess="RW" range="" description="This bit configures the Task Start TS1 destination and selects the Task Completion TC1 source. &#xD;&#xA;When set to 00, enables TS1 to drive the Interrupt signal to CPU. It also selects SBH_SOFT_TC to be used as TC1. &#xD;&#xA;When set to 01, enables TS1 to drive the VDMA Group Start signal. It also selects SBH_VDMA_GRP_DONE to be used as TC1.&#xD;&#xA;When set to 10, enables TS1 to drive the DataMover Logical channel. It also selects DM_LCH_END to be used as TC1.&#xD;&#xA;When set to 11, enables TS1 to drive the DataMover Logical channel. It also selects SBH_VDMA_GRP_DONE to be used as TC1." resetval="0" end="22" begin="23" width="2"/>
        <bitfield id="SBH_TS2_GEN" rwaccess="RW" range="" description="This bit configures the TS2 generation logic. &#xD;&#xA;When set to 00, selects the NewTask signal to trigger the task. &#xD;&#xA;When set to 01, selects the Counter output NT@cnt to trigger the task.&#xD;&#xA;When set to 10, selects the Task Completion TC1 to trigger the task.&#xD;&#xA;When set to 11, selects the Task Completion TC1@cnt to trigger the task." resetval="0" end="24" begin="25" width="2"/>
        <bitfield id="SBH_TS2_SEL" rwaccess="RW" range="" description="This bit configures the Task Start TS2 destination and selects the Task Completion TC2 source. &#xD;&#xA;When set to 00, enables TS2 to drive the Interrupt signal to CPU. It also selects SBH_SOFT_TC to be used as TC2. &#xD;&#xA;When set to 01, enables TS2 to drive the VDMA Group Start signal. It also selects SBH_VDMA_GRP_DONE to be used as TC2.&#xD;&#xA;When set to 10, enables TS2 to drive the DataMover Logical channel. It also selects DM_LCH_END to be used as TC2.&#xD;&#xA;When set to 11, enables TS2 to drive the DataMover Logical channel. It also selects SBH_VDMA_GRP_DONE to be used as TC2." resetval="0" end="26" begin="27" width="2"/>
        <bitfield id="Reserved2" rwaccess="RW" range="" description="" resetval="0" end="28" begin="30" width="3"/>
        <bitfield id="SBH_VDMA_GD_ENABLE" rwaccess="RW" range="" description="Enables the corresponding VDMA Group Done Monitor block to be used with the Task Module." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___SBH_TASK_MODULE_CNT0" description="Specifies the Counter value that is used to trigerring the Task Module0." width="32" offset="0x224" page = "1" acronym="__ALL___SBH_TASK_MODULE_CNT0">
        <bitfield id="SBH_CNT" rwaccess="RW" range="" description="Specifies the Counter value that is used to trigerring the Task Module. &#xD;&#xA;For example, To Task Start on every 4th trigger, value 3 should be configured here.&#xD;&#xA;&#xD;&#xA;Read will return the N-counter's current value." resetval="0" end="0" begin="15" width="16"/>
        <bitfield id="reserved" rwaccess="R" range="" description="" resetval="0" end="16" begin="31" width="16"/>
    </register>
    <register id="__ALL___SBH_TASK_MODULE_MCNT0" description="Specifies the M Counter value that is used to trigerring the Task Module0." width="32" offset="0x228" page = "1" acronym="__ALL___SBH_TASK_MODULE_MCNT0">
        <bitfield id="SBH_MCNT" rwaccess="RW" range="" description="Specifies the Counter value that is used to trigerring the Task Module. &#xD;&#xA;For example, To Task Start on every 4th trigger, value 3 should be configured here.&#xD;&#xA;&#xD;&#xA;Read will return the M-counter's current value." resetval="0" end="0" begin="17" width="18"/>
        <bitfield id="reserved" rwaccess="R" range="" description="" resetval="0" end="18" begin="31" width="14"/>
    </register>
    <register id="__ALL___SBH_STATUS_GID_TM0" description="SBH Task Module status &amp; Vdma Group ID register." width="32" offset="0x22C" page = "1" acronym="__ALL___SBH_STATUS_GID_TM0">
        <bitfield id="TS1_STATE" rwaccess="R" range="" description="1 : Task Started.&#xD;&#xA;0 : Task completed/not started." resetval="0" end="8" begin="8" width="1"/>
        <bitfield id="TS2_STATE" rwaccess="R" range="" description="1 : Task Started.&#xD;&#xA;0 : Task completed/not started." resetval="0" end="9" begin="9" width="1"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="10" begin="31" width="22"/>
        <bitfield id="GID" rwaccess="RW" range="" description="Specifies the VDMA Group IDs that needs to be monitored for SBH task modules." resetval="0" end="0" begin="7" width="8"/>
    </register>
    <register id="__ALL___SBH_TASK_MODULE1" description="This register configures the SBH Task Module 1." width="32" offset="0x230" page = "1" acronym="__ALL___SBH_TASK_MODULE1">
        <bitfield id="SBH_SL2BC_ENABLE" rwaccess="RW" range="" description="Enables the corresponding SL2BC to be enabled to generate the New Task Trigger.  When multiple bits are set, the corresponding enabled SL2BC Ready signal is ANDed to generate New Task Trigger. &#xD;&#xA;This would also enable the Task End notification to be broadcast to the enabled SL2BCs.&#xD;&#xA;The bit assignment is as follows&#xD;&#xA;0 : PSL2BC0&#xD;&#xA;1 : PSL2BC1&#xD;&#xA;2 : PSL2BC2&#xD;&#xA;3 : PSL2BC3 &#xD;&#xA;4 : PSL2BC4&#xD;&#xA;5 : PSL2BC5&#xD;&#xA;6 : CSL2BC0&#xD;&#xA;7 : CSL2BC1&#xD;&#xA;8 : CSL2BC2&#xD;&#xA;9 : CSL2BC3&#xD;&#xA;10: CSL2BC4&#xD;&#xA;11: CSL2BC5" resetval="0" end="0" begin="11" width="12"/>
        <bitfield id="SBH_TS1_ENABLE" rwaccess="RW" range="" description="When set to 1, enable Task Start 1. When cleared to 0, keeps the task module in disabled state. &#xD;&#xA;Note that transition of 1 to 0 on this bit does not guarantee immediate disable of this module as it would still wait for completion of the trigerred task." resetval="0" end="12" begin="12" width="1"/>
        <bitfield id="SBH_TS2_ENABLE" rwaccess="RW" range="" description="When set to 1, enables Task Start 2 (SBH_TS1_ENABLE must also be set)." resetval="0" end="13" begin="13" width="1"/>
        <bitfield id="reserved1" rwaccess="RW" range="" description="" resetval="0" end="14" begin="19" width="6"/>
        <bitfield id="SBH_TS1_GEN" rwaccess="RW" range="" description="This bit configures the TS1 generation logic. &#xD;&#xA;When set to 0, selects the NewTask (NT) signal to trigger the task. &#xD;&#xA;When Set to 1, selects the Counter output NT@cnt to trigger the task.&#xD;&#xA;When Set to 2, selects the Counter output NT@~cnt to trigger the task.&#xD;&#xA;When Set to 3, selects the Counter output NT@Mcnt to trigger the task." resetval="0" end="20" begin="21" width="2"/>
        <bitfield id="SBH_TS1_SEL" rwaccess="RW" range="" description="This bit configures the Task Start TS1 destination and selects the Task Completion TC1 source. &#xD;&#xA;When set to 00, enables TS1 to drive the Interrupt signal to CPU. It also selects SBH_SOFT_TC to be used as TC1. &#xD;&#xA;When set to 01, enables TS1 to drive the VDMA Group Start signal. It also selects SBH_VDMA_GRP_DONE to be used as TC1.&#xD;&#xA;When set to 10, enables TS1 to drive the DataMover Logical channel. It also selects DM_LCH_END to be used as TC1.&#xD;&#xA;When set to 11, enables TS1 to drive the DataMover Logical channel. It also selects SBH_VDMA_GRP_DONE to be used as TC1." resetval="0" end="22" begin="23" width="2"/>
        <bitfield id="SBH_TS2_GEN" rwaccess="RW" range="" description="This bit configures the TS2 generation logic. &#xD;&#xA;When set to 00, selects the NewTask signal to trigger the task. &#xD;&#xA;When set to 01, selects the Counter output NT@cnt to trigger the task.&#xD;&#xA;When set to 10, selects the Task Completion TC1 to trigger the task.&#xD;&#xA;When set to 11, selects the Task Completion TC1@cnt to trigger the task." resetval="0" end="24" begin="25" width="2"/>
        <bitfield id="SBH_TS2_SEL" rwaccess="RW" range="" description="This bit configures the Task Start TS2 destination and selects the Task Completion TC2 source. &#xD;&#xA;When set to 00, enables TS2 to drive the Interrupt signal to CPU. It also selects SBH_SOFT_TC to be used as TC2. &#xD;&#xA;When set to 01, enables TS2 to drive the VDMA Group Start signal. It also selects SBH_VDMA_GRP_DONE to be used as TC2.&#xD;&#xA;When set to 10, enables TS2 to drive the DataMover Logical channel. It also selects DM_LCH_END to be used as TC2.&#xD;&#xA;When set to 11, enables TS2 to drive the DataMover Logical channel. It also selects SBH_VDMA_GRP_DONE to be used as TC2." resetval="0" end="26" begin="27" width="2"/>
        <bitfield id="Reserved2" rwaccess="RW" range="" description="" resetval="0" end="28" begin="30" width="3"/>
        <bitfield id="SBH_VDMA_GD_ENABLE" rwaccess="RW" range="" description="Enables the corresponding VDMA Group Done Monitor block to be used with the Task Module." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___SBH_TASK_MODULE_CNT1" description="Specifies the Counter value that is used to trigerring the Task Module1." width="32" offset="0x234" page = "1" acronym="__ALL___SBH_TASK_MODULE_CNT1">
        <bitfield id="SBH_CNT" rwaccess="RW" range="" description="Specifies the Counter value that is used to trigerring the Task Module. &#xD;&#xA;For example, To Task Start on every 4th trigger, value 3 should be configured here.&#xD;&#xA;&#xD;&#xA;Read will return the N-counter's current value." resetval="0" end="0" begin="15" width="16"/>
        <bitfield id="reserved" rwaccess="R" range="" description="" resetval="0" end="16" begin="31" width="16"/>
    </register>
    <register id="__ALL___SBH_TASK_MODULE_MCNT1" description="Specifies the M Counter value that is used to trigerring the Task Module1." width="32" offset="0x238" page = "1" acronym="__ALL___SBH_TASK_MODULE_MCNT1">
        <bitfield id="SBH_MCNT" rwaccess="RW" range="" description="Specifies the Counter value that is used to trigerring the Task Module. &#xD;&#xA;For example, To Task Start on every 4th trigger, value 3 should be configured here.&#xD;&#xA;&#xD;&#xA;Read will return the M-counter's current value." resetval="0" end="0" begin="17" width="18"/>
        <bitfield id="reserved" rwaccess="R" range="" description="" resetval="0" end="18" begin="31" width="14"/>
    </register>
    <register id="__ALL___SBH_STATUS_GID_TM1" description="SBH Task Module status &amp; Vdma Group ID register." width="32" offset="0x23C" page = "1" acronym="__ALL___SBH_STATUS_GID_TM1">
        <bitfield id="TS1_STATE" rwaccess="R" range="" description="1 : Task Started.&#xD;&#xA;0 : Task completed/not started." resetval="0" end="8" begin="8" width="1"/>
        <bitfield id="TS2_STATE" rwaccess="R" range="" description="1 : Task Started.&#xD;&#xA;0 : Task completed/not started." resetval="0" end="9" begin="9" width="1"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="10" begin="31" width="22"/>
        <bitfield id="GID" rwaccess="RW" range="" description="Specifies the VDMA Group IDs that needs to be monitored for SBH task modules." resetval="0" end="0" begin="7" width="8"/>
    </register>
    <register id="__ALL___SBH_TASK_MODULE2" description="This register configures the SBH Task Module 2." width="32" offset="0x240" page = "1" acronym="__ALL___SBH_TASK_MODULE2">
        <bitfield id="SBH_SL2BC_ENABLE" rwaccess="RW" range="" description="Enables the corresponding SL2BC to be enabled to generate the New Task Trigger.  When multiple bits are set, the corresponding enabled SL2BC Ready signal is ANDed to generate New Task Trigger. &#xD;&#xA;This would also enable the Task End notification to be broadcast to the enabled SL2BCs.&#xD;&#xA;The bit assignment is as follows&#xD;&#xA;0 : PSL2BC0&#xD;&#xA;1 : PSL2BC1&#xD;&#xA;2 : PSL2BC2&#xD;&#xA;3 : PSL2BC3 &#xD;&#xA;4 : PSL2BC4&#xD;&#xA;5 : PSL2BC5&#xD;&#xA;6 : CSL2BC0&#xD;&#xA;7 : CSL2BC1&#xD;&#xA;8 : CSL2BC2&#xD;&#xA;9 : CSL2BC3&#xD;&#xA;10: CSL2BC4&#xD;&#xA;11: CSL2BC5" resetval="0" end="0" begin="11" width="12"/>
        <bitfield id="SBH_TS1_ENABLE" rwaccess="RW" range="" description="When set to 1, enable Task Start 1. When cleared to 0, keeps the task module in disabled state. &#xD;&#xA;Note that transition of 1 to 0 on this bit does not guarantee immediate disable of this module as it would still wait for completion of the trigerred task." resetval="0" end="12" begin="12" width="1"/>
        <bitfield id="SBH_TS2_ENABLE" rwaccess="RW" range="" description="When set to 1, enables Task Start 2 (SBH_TS1_ENABLE must also be set)." resetval="0" end="13" begin="13" width="1"/>
        <bitfield id="reserved1" rwaccess="RW" range="" description="" resetval="0" end="14" begin="19" width="6"/>
        <bitfield id="SBH_TS1_GEN" rwaccess="RW" range="" description="This bit configures the TS1 generation logic. &#xD;&#xA;When set to 0, selects the NewTask (NT) signal to trigger the task. &#xD;&#xA;When Set to 1, selects the Counter output NT@cnt to trigger the task.&#xD;&#xA;When Set to 2, selects the Counter output NT@~cnt to trigger the task.&#xD;&#xA;When Set to 3, selects the Counter output NT@Mcnt to trigger the task." resetval="0" end="20" begin="21" width="2"/>
        <bitfield id="SBH_TS1_SEL" rwaccess="RW" range="" description="This bit configures the Task Start TS1 destination and selects the Task Completion TC1 source. &#xD;&#xA;When set to 00, enables TS1 to drive the Interrupt signal to CPU. It also selects SBH_SOFT_TC to be used as TC1. &#xD;&#xA;When set to 01, enables TS1 to drive the VDMA Group Start signal. It also selects SBH_VDMA_GRP_DONE to be used as TC1.&#xD;&#xA;When set to 10, enables TS1 to drive the DataMover Logical channel. It also selects DM_LCH_END to be used as TC1.&#xD;&#xA;When set to 11, enables TS1 to drive the DataMover Logical channel. It also selects SBH_VDMA_GRP_DONE to be used as TC1." resetval="0" end="22" begin="23" width="2"/>
        <bitfield id="SBH_TS2_GEN" rwaccess="RW" range="" description="This bit configures the TS2 generation logic. &#xD;&#xA;When set to 00, selects the NewTask signal to trigger the task. &#xD;&#xA;When set to 01, selects the Counter output NT@cnt to trigger the task.&#xD;&#xA;When set to 10, selects the Task Completion TC1 to trigger the task.&#xD;&#xA;When set to 11, selects the Task Completion TC1@cnt to trigger the task." resetval="0" end="24" begin="25" width="2"/>
        <bitfield id="SBH_TS2_SEL" rwaccess="RW" range="" description="This bit configures the Task Start TS2 destination and selects the Task Completion TC2 source. &#xD;&#xA;When set to 00, enables TS2 to drive the Interrupt signal to CPU. It also selects SBH_SOFT_TC to be used as TC2. &#xD;&#xA;When set to 01, enables TS2 to drive the VDMA Group Start signal. It also selects SBH_VDMA_GRP_DONE to be used as TC2.&#xD;&#xA;When set to 10, enables TS2 to drive the DataMover Logical channel. It also selects DM_LCH_END to be used as TC2.&#xD;&#xA;When set to 11, enables TS2 to drive the DataMover Logical channel. It also selects SBH_VDMA_GRP_DONE to be used as TC2." resetval="0" end="26" begin="27" width="2"/>
        <bitfield id="Reserved2" rwaccess="RW" range="" description="" resetval="0" end="28" begin="30" width="3"/>
        <bitfield id="SBH_VDMA_GD_ENABLE" rwaccess="RW" range="" description="Enables the corresponding VDMA Group Done Monitor block to be used with the Task Module." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___SBH_TASK_MODULE_CNT2" description="Specifies the Counter value that is used to trigerring the Task Module2." width="32" offset="0x244" page = "1" acronym="__ALL___SBH_TASK_MODULE_CNT2">
        <bitfield id="SBH_CNT" rwaccess="RW" range="" description="Specifies the Counter value that is used to trigerring the Task Module. &#xD;&#xA;For example, To Task Start on every 4th trigger, value 3 should be configured here.&#xD;&#xA;&#xD;&#xA;Read will return the N-counter's current value." resetval="0" end="0" begin="15" width="16"/>
        <bitfield id="reserved" rwaccess="R" range="" description="" resetval="0" end="16" begin="31" width="16"/>
    </register>
    <register id="__ALL___SBH_TASK_MODULE_MCNT2" description="Specifies the M Counter value that is used to trigerring the Task Module2." width="32" offset="0x248" page = "1" acronym="__ALL___SBH_TASK_MODULE_MCNT2">
        <bitfield id="SBH_MCNT" rwaccess="RW" range="" description="Specifies the Counter value that is used to trigerring the Task Module. &#xD;&#xA;For example, To Task Start on every 4th trigger, value 3 should be configured here.&#xD;&#xA;&#xD;&#xA;Read will return the M-counter's current value." resetval="0" end="0" begin="17" width="18"/>
        <bitfield id="reserved" rwaccess="R" range="" description="" resetval="0" end="18" begin="31" width="14"/>
    </register>
    <register id="__ALL___SBH_STATUS_GID_TM2" description="SBH Task Module status &amp; Vdma Group ID register." width="32" offset="0x24C" page = "1" acronym="__ALL___SBH_STATUS_GID_TM2">
        <bitfield id="TS1_STATE" rwaccess="R" range="" description="1 : Task Started.&#xD;&#xA;0 : Task completed/not started." resetval="0" end="8" begin="8" width="1"/>
        <bitfield id="TS2_STATE" rwaccess="R" range="" description="1 : Task Started.&#xD;&#xA;0 : Task completed/not started." resetval="0" end="9" begin="9" width="1"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="10" begin="31" width="22"/>
        <bitfield id="GID" rwaccess="RW" range="" description="Specifies the VDMA Group IDs that needs to be monitored for SBH task modules." resetval="0" end="0" begin="7" width="8"/>
    </register>
    <register id="__ALL___SBH_TASK_MODULE3" description="This register configures the SBH Task Module 3." width="32" offset="0x250" page = "1" acronym="__ALL___SBH_TASK_MODULE3">
        <bitfield id="SBH_SL2BC_ENABLE" rwaccess="RW" range="" description="Enables the corresponding SL2BC to be enabled to generate the New Task Trigger.  When multiple bits are set, the corresponding enabled SL2BC Ready signal is ANDed to generate New Task Trigger. &#xD;&#xA;This would also enable the Task End notification to be broadcast to the enabled SL2BCs.&#xD;&#xA;The bit assignment is as follows&#xD;&#xA;0 : PSL2BC0&#xD;&#xA;1 : PSL2BC1&#xD;&#xA;2 : PSL2BC2&#xD;&#xA;3 : PSL2BC3 &#xD;&#xA;4 : PSL2BC4&#xD;&#xA;5 : PSL2BC5&#xD;&#xA;6 : CSL2BC0&#xD;&#xA;7 : CSL2BC1&#xD;&#xA;8 : CSL2BC2&#xD;&#xA;9 : CSL2BC3&#xD;&#xA;10: CSL2BC4&#xD;&#xA;11: CSL2BC5" resetval="0" end="0" begin="11" width="12"/>
        <bitfield id="SBH_TS1_ENABLE" rwaccess="RW" range="" description="When set to 1, enable Task Start 1. When cleared to 0, keeps the task module in disabled state. &#xD;&#xA;Note that transition of 1 to 0 on this bit does not guarantee immediate disable of this module as it would still wait for completion of the trigerred task." resetval="0" end="12" begin="12" width="1"/>
        <bitfield id="SBH_TS2_ENABLE" rwaccess="RW" range="" description="When set to 1, enables Task Start 2 (SBH_TS1_ENABLE must also be set)." resetval="0" end="13" begin="13" width="1"/>
        <bitfield id="reserved1" rwaccess="RW" range="" description="" resetval="0" end="14" begin="19" width="6"/>
        <bitfield id="SBH_TS1_GEN" rwaccess="RW" range="" description="This bit configures the TS1 generation logic. &#xD;&#xA;When set to 0, selects the NewTask (NT) signal to trigger the task. &#xD;&#xA;When Set to 1, selects the Counter output NT@cnt to trigger the task.&#xD;&#xA;When Set to 2, selects the Counter output NT@~cnt to trigger the task.&#xD;&#xA;When Set to 3, selects the Counter output NT@Mcnt to trigger the task." resetval="0" end="20" begin="21" width="2"/>
        <bitfield id="SBH_TS1_SEL" rwaccess="RW" range="" description="This bit configures the Task Start TS1 destination and selects the Task Completion TC1 source. &#xD;&#xA;When set to 00, enables TS1 to drive the Interrupt signal to CPU. It also selects SBH_SOFT_TC to be used as TC1. &#xD;&#xA;When set to 01, enables TS1 to drive the VDMA Group Start signal. It also selects SBH_VDMA_GRP_DONE to be used as TC1.&#xD;&#xA;When set to 10, enables TS1 to drive the DataMover Logical channel. It also selects DM_LCH_END to be used as TC1.&#xD;&#xA;When set to 11, enables TS1 to drive the DataMover Logical channel. It also selects SBH_VDMA_GRP_DONE to be used as TC1." resetval="0" end="22" begin="23" width="2"/>
        <bitfield id="SBH_TS2_GEN" rwaccess="RW" range="" description="This bit configures the TS2 generation logic. &#xD;&#xA;When set to 00, selects the NewTask signal to trigger the task. &#xD;&#xA;When set to 01, selects the Counter output NT@cnt to trigger the task.&#xD;&#xA;When set to 10, selects the Task Completion TC1 to trigger the task.&#xD;&#xA;When set to 11, selects the Task Completion TC1@cnt to trigger the task." resetval="0" end="24" begin="25" width="2"/>
        <bitfield id="SBH_TS2_SEL" rwaccess="RW" range="" description="This bit configures the Task Start TS2 destination and selects the Task Completion TC2 source. &#xD;&#xA;When set to 00, enables TS2 to drive the Interrupt signal to CPU. It also selects SBH_SOFT_TC to be used as TC2. &#xD;&#xA;When set to 01, enables TS2 to drive the VDMA Group Start signal. It also selects SBH_VDMA_GRP_DONE to be used as TC2.&#xD;&#xA;When set to 10, enables TS2 to drive the DataMover Logical channel. It also selects DM_LCH_END to be used as TC2.&#xD;&#xA;When set to 11, enables TS2 to drive the DataMover Logical channel. It also selects SBH_VDMA_GRP_DONE to be used as TC2." resetval="0" end="26" begin="27" width="2"/>
        <bitfield id="Reserved2" rwaccess="RW" range="" description="" resetval="0" end="28" begin="30" width="3"/>
        <bitfield id="SBH_VDMA_GD_ENABLE" rwaccess="RW" range="" description="Enables the corresponding VDMA Group Done Monitor block to be used with the Task Module." resetval="0" end="31" begin="31" width="1"/>
    </register>
    <register id="__ALL___SBH_TASK_MODULE_CNT3" description="Specifies the Counter value that is used to trigerring the Task Module3." width="32" offset="0x254" page = "1" acronym="__ALL___SBH_TASK_MODULE_CNT3">
        <bitfield id="SBH_CNT" rwaccess="RW" range="" description="Specifies the Counter value that is used to trigerring the Task Module. &#xD;&#xA;For example, To Task Start on every 4th trigger, value 3 should be configured here.&#xD;&#xA;&#xD;&#xA;Read will return the N-counter's current value." resetval="0" end="0" begin="15" width="16"/>
        <bitfield id="reserved" rwaccess="R" range="" description="" resetval="0" end="16" begin="31" width="16"/>
    </register>
    <register id="__ALL___SBH_TASK_MODULE_MCNT3" description="Specifies the M Counter value that is used to trigerring the Task Module3." width="32" offset="0x258" page = "1" acronym="__ALL___SBH_TASK_MODULE_MCNT3">
        <bitfield id="SBH_MCNT" rwaccess="RW" range="" description="Specifies the Counter value that is used to trigerring the Task Module. &#xD;&#xA;For example, To Task Start on every 4th trigger, value 3 should be configured here.&#xD;&#xA;&#xD;&#xA;Read will return the M-counter's current value." resetval="0" end="0" begin="17" width="18"/>
        <bitfield id="reserved" rwaccess="R" range="" description="" resetval="0" end="18" begin="31" width="14"/>
    </register>
    <register id="__ALL___SBH_STATUS_GID_TM3" description="SBH Task Module status &amp; Vdma Group ID register." width="32" offset="0x25C" page = "1" acronym="__ALL___SBH_STATUS_GID_TM3">
        <bitfield id="TS1_STATE" rwaccess="R" range="" description="1 : Task Started.&#xD;&#xA;0 : Task completed/not started." resetval="0" end="8" begin="8" width="1"/>
        <bitfield id="TS2_STATE" rwaccess="R" range="" description="1 : Task Started.&#xD;&#xA;0 : Task completed/not started." resetval="0" end="9" begin="9" width="1"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="10" begin="31" width="22"/>
        <bitfield id="GID" rwaccess="RW" range="" description="Specifies the VDMA Group IDs that needs to be monitored for SBH task modules." resetval="0" end="0" begin="7" width="8"/>
    </register>
    <register id="__ALL___SBH_TASK_SOFT" description="This register allows SW to generate SOFT trigger to the Task Module and/or task completion to the task module. &#xD;&#xA;While the task trigger is always enabled, the Task completion should be selected to be used." width="32" offset="0x260" page = "1" acronym="__ALL___SBH_TASK_SOFT">
        <bitfield id="SBH_SOFT_TRG1" rwaccess="RW" range="" description="When set to 1, generates Soft trigger to Task Module 1. This bit is auto cleared.&#xD;&#xA;This trigger would be considered only when the task module is ready to accept the trigger. Setting this bit will be ignored, when the task module is in trigerred state and waiting for completion." resetval="0" end="4" begin="4" width="1"/>
        <bitfield id="Reserved1" rwaccess="RW" range="" description="" resetval="0" end="1" begin="1" width="1"/>
        <bitfield id="SBH_SOFT_TC1" rwaccess="RW" range="" description="When set to 1, generates Soft task completion to Task Module 1. This bit is auto cleared." resetval="0" end="6" begin="6" width="1"/>
        <bitfield id="Reserved2" rwaccess="RW" range="" description="" resetval="0" end="3" begin="3" width="1"/>
        <bitfield id="SBH_SOFT_TRG2" rwaccess="RW" range="" description="When set to 1, generates Soft trigger to Task Module 2. This bit is auto cleared.&#xD;&#xA;This trigger would be considered only when the task module is ready to accept the trigger. Setting this bit will be ignored, when the task module is in trigerred state and waiting for completion." resetval="0" end="8" begin="8" width="1"/>
        <bitfield id="Reserved3" rwaccess="RW" range="" description="" resetval="0" end="5" begin="5" width="1"/>
        <bitfield id="SBH_SOFT_TC2" rwaccess="RW" range="" description="When set to 1, generates Soft task completion to Task Module 2. This bit is auto cleared." resetval="0" end="10" begin="10" width="1"/>
        <bitfield id="Reserved4" rwaccess="RW" range="" description="" resetval="0" end="7" begin="7" width="1"/>
        <bitfield id="SBH_SOFT_TRG3" rwaccess="RW" range="" description="When set to 1, generates Soft trigger to Task Module 3. This bit is auto cleared.&#xD;&#xA;This trigger would be considered only when the task module is ready to accept the trigger. Setting this bit will be ignored, when the task module is in trigerred state and waiting for completion." resetval="0" end="12" begin="12" width="1"/>
        <bitfield id="Reserved5" rwaccess="RW" range="" description="" resetval="0" end="9" begin="9" width="1"/>
        <bitfield id="SBH_SOFT_TC3" rwaccess="RW" range="" description="When set to 1, generates Soft task completion to Task Module 3. This bit is auto cleared." resetval="0" end="14" begin="14" width="1"/>
        <bitfield id="Reserved6" rwaccess="RW" range="" description="" resetval="0" end="11" begin="11" width="1"/>
        <bitfield id="SBH_SOFT_TRG0" rwaccess="RW" range="" description="When set to 1, generates Soft trigger to Task Module 0. This bit is auto cleared.&#xD;&#xA;This trigger would be considered only when the task module is ready to accept the trigger. Setting this bit will be ignored, when the task module is in trigerred state and waiting for completion." resetval="0" end="0" begin="0" width="1"/>
        <bitfield id="Reserved7" rwaccess="RW" range="" description="" resetval="0" end="13" begin="13" width="1"/>
        <bitfield id="SBH_SOFT_TC0" rwaccess="RW" range="" description="When set to 1, generates Soft task completion to Task Module 0. This bit is auto cleared." resetval="0" end="2" begin="2" width="1"/>
        <bitfield id="Reserved8" rwaccess="RW" range="" description="" resetval="0" end="15" begin="31" width="17"/>
    </register>
    <register id="__ALL___ICONT_SEM_COUNT0" description="General purpose counter for SW use. SEM_COUNT0_NZ event will be set whenever the counter value is non-zero.&#xD;&#xA;Typically used for semaphore between CPUs, HWA via interrupt and/or events or polling." width="32" offset="0x280" page = "1" acronym="__ALL___ICONT_SEM_COUNT0">
        <bitfield id="COUNT_VALUE" rwaccess="R" range="" description="Provides the current value of the counter.&#xD;&#xA;Counter value if updated based on the following SW writes &#xD;&#xA;   1) Clears the count value when CLR_COUNT bitfield is set to 1.&#xD;&#xA;   2) Decrements by 1 till it reaches 0 when DEC_COUNT bitfield is set to 1.&#xD;&#xA;   3) Increments by 1 till it reaches all-ones count when INC_COUNT bitfield is set to 1." resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="INC_COUNT" rwaccess="RW" range="" description="This bit when set will increment the contents of the counter. This bit is autocleared.&#xD;&#xA;Note that SW write to this register should have only one of the 3 control bit set.&#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="18" begin="18" width="1"/>
        <bitfield id="DEC_COUNT" rwaccess="RW" range="" description="This bit when set will decrement the contents of the counter. This bit is autocleared.&#xD;&#xA;Note that SW write to this register should have only one of the 3 control bit set.&#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="17" begin="17" width="1"/>
        <bitfield id="CLR_COUNT" rwaccess="RW" range="" description="This bit when set will clear the contents of the counter. This bit is autocleared.&#xD;&#xA;Note that SW write to this register should have only one of the 3 control bit set.&#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="16" begin="16" width="1"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="19" begin="31" width="13"/>
        <bitfield id="reserved1" rwaccess="R" range="" description="" resetval="0" end="8" begin="15" width="8"/>
    </register>
    <register id="__ALL___ICONT_SEM_COUNT1" description="General purpose counter for SW use. SEM_COUNT0_NZ event will be set whenever the counter value is non-zero.&#xD;&#xA;Typically used for semaphore between CPUs, HWA via interrupt and/or events or polling." width="32" offset="0x284" page = "1" acronym="__ALL___ICONT_SEM_COUNT1">
        <bitfield id="COUNT_VALUE" rwaccess="R" range="" description="Provides the current value of the counter.&#xD;&#xA;Counter value if updated based on the following SW writes &#xD;&#xA;   1) Clears the count value when CLR_COUNT bitfield is set to 1.&#xD;&#xA;   2) Decrements by 1 till it reaches 0 when DEC_COUNT bitfield is set to 1.&#xD;&#xA;   3) Increments by 1 till it reaches all-ones count when INC_COUNT bitfield is set to 1." resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="reserved1" rwaccess="R" range="" description="" resetval="0" end="8" begin="15" width="8"/>
        <bitfield id="CLR_COUNT" rwaccess="RW" range="" description="This bit when set will clear the contents of the counter. This bit is autocleared.&#xD;&#xA;Note that SW write to this register should have only one of the 3 control bit set.&#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="16" begin="16" width="1"/>
        <bitfield id="DEC_COUNT" rwaccess="RW" range="" description="This bit when set will Decrement the contents of the counter. This bit is autocleared.&#xD;&#xA;Note that SW write to this register should have only one of the 3 control bit set.&#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="17" begin="17" width="1"/>
        <bitfield id="INC_COUNT" rwaccess="RW" range="" description="This bit when set will increment the contents of the counter. This bit is autocleared.&#xD;&#xA;Note that SW write to this register should have only one of the 3 control bit set.&#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="18" begin="18" width="1"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="19" begin="31" width="13"/>
    </register>
    <register id="__ALL___ICONT_SEM_COUNT2" description="General purpose counter for SW use. SEM_COUNT2_NZ event will be set whenever the counter value is non-zero.&#xD;&#xA;Typically used for semaphore between CPUs, HWA via interrupt and/or events or polling." width="32" offset="0x288" page = "1" acronym="__ALL___ICONT_SEM_COUNT2">
        <bitfield id="COUNT_VALUE" rwaccess="R" range="" description="Provides the current value of the counter.&#xD;&#xA;Counter value if updated based on the following SW writes &#xD;&#xA;   1) Clears the count value when CLR_COUNT bitfield is set to 1.&#xD;&#xA;   2) Decrements by 1 till it reaches 0 when DEC_COUNT bitfield is set to 1.&#xD;&#xA;   3) Increments by 1 till it reaches all-ones count when INC_COUNT bitfield is set to 1." resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="reserved1" rwaccess="R" range="" description="" resetval="0" end="8" begin="15" width="8"/>
        <bitfield id="CLR_COUNT" rwaccess="RW" range="" description="This bit when set will clear the contents of the counter. This bit is autocleared.&#xD;&#xA;Note that SW write to this register should have only one of the 3 control bit set.&#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="16" begin="16" width="1"/>
        <bitfield id="DEC_COUNT" rwaccess="RW" range="" description="This bit when set will decrement the contents of the counter. This bit is autocleared.&#xD;&#xA;Note that SW write to this register should have only one of the 3 control bit set.&#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="17" begin="17" width="1"/>
        <bitfield id="INC_COUNT" rwaccess="RW" range="" description="This bit when set will increment the contents of the counter. This bit is autocleared.&#xD;&#xA;Note that SW write to this register should have only one of the 3 control bit set.&#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="18" begin="18" width="1"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="19" begin="31" width="13"/>
    </register>
    <register id="__ALL___ICONT_SEM_COUNT3" description="General purpose counter for SW use. SEM_COUNT3_NZ event will be set whenever the counter value is non-zero.&#xD;&#xA;Typically used for semaphore between CPUs, HWA via interrupt and/or events or polling." width="32" offset="0x28C" page = "1" acronym="__ALL___ICONT_SEM_COUNT3">
        <bitfield id="COUNT_VALUE" rwaccess="R" range="" description="Provides the current value of the counter.&#xD;&#xA;Counter value if updated based on the following SW writes &#xD;&#xA;   1) Clears the count value when CLR_COUNT bitfield is set to 1.&#xD;&#xA;   2) Decrements by 1 till it reaches 0 when DEC_COUNT bitfield is set to 1.&#xD;&#xA;   3) Increments by 1 till it reaches all-ones count when INC_COUNT bitfield is set to 1." resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="reserved1" rwaccess="R" range="" description="" resetval="0" end="8" begin="15" width="8"/>
        <bitfield id="CLR_COUNT" rwaccess="RW" range="" description="This bit when set will clear the contents of the counter. This bit is autocleared.&#xD;&#xA;Note that SW write to this register should have only one of the 3 control bit set.&#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="16" begin="16" width="1"/>
        <bitfield id="DEC_COUNT" rwaccess="RW" range="" description="This bit when set will decrement the contents of the counter. This bit is autocleared.&#xD;&#xA;Note that SW write to this register should have only one of the 3 control bit set.&#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="17" begin="17" width="1"/>
        <bitfield id="INC_COUNT" rwaccess="RW" range="" description="This bit when set will increment the contents of the counter. This bit is autocleared.&#xD;&#xA;Note that SW write to this register should have only one of the 3 control bit set.&#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="18" begin="18" width="1"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="19" begin="31" width="13"/>
    </register>
    <register id="__ALL___ICONT_SEM_COUNT4" description="General purpose counter for SW use. SEM_COUNT4_NZ event will be set whenever the counter value is non-zero.&#xD;&#xA;Typically used for semaphore between CPUs, HWA via interrupt and/or events or polling." width="32" offset="0x290" page = "1" acronym="__ALL___ICONT_SEM_COUNT4">
        <bitfield id="COUNT_VALUE" rwaccess="R" range="" description="Provides the current value of the counter.&#xD;&#xA;Counter value if updated based on the following SW writes &#xD;&#xA;   1) Clears the count value when CLR_COUNT bitfield is set to 1.&#xD;&#xA;   2) Decrements by 1 till it reaches 0 when DEC_COUNT bitfield is set to 1.&#xD;&#xA;   3) Increments by 1 till it reaches all-ones count when INC_COUNT bitfield is set to 1." resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="reserved1" rwaccess="R" range="" description="" resetval="0" end="8" begin="15" width="8"/>
        <bitfield id="CLR_COUNT" rwaccess="RW" range="" description="This bit when set will clear the contents of the counter. This bit is autocleared.&#xD;&#xA;Note that SW write to this register should have only one of the 3 control bit set.&#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="16" begin="16" width="1"/>
        <bitfield id="DEC_COUNT" rwaccess="RW" range="" description="This bit when set will decrement the contents of the counter. This bit is autocleared.&#xD;&#xA;Note that SW write to this register should have only one of the 3 control bit set.&#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="17" begin="17" width="1"/>
        <bitfield id="INC_COUNT" rwaccess="RW" range="" description="This bit when set will increment the contents of the counter. This bit is autocleared.&#xD;&#xA;Note that SW write to this register should have only one of the 3 control bit set.&#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="18" begin="18" width="1"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="19" begin="31" width="13"/>
    </register>
    <register id="__ALL___ICONT_SEM_COUNT5" description="General purpose counter for SW use. SEM_COUNT5_NZ event will be set whenever the counter value is non-zero.&#xD;&#xA;Typically used for semaphore between CPUs, HWA via interrupt and/or events or polling." width="32" offset="0x294" page = "1" acronym="__ALL___ICONT_SEM_COUNT5">
        <bitfield id="COUNT_VALUE" rwaccess="R" range="" description="Provides the current value of the counter.&#xD;&#xA;Counter value if updated based on the following SW writes &#xD;&#xA;   1) Clears the count value when CLR_COUNT bitfield is set to 1.&#xD;&#xA;   2) Decrements by 1 till it reaches 0 when DEC_COUNT bitfield is set to 1.&#xD;&#xA;   3) Increments by 1 till it reaches all-ones count when INC_COUNT bitfield is set to 1." resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="reserved1" rwaccess="R" range="" description="" resetval="0" end="8" begin="15" width="8"/>
        <bitfield id="CLR_COUNT" rwaccess="RW" range="" description="This bit when set will clear the contents of the counter. This bit is autocleared.&#xD;&#xA;Note that SW write to this register should have only one of the 3 control bit set.&#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="16" begin="16" width="1"/>
        <bitfield id="DEC_COUNT" rwaccess="RW" range="" description="This bit when set will decrement the contents of the counter. This bit is autocleared.&#xD;&#xA;Note that SW write to this register should have only one of the 3 control bit set.&#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="17" begin="17" width="1"/>
        <bitfield id="INC_COUNT" rwaccess="RW" range="" description="This bit when set will increment the contents of the counter. This bit is autocleared.&#xD;&#xA;Note that SW write to this register should have only one of the 3 control bit set.&#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="18" begin="18" width="1"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="19" begin="31" width="13"/>
    </register>
    <register id="__ALL___DM_SOURCEADD_0" description="" width="32" offset="0x2A0" page = "1" acronym="__ALL___DM_SOURCEADD_0">
        <bitfield id="Src_Addr" rwaccess="RW" range="" description="" resetval="0" end="0" begin="31" width="32"/>
    </register>
    <register id="__ALL___DM_DESTADD_0" description="" width="32" offset="0x2A4" page = "1" acronym="__ALL___DM_DESTADD_0">
        <bitfield id="DST_ADDR" rwaccess="RW" range="" description="Destination Address" resetval="0" end="0" begin="31" width="32"/>
    </register>
    <register id="__ALL___DM_CONTEXT_0" description="A new DM transfer can be scheduled only if this register has been written by SW." width="32" offset="0x2A8" page = "1" acronym="__ALL___DM_CONTEXT_0">
        <bitfield id="NB_BYTE" rwaccess="RW" range="" description="Number of bytes to transfer (must be a multiple of 128bits)" resetval="0" end="0" begin="15" width="16"/>
        <bitfield id="CMD_TYPE" rwaccess="RW" range="" description="Type of Transfer&#xD;&#xA;0x0: Transfer from SL2 to DTCM&#xD;&#xA;0x1: Transfer from SL2 to ITCM&#xD;&#xA;0x2: Transfer from DTCM to transversal port to VDMA&#xD;&#xA;0x3: Transfer from SL2 to transversal port to VDMA&#xD;&#xA;0x4: Transfer from DTCM to SL2&#xD;&#xA;0x5: Reserved&#xD;&#xA;0x6: Reserved&#xD;&#xA;0x7: Reserved" resetval="0" end="16" begin="18" width="3"/>
        <bitfield id="START_TYPE" rwaccess="RW" range="" description="0x0: Transfer is scheduled immediately on write to this register.&#xD;&#xA;0x1: Transfer is scheduled on receiving Logical channel Start notification from SBH." resetval="0" end="19" begin="19" width="1"/>
        <bitfield id="Reserved" rwaccess="RW" range="" description="" resetval="0" end="20" begin="31" width="12"/>
    </register>
    <register id="__ALL___DM_STATUS_0" description="DataMover Status register." width="32" offset="0x2AC" page = "1" acronym="__ALL___DM_STATUS_0">
        <bitfield id="STATUS" rwaccess="R" range="" description="0x00 : Logical channel is in IDLE/Transfer complete state. Descriptor can be programmed.&#xD;&#xA;0x01 : Logical channel is in waiting for Task Start notification from SBH.&#xD;&#xA;0x10 : Logical channel is either queued for transfer or transfer is ongoing.&#xD;&#xA;0x11 : Reserved." resetval="0" end="0" begin="1" width="2"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="2" begin="31" width="30"/>
    </register>
    <register id="__ALL___DM_SOURCEADD_1" description="" width="32" offset="0x2B0" page = "1" acronym="__ALL___DM_SOURCEADD_1">
        <bitfield id="Src_Addr" rwaccess="RW" range="" description="" resetval="0" end="0" begin="31" width="32"/>
    </register>
    <register id="__ALL___DM_DESTADD_1" description="" width="32" offset="0x2B4" page = "1" acronym="__ALL___DM_DESTADD_1">
        <bitfield id="Dest_Addr" rwaccess="RW" range="" description="" resetval="0" end="0" begin="31" width="32"/>
    </register>
    <register id="__ALL___DM_CONTEXT_1" description="" width="32" offset="0x2B8" page = "1" acronym="__ALL___DM_CONTEXT_1">
        <bitfield id="NB_BYTE" rwaccess="RW" range="" description="Number of bytes to transfer (must be a multiple of 128bits)" resetval="0" end="0" begin="15" width="16"/>
        <bitfield id="CMD_TYPE" rwaccess="RW" range="" description="Type of Transfer&#xD;&#xA;0x0: Transfer from SL2 to DTCM&#xD;&#xA;0x1: Transfer from SL2 to ITCM&#xD;&#xA;0x2: Transfer from DTCM to transversal port to VDMA&#xD;&#xA;0x3: Transfer from SL2 to transversal port to VDMA&#xD;&#xA;0x4: Transfer from DTCM to SL2&#xD;&#xA;0x5: Reserved&#xD;&#xA;0x6: Reserved&#xD;&#xA;0x7: Reserved" resetval="0" end="16" begin="18" width="3"/>
        <bitfield id="START_TYPE" rwaccess="RW" range="" description="0x0: Transfer is scheduled immediately on write to this register.&#xD;&#xA;0x1: Transfer is scheduled on receiving Logical channel Start notification from SBH." resetval="0" end="19" begin="19" width="1"/>
        <bitfield id="Reserved" rwaccess="RW" range="" description="" resetval="0" end="20" begin="31" width="12"/>
    </register>
    <register id="__ALL___DM_STATUS_1" description="" width="32" offset="0x2BC" page = "1" acronym="__ALL___DM_STATUS_1">
        <bitfield id="STATUS" rwaccess="R" range="" description="0x00 : Logical channel is in IDLE/Transfer complete state. Descriptor can be programmed.&#xD;&#xA;0x01 : Logical channel is in waiting for Task Start notification from SBH.&#xD;&#xA;0x10 : Logical channel is either queued for transfer or transfer is ongoing.&#xD;&#xA;0x11 : Reserved." resetval="0" end="0" begin="1" width="2"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="2" begin="31" width="30"/>
    </register>
    <register id="__ALL___DM_SOURCEADD_2" description="" width="32" offset="0x2C0" page = "1" acronym="__ALL___DM_SOURCEADD_2">
        <bitfield id="Src_Addr" rwaccess="RW" range="" description="" resetval="0" end="0" begin="31" width="32"/>
    </register>
    <register id="__ALL___DM_DESTADD_2" description="" width="32" offset="0x2C4" page = "1" acronym="__ALL___DM_DESTADD_2">
        <bitfield id="Dest_Addr" rwaccess="RW" range="" description="" resetval="0" end="0" begin="31" width="32"/>
    </register>
    <register id="__ALL___DM_CONTEXT_2" description="" width="32" offset="0x2C8" page = "1" acronym="__ALL___DM_CONTEXT_2">
        <bitfield id="NB_BYTE" rwaccess="RW" range="" description="Number of bytes to transfer (must be a multiple of 128bits)" resetval="0" end="0" begin="15" width="16"/>
        <bitfield id="CMD_TYPE" rwaccess="RW" range="" description="Type of Transfer&#xD;&#xA;0x0: Transfer from SL2 to DTCM&#xD;&#xA;0x1: Transfer from SL2 to ITCM&#xD;&#xA;0x2: Transfer from DTCM to transversal port to VDMA&#xD;&#xA;0x3: Transfer from SL2 to transversal port to VDMA&#xD;&#xA;0x4: Transfer from DTCM to SL2&#xD;&#xA;0x5: Reserved&#xD;&#xA;0x6: Reserved&#xD;&#xA;0x7: Reserved" resetval="0" end="16" begin="18" width="3"/>
        <bitfield id="START_TYPE" rwaccess="RW" range="" description="0x0: Transfer is scheduled immediately on write to this register.&#xD;&#xA;0x1: Transfer is scheduled on receiving Logical channel Start notification from SBH." resetval="0" end="19" begin="19" width="1"/>
        <bitfield id="Reserved" rwaccess="RW" range="" description="" resetval="0" end="20" begin="31" width="12"/>
    </register>
    <register id="__ALL___DM_STATUS_2" description="" width="32" offset="0x2CC" page = "1" acronym="__ALL___DM_STATUS_2">
        <bitfield id="STATUS" rwaccess="R" range="" description="0x00 : Logical channel is in IDLE/Transfer complete state. Descriptor can be programmed.&#xD;&#xA;0x01 : Logical channel is in waiting for Task Start notification from SBH.&#xD;&#xA;0x10 : Logical channel is either queued for transfer or transfer is ongoing.&#xD;&#xA;0x11 : Reserved." resetval="0" end="0" begin="1" width="2"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="2" begin="31" width="30"/>
    </register>
    <register id="__ALL___DM_SOURCEADD_3" description="" width="32" offset="0x2D0" page = "1" acronym="__ALL___DM_SOURCEADD_3">
        <bitfield id="Src_Addr" rwaccess="RW" range="" description="" resetval="0" end="0" begin="31" width="32"/>
    </register>
    <register id="__ALL___DM_DESTADD_3" description="" width="32" offset="0x2D4" page = "1" acronym="__ALL___DM_DESTADD_3">
        <bitfield id="Dest_Addr" rwaccess="RW" range="" description="" resetval="0" end="0" begin="31" width="32"/>
    </register>
    <register id="__ALL___DM_CONTEXT_3" description="" width="32" offset="0x2D8" page = "1" acronym="__ALL___DM_CONTEXT_3">
        <bitfield id="NB_BYTE" rwaccess="RW" range="" description="Number of bytes to transfer (must be a multiple of 128bits)" resetval="0" end="0" begin="15" width="16"/>
        <bitfield id="CMD_TYPE" rwaccess="RW" range="" description="Type of Transfer&#xD;&#xA;0x0: Transfer from SL2 to DTCM&#xD;&#xA;0x1: Transfer from SL2 to ITCM&#xD;&#xA;0x2: Transfer from DTCM to transversal port to VDMA&#xD;&#xA;0x3: Transfer from SL2 to transversal port to VDMA&#xD;&#xA;0x4: Transfer from DTCM to SL2&#xD;&#xA;0x5: Reserved&#xD;&#xA;0x6: Reserved&#xD;&#xA;0x7: Reserved" resetval="0" end="16" begin="18" width="3"/>
        <bitfield id="START_TYPE" rwaccess="RW" range="" description="0x0: Transfer is scheduled immediately on write to this register.&#xD;&#xA;0x1: Transfer is scheduled on receiving Logical channel Start notification from SBH." resetval="0" end="19" begin="19" width="1"/>
        <bitfield id="Reserved" rwaccess="RW" range="" description="" resetval="0" end="20" begin="31" width="12"/>
    </register>
    <register id="__ALL___DM_STATUS_3" description="" width="32" offset="0x2DC" page = "1" acronym="__ALL___DM_STATUS_3">
        <bitfield id="STATUS" rwaccess="R" range="" description="0x00 : Logical channel is in IDLE/Transfer complete state. Descriptor can be programmed.&#xD;&#xA;0x01 : Logical channel is in waiting for Task Start notification from SBH.&#xD;&#xA;0x10 : Logical channel is either queued for transfer or transfer is ongoing.&#xD;&#xA;0x11 : Reserved." resetval="0" end="0" begin="1" width="2"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="2" begin="31" width="30"/>
    </register>
    <register id="__ALL___SW_TASK_PROFILE" description="This register enables debug/profiling of upto 16 SW task's Start &amp; End events." width="32" offset="0x2F0" page = "1" acronym="__ALL___SW_TASK_PROFILE">
        <bitfield id="Start_Event" rwaccess="RW" range="" description="Set to 1 to send Start event notification." resetval="0" end="0" begin="15" width="16"/>
        <bitfield id="End_Event" rwaccess="RW" range="" description="Set to 1 to send End event notification." resetval="0" end="16" begin="31" width="16"/>
    </register>
    <register id="__ALL___WDT_CTRL" description="WatchDog Timer Control register" width="32" offset="0x2F4" page = "1" acronym="__ALL___WDT_CTRL">
        <bitfield id="wdt_enable" rwaccess="RW" range="" description="Enables WatchDogTimer to downcount and to generate interrupt when it reaches 0.&#xD;&#xA;Transition from low to high state of this bit, preloads the watchdog timer with the contents of WDT_PRELOAD. The WatchDogTimer will downcount subsequently. On reaching 0, it will generate an interrupt.&#xD;&#xA;Disabling WatchDogTimer will clear the interrupt." resetval="0" end="0" begin="0" width="1"/>
        <bitfield id="Reserved" rwaccess="R" range="" description="" resetval="0" end="1" begin="31" width="31"/>
    </register>
    <register id="__ALL___WDT_PRELOAD" description="WatchDogTimer preload value. Contents of this register is loaded into the timer on low to high transition of WDT_ENABLE register bit." width="32" offset="0x2F8" page = "1" acronym="__ALL___WDT_PRELOAD">
        <bitfield id="preload" rwaccess="RW" range="" description="" resetval="4294967295" end="0" begin="31" width="32"/>
    </register>
    <register id="__ALL___WDT_COUNT" description="Current value of the WatchDogTimer." width="32" offset="0x2FC" page = "1" acronym="__ALL___WDT_COUNT">
        <bitfield id="COUNT" rwaccess="R" range="" description="Current value of the WatchDogTimer." resetval="0" end="0" begin="31" width="32"/>
    </register>
    <register id="__ALL___ICONT_CME_CTRL0" description="Provides read access to CME credits received count.&#xD;&#xA;Provides write access to assert po_cme_done signal.&#xD;&#xA;Provides write access to decrement the credit counter." width="32" offset="0x300" page = "1" acronym="__ALL___ICONT_CME_CTRL0">
        <bitfield id="Credit_count" rwaccess="R" range="" description="" resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="Reserved" rwaccess="RW" range="" description="" resetval="0" end="8" begin="15" width="8"/>
        <bitfield id="Dec_credit_count" rwaccess="RW" range="" description="Write 1 to decrement the credit counter by one. Writing 0 has no effect. &#xD;&#xA;This bit is autocleared.&#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="16" begin="16" width="1"/>
        <bitfield id="CME_Done" rwaccess="RW" range="" description="Write 1 to assert the PO_CME_DONE interface. HW will hold the PO_CME_DONE high for 4 clock cycles and then de-assert it. &#xD;&#xA;This bitfield is cleared by HW when PO_CME_DONE is de-asserted." resetval="0" end="19" begin="19" width="1"/>
        <bitfield id="Reserved2" rwaccess="RW" range="" description="" resetval="0" end="17" begin="18" width="2"/>
        <bitfield id="Reserved3" rwaccess="RW" range="" description="" resetval="0" end="20" begin="31" width="12"/>
    </register>
    <register id="__ALL___ICONT_CME_CTRL1" description="Provides read access to CME credits received count.&#xD;&#xA;Provides write access to assert po_cme_done signal.&#xD;&#xA;Provides write access to decrement the credit counter." width="32" offset="0x304" page = "1" acronym="__ALL___ICONT_CME_CTRL1">
        <bitfield id="Credit_count" rwaccess="R" range="" description="" resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="Reserved" rwaccess="RW" range="" description="" resetval="0" end="8" begin="15" width="8"/>
        <bitfield id="Dec_credit_count" rwaccess="RW" range="" description="Write 1 to decrement the credit counter by one. Writing 0 has no effect. &#xD;&#xA;This bit is autocleared.&#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="16" begin="16" width="1"/>
        <bitfield id="CME_Done" rwaccess="RW" range="" description="Write 1 to assert the PO_CME_DONE interface. HW will hold the PO_CME_DONE high for 4 clock cycles and then de-assert it. &#xD;&#xA;This bitfield is cleared by HW when PO_CME_DONE is de-asserted." resetval="0" end="19" begin="19" width="1"/>
        <bitfield id="Reserved2" rwaccess="RW" range="" description="" resetval="0" end="17" begin="18" width="2"/>
        <bitfield id="Reserved3" rwaccess="RW" range="" description="" resetval="0" end="20" begin="31" width="12"/>
    </register>
    <register id="__ALL___ICONT_CME_CTRL2" description="Provides read access to CME credits received count.&#xD;&#xA;Provides write access to assert po_cme_done signal.&#xD;&#xA;Provides write access to decrement the credit counter." width="32" offset="0x308" page = "1" acronym="__ALL___ICONT_CME_CTRL2">
        <bitfield id="Credit_count" rwaccess="R" range="" description="" resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="Reserved" rwaccess="RW" range="" description="" resetval="0" end="8" begin="15" width="8"/>
        <bitfield id="Dec_credit_count" rwaccess="RW" range="" description="Write 1 to decrement the credit counter by one. Writing 0 has no effect. &#xD;&#xA;This bit is autocleared.&#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="16" begin="16" width="1"/>
        <bitfield id="CME_Done" rwaccess="RW" range="" description="Write 1 to assert the PO_CME_DONE interface. HW will hold the PO_CME_DONE high for 4 clock cycles and then de-assert it. &#xD;&#xA;This bitfield is cleared by HW when PO_CME_DONE is de-asserted." resetval="0" end="19" begin="19" width="1"/>
        <bitfield id="Reserved2" rwaccess="RW" range="" description="" resetval="0" end="17" begin="18" width="2"/>
        <bitfield id="Reserved3" rwaccess="RW" range="" description="" resetval="0" end="20" begin="31" width="12"/>
    </register>
    <register id="__ALL___ICONT_CME_CTRL3" description="Provides read access to CME credits received count.&#xD;&#xA;Provides write access to assert po_cme_done signal.&#xD;&#xA;Provides write access to decrement the credit counter." width="32" offset="0x30C" page = "1" acronym="__ALL___ICONT_CME_CTRL3">
        <bitfield id="Credit_count" rwaccess="R" range="" description="" resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="Reserved" rwaccess="RW" range="" description="" resetval="0" end="8" begin="15" width="8"/>
        <bitfield id="Dec_credit_count" rwaccess="RW" range="" description="Write 1 to decrement the credit counter by one. Writing 0 has no effect. &#xD;&#xA;This bit is autocleared.&#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="16" begin="16" width="1"/>
        <bitfield id="CME_Done" rwaccess="RW" range="" description="Write 1 to assert the PO_CME_DONE interface. HW will hold the PO_CME_DONE high for 4 clock cycles and then de-assert it. &#xD;&#xA;This bitfield is cleared by HW when PO_CME_DONE is de-asserted." resetval="0" end="19" begin="19" width="1"/>
        <bitfield id="Reserved2" rwaccess="RW" range="" description="" resetval="0" end="17" begin="18" width="2"/>
        <bitfield id="Reserved3" rwaccess="RW" range="" description="" resetval="0" end="20" begin="31" width="12"/>
    </register>
    <register id="__ALL___ICONT_CME_CTRL4" description="Provides read access to CME credits received count.&#xD;&#xA;Provides write access to assert po_cme_done signal.&#xD;&#xA;Provides write access to decrement the credit counter." width="32" offset="0x310" page = "1" acronym="__ALL___ICONT_CME_CTRL4">
        <bitfield id="Credit_count" rwaccess="R" range="" description="" resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="Reserved" rwaccess="RW" range="" description="" resetval="0" end="8" begin="15" width="8"/>
        <bitfield id="Dec_credit_count" rwaccess="RW" range="" description="Write 1 to decrement the credit counter by one. Writing 0 has no effect. &#xD;&#xA;This bit is autocleared.&#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="16" begin="16" width="1"/>
        <bitfield id="CME_Done" rwaccess="RW" range="" description="Write 1 to assert the PO_CME_DONE interface. HW will hold the PO_CME_DONE high for 4 clock cycles and then de-assert it. &#xD;&#xA;This bitfield is cleared by HW when PO_CME_DONE is de-asserted." resetval="0" end="19" begin="19" width="1"/>
        <bitfield id="Reserved2" rwaccess="RW" range="" description="" resetval="0" end="17" begin="18" width="2"/>
        <bitfield id="Reserved3" rwaccess="RW" range="" description="" resetval="0" end="20" begin="31" width="12"/>
    </register>
    <register id="__ALL___ICONT_CME_CTRL5" description="Provides read access to CME credits received count.&#xD;&#xA;Provides write access to assert po_cme_done signal.&#xD;&#xA;Provides write access to decrement the credit counter." width="32" offset="0x314" page = "1" acronym="__ALL___ICONT_CME_CTRL5">
        <bitfield id="Credit_count" rwaccess="R" range="" description="" resetval="0" end="0" begin="7" width="8"/>
        <bitfield id="Reserved" rwaccess="RW" range="" description="" resetval="0" end="8" begin="15" width="8"/>
        <bitfield id="Dec_credit_count" rwaccess="RW" range="" description="Write 1 to decrement the credit counter by one. Writing 0 has no effect. &#xD;&#xA;This bit is autocleared.&#xD;&#xA;(Note: The value will be updated in next cycle)" resetval="0" end="16" begin="16" width="1"/>
        <bitfield id="CME_Done" rwaccess="RW" range="" description="Write 1 to assert the PO_CME_DONE interface. HW will hold the PO_CME_DONE high for 4 clock cycles and then de-assert it. &#xD;&#xA;This bitfield is cleared by HW when PO_CME_DONE is de-asserted." resetval="0" end="19" begin="19" width="1"/>
        <bitfield id="Reserved2" rwaccess="RW" range="" description="" resetval="0" end="17" begin="18" width="2"/>
        <bitfield id="Reserved3" rwaccess="RW" range="" description="" resetval="0" end="20" begin="31" width="12"/>
    </register>
    <register id="__ALL___ICONT_CME_CONFIG" description="Credit Management Engine config.&#xD;&#xA;This register enables (when set to 1) the counters, interrupts &amp; interface associated to CME." width="32" offset="0x31C" page = "1" acronym="__ALL___ICONT_CME_CONFIG">
        <bitfield id="Enable_CME_0" rwaccess="RW" range="" description="Enables Pi_cme_start_0, Po_cme_done_0, ICONT_CME_CTRL0 and connects the interrupt to local intc interrupt map." resetval="0" end="0" begin="0" width="1"/>
        <bitfield id="Enable_CME_1" rwaccess="RW" range="" description="Enables Pi_cme_start_1, Po_cme_done_1, ICONT_CME_CTRL1 and connects the interrupt to local intc interrupt map." resetval="0" end="1" begin="1" width="1"/>
        <bitfield id="Enable_CME_2" rwaccess="RW" range="" description="Enables Pi_cme_start_2, Po_cme_done_2, ICONT_CME_CTRL2 and connects the interrupt to local intc interrupt map." resetval="0" end="2" begin="2" width="1"/>
        <bitfield id="Enable_CME_3" rwaccess="RW" range="" description="Enables Pi_cme_start_3, Po_cme_done_3, ICONT_CME_CTRL3 and connects the interrupt to local intc interrupt map." resetval="0" end="3" begin="3" width="1"/>
        <bitfield id="Enable_CME_4" rwaccess="RW" range="" description="Enables Pi_cme_start_4, Po_cme_done_4, ICONT_CME_CTRL4 and connects the interrupt to local intc interrupt map." resetval="0" end="4" begin="4" width="1"/>
        <bitfield id="Enable_CME_5" rwaccess="RW" range="" description="Enables Pi_cme_start_5, Po_cme_done_5, ICONT_CME_CTRL5 and connects the interrupt to local intc interrupt map." resetval="0" end="5" begin="5" width="1"/>
        <bitfield id="Reserved" rwaccess="RW" range="" description="" resetval="0" end="6" begin="31" width="26"/>
</register>
</module>

