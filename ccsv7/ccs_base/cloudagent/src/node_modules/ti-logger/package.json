{
  "name": "ti-logger",
  "description": "A TI logging library for Node.js and Node-webkit",
  "version": "0.1.1",
  "private": true,
  "author": {
    "name": "Boualem S.",
    "email": "boualem@ti.com"
  },
  "keywords": [
    "logging",
    "tracing"
  ],
  "dependencies": {
    "winston": "0.7.x",
    "util": "0.10.x",
    "mkdirp": "0.5.x",
    "ti-util": "git://gitorious.design.ti.com/guicomposer-nw/ti-util.git"
  },
  "devDependencies": {
    "mocha": "0.3.x"
  },
  "main": "./lib/ti-logger",
  "engines": {
    "node": ">= 0.6.0"
  },
  "readmeFilename": "README.md",
  "readme": "# ti-logger \r\n\r\nA TI logging library for node.js and Node-Webkit\r\n\r\n## Motivation\r\nti-logger is a logging and tracing library.\r\nIt supports logging to the console and/or to a file.\r\n\r\nWhile there are many logging libraries, none support some of the special requirements ti-logger adresses.\r\nThis include:\r\n\r\n* The ability to specify a source when logging.\r\n* The ability to specify for each source the logging-level\r\n* The ability to have different logging levels for the console and for the file.\r\n* The ability to configure the logger using a config-file\r\n* etc\r\n\r\n## Installation\r\n\r\n```bash\r\nnpm install git://gitorious.design.ti.com/guicomposer-nw/ti-logger.git\r\n```\r\n\r\n## Usage\r\nThe ti-logger module .\r\n\r\n``` js\r\n  var logger = require('ti-logger')();\r\n\r\n  logger.error(\"this is a sample error');\r\n```\r\n\r\n## Logging Levels\r\nti-logger define the following logging and tracing levels:\r\n\r\n* off\r\n* error \r\n* warn\r\n* info\r\n* trace\r\n* tracefiner\r\n* tracefinest\r\n\r\n\r\n### Using The Logging Levels\r\n\r\n``` js\r\n  var logger = require('ti-logger')();\r\n  \r\n  logger.error(\"my error messsage\");\r\n  logger.warn(\"my warning messsage\");\r\n  logger.info(\"my info messsage\");\r\n  logger.trace(\"my trace messsage\");\r\n  logger.tracefiner(\"my tracefiner messsage\");\r\n  logger.tracefinest(\"my tracefinest messsage\");\r\n```\r\n\r\n## configuration\r\n\r\nti-logger is very flexible and may be configured in several ways:\r\n\r\n* via a configuration file\r\n* via a configuration Object\r\n\r\n###The configuration file\r\n\r\nThe default location for the configuration file is under: <userhome>/ti/<appname>\r\nThe config file name name is: log-config.json.\r\nThis file is loaded when no arguments are specified in the require derictive:\r\n\r\n``` js\r\n  // no argument to the require -> load default config file\r\n  var logger = require('ti-logger')();\r\n  \r\n```\r\n\r\nThe user have the option of specifying the location of the config path.\r\n\r\n``` js\r\n  // config file is loaded from specified filename instead of the default one.\r\n  var myConfigFile = 'c:/dir1/dir2/myAppDir/myOwnConfig.json\";\r\n  var logger = require('ti-logger')(myConfigFile);\r\n  \r\n```\r\n\r\nA typical content of the file will look like this:\r\n\r\n``` js\r\n\t{\r\n\t\t\"fileLogger\":\r\n\t\t{\r\n\t\t\t\"json\": false,\r\n\t\t\t\"timestamp\":true,\r\n\t\t\t\"maxRollingFiles\": 7,\t\r\n\t\t\t\"maxFileSize\": 3145728,\r\n\t\t\t\"levels\": \r\n\t\t\t{\r\n\t\t\t\t\"defaultLevel\": \"trace\",\r\n\t\t\t\t\"module1\":\"warn\",\r\n\t\t\t\t\"module2\":\"trace\"\t\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"consoleLogger\":\r\n\t\t{\r\n\t\t\t\"json\": false,\r\n\t\t\t\"timestamp\":true,\r\n\t\t\t\"levels\": \r\n\t\t\t{\r\n\t\t\t\t\"defaultLevel\": \"trace\",\r\n\t\t\t\t\"module1\":\"info\",\r\n\t\t\t\t\"module3\":\"trace\"\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n```\r\n\r\nThis file is loaded when the file require('ti-logger') is executed.\r\n\r\n### the configuration Object\r\nWhen a configuration file may not be used, a configuration Object may be passed to the module as an arguments. In this case the default configuration file is ignored.\r\n\r\n``` js\r\n\tvar myConfig = \r\n\t{\r\n\t\t\"fileLogger\":\r\n\t\t{\r\n\t\t\t\"logDirectory\":\"c:/temp/mydirectory/logs\",\r\n\t\t\t\"logFilename\":\"myApp.log\",\r\n\t\t\t\"json\": true,\r\n\t\t\t\"timestamp\":true,\r\n\t\t\t\"maxRollingFiles\": 5,\t\r\n\t\t\t\"maxFileSize\": 3145728,\r\n\t\t\t\"levels\": \r\n\t\t\t{\r\n\t\t\t\t\"defaultLevel\": \"trace\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"consoleLogger\":\r\n\t\t{\r\n\t\t\t\"json\": false,\r\n\t\t\t\"timestamp\":false,\r\n\t\t\t\"levels\": \r\n\t\t\t{\r\n\t\t\t\t\"defaultLevel\": \"trace\"\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\tvar logger = require('ti-logger')(myConfig);\r\n```\r\n\r\n\r\n### the configuration parameters\r\n\r\n* __logDirectory__:   The directory where log files will reside\r\n* __logFilename__:   the name of the log file.\r\n* __json__:  controls if the output is json based or not.\r\n* __timestamp__:   controls if the log message will contain the date/time in an ISO format (example 2014-06-06T13:37:21.249Z)\r\n* __maxRollingFiles__:   The maximum number of rolling log files. When a file reaches the maxFileSize, a new file is created. \r\n* __maxFileSize__:   The maximum size in bytes of the log file.\r\n* __defaultLevel__:   This is the default consoleLogger or fileLogger logging level. This may be any of: *off, error, warn, info, trace, tracefiner, tracefinest* \r\n\r\n### the configuration defaults\r\nWhen a config parameters is not specified in the configuration, the following defaults are assumed:\r\n\r\n* __logDirectory__:   <userhome>/ti/<appname>/logs\r\n* __logFilename__:   mainLog.log\r\n* __json__:  **true** for fileLogger and *false* for the consoleLogger\r\n* __timestamp__:  true* for fileLogger and *false* for the consoleLogger \r\n* __maxRollingFiles__:   5\r\n* __maxFileSize__:   3145728 (in bytes) or 3MB\r\n* __defaultLevel__:   *warn* for fileLogger and *off* for the consoleLogger\r\n\r\n### Runtime Configuration changes\r\nThis is typically not required as we expect the configutaion to not change at runtime.\r\nHowever, if need arises, there are two ways to make changes to the configuration while the application is running:\r\n\r\n####By making changes to the configuration file: \r\nWhen changes are made to the active configuration file and the file is then saved; the content of the file is automatically read and the changes are applied dynamically.\r\n\r\n####Configuration API\r\nIn the rare case where consoleLogger level or fileLevel needs to be programatically changed at runtime based on some criteria, an API has been provided to do that:\r\n\r\n``` js\r\n  var logger = require('ti-logger')(configurationObject);\r\n  ....\r\n  ....\r\n  if(condition_1)\r\n  {\r\n\tlogger.setConfiguration(configObject1);\r\n  }\r\n  else if(condition_2)\r\n  {\r\n\tlogger.setConfiguration(configObject2);\r\n  }\r\n  else if(someOtherCondition)\r\n  {\r\n\tlogger.setConfiguration(configObject3);\r\n  }\r\n```\r\n\r\n### Configuration precedence\r\n\r\nSince configuration may be applied in different ways, this define what takes precedence:\r\n\r\n1. ConfigurationObject or Configuration-file as argument to the require\r\n2. Configuration file under <userHome>/ti/appname\r\n\r\n\r\n###The Source parameter\r\n\r\nWhen logging a message, the developer may choose to include a source. The source may be a moduke name or a feature-name or anything else the developer wants it to be.\r\nIn this case the API call would look like this:\r\n\r\n``` js\r\n  var logger = require('ti-logger')();\r\n\r\n  logger.error(\"sourcename\", \"this is a sample error');\r\n```\r\n\r\n### Specifying Source levels\r\nThe developer has the option of specifying a logging level in the configuration. The source logging level may be specified for the fileLogger, the consoleLogger or both.\r\n\r\n``` js\r\n\t{\r\n\t\t\"fileLogger\":\r\n\t\t{\r\n\t\t\t\"levels\": \r\n\t\t\t{\r\n\t\t\t\t\"defaultLevel\": \"error\",\r\n\t\t\t\t\"source1\":\"warn\",\r\n\t\t\t\t\"source2\":\"trace\"\t\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"consoleLogger\":\r\n\t\t{\r\n\t\t\t\"levels\": \r\n\t\t\t{\r\n\t\t\t\t\"defaultLevel\": \"off\",\r\n\t\t\t\t\"source1\":\"info\",\r\n\t\t\t\t\"source2\":\"warn\",\r\n\t\t\t\t\"source3\":\"trace\"\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n```\r\n\r\n",
  "_id": "ti-logger@0.1.1",
  "_shasum": "8ed977490f6df9e3ac0bd3367ed2f04b9800c395",
  "_resolved": "git://gitorious.design.ti.com/guicomposer-nw/ti-logger.git#b6101055f641cffacddcb631d41a5f9f7606353e",
  "_from": "git://gitorious.design.ti.com/guicomposer-nw/ti-logger.git"
}
