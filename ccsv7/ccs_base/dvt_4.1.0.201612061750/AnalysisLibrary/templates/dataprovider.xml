<?xml version="1.0" encoding="UTF-8"?>
<project default="enable" basedir=".">

	<!-- 
		Define the following properties in the importing control.xml file: 
			dvt.activity: The name of the activity for this data provider. It appears in the Dashboard and menus.
			dvt.activity.description: A description of what this activity does. It appears in the Dashboard.
			dataProviderName: The name of the data provider in analysis library.
			
		 The template creates a reference to the added data provider called 'dataProviderRef'. This reference can be
		 also used in the control xml. 
		
		Example: 
			<property name="dvt.activity.name" value="Viewers/CSV Viewer"/>
			<property name="dvt.activity.description" value="Opens a CSV file."/>
			<property name="dataProviderName" value="CsvViewer"/>
	-->
	
	<!-- enable is a built-in DVT target which is executed when the Activity is enabled -->
	<target name="enable" 
		depends="
			preAddDataProvider, 
			addDataProvider, 
			createConfigurationActions,
			createRemoveAction,
			postAddDataProvider,
			createStandardContextMenu,
			createContextMenu
			"/>
	
	<!-- this target may be overridden by the control xml file to perform any custom inilization required 
		 before the data provider is added -->
	<target name="preAddDataProvider">
	</target>

	<!-- Add the data provider. Creates dataProviderRef, a reference to the added data provider which can be 
	     referred to in the control xml -->
	<target name="addDataProvider">
		<!-- enable the Activity -->
		<property name="dvt.enable" value="true"/>
		<!-- add the data provider to the current Analysis Session -->
		<dvt.dataprovider.add id="dataProviderRef" name="${dataProviderName}"/> 
	</target>

	<!-- this target may be overridden by the control xml file to perform any custom inilization required 
		 after the data provider is added -->
	<target name="postAddDataProvider">
	</target>

	<!-- Create the standard menu items required for all data providers -->
	<target name="createStandardContextMenu">
		<makeContextMenu menuid="standardContextMenuRef">
			<menu>
				<!-- Stop: Stop the data provider --> 
				<dvt.menu.context text="Stop">
					<dvt.stop refid="dataProviderRef"/>
				</dvt.menu.context>
				<!-- Clear Data --> 
				<dvt.menu.context text="Clear Data">
					<dvt.cleardata refid="dataProviderRef"/>
				</dvt.menu.context>
				<!-- Reload data: Re-run the data provider > 
				<dvt.menu.context text="Reload Data">
					<dvt.start refid="dataProviderRef"/>
				</dvt.menu.context-->
			</menu>
		</makeContextMenu>
	</target>

	<!-- This target may be overridden by the control xml file to add any custom menu items required for the data provider --> 
	<target name="createContextMenu">
	</target>
	
	<!-- This target may be overridden by the control xml file to add configuration actions ot the dashboard --> 
	<target name="createConfigurationActions">
	</target>

	<target name="checkCreateRemoveAction">
		<dvt.script language="javascript">
		<![CDATA[
			var activity = project.getReference("dvt.activity");
			var parent = activity.getParent();
			if (parent == null || parent instanceof Packages.com.ti.dvt.control.engine.activities.EmptyActivity)
			{
				project.setProperty("dvt.createRemoveAction", "true");
			}
		]]>
		</dvt.script>  		
	</target>
	<target name="createRemoveAction" depends="checkCreateRemoveAction" if="dvt.createRemoveAction">
		<dvt.status>
			<button text="Close Session" icon="delete.gif" > 			
		        <dvt.remove/>
			</button>
		</dvt.status>
	</target>
	
	<!-- this target may be overridden by the control xml file to perform any custom actions prior to disabling this  
		 data provider -->
	<target name="preDisable">
	</target>

	<!-- disable the Activity -->
	<target name="disable" depends="preDisable">
		<dvt.remove refid="standardContextMenuRef"/>
		<dvt.remove refid="dataProviderRef"/>
	</target>
	
	

	<!-- Macro that creates context menus for all views of the data provider. The menu name is the name of the activity. -->
	<macrodef name="makeContextMenu">
		<attribute name="menuid"/>
		<element name="menu" optional="yes"/>
		<sequential>
			<!-- script language="javascript">
				<![CDATA[ 
					activityName = project.getProperty("dvt.activity.name");
					menuName = activityName.substring(activityName.lastIndexOf("/")+1);
					project.setNewProperty("menuName", menuName);
				]]>
			</script-->
			<dvt.menu.context id="@{menuid}" refid="dataProviderRef" text="${ant.project.name}">
				<menu/>
			</dvt.menu.context>
		</sequential>
	</macrodef>
	
</project>
